

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 02 22:22:10 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F26K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	mediumconst
    76  00FCEA                     __pmediumconst:
    77                           	opt stack 0
    78  00FCEA  00                 	db	0
    79  00FCEB                     _dpowers:
    80                           	opt stack 0
    81  00FCEB  0001               	dw	1
    82  00FCED  000A               	dw	10
    83  00FCEF  0064               	dw	100
    84  00FCF1  03E8               	dw	1000
    85  00FCF3  2710               	dw	10000
    86  00FCF5                     __end_of_dpowers:
    87                           	opt stack 0
    88  0000                     _CCPTMRS1bits	set	3912
    89  0000                     _CCPR4H	set	3929
    90  0000                     _CCPR4L	set	3928
    91  0000                     _CCP4CON	set	3927
    92  0000                     _ANSELC	set	3898
    93  0000                     _ANSELB	set	3897
    94  0000                     _ANSELA	set	3896
    95  0000                     _T2CONbits	set	4026
    96  0000                     _TMR2	set	4028
    97  0000                     _PR2	set	4027
    98  0000                     _T2CON	set	4026
    99  0000                     _SSP1STATbits	set	4039
   100  0000                     _SSP1BUF	set	4041
   101  0000                     _SSP1CON1bits	set	4038
   102  0000                     _SSP1ADD	set	4040
   103  0000                     _SSP1CON1	set	4038
   104  0000                     _SSP1STAT	set	4039
   105  0000                     _OSCTUNE	set	3995
   106  0000                     _OSCCON2	set	4050
   107  0000                     _OSCCON	set	4051
   108  0000                     _INTCON2bits	set	4081
   109  0000                     _TRISC	set	3988
   110  0000                     _WPUB	set	3937
   111  0000                     _TRISB	set	3987
   112  0000                     _LATB	set	3978
   113  0000                     _TRISA	set	3986
   114  0000                     _LATA	set	3977
   115  0000                     _TXREG1	set	4013
   116  0000                     _RCREG1	set	4014
   117  0000                     _RC1STAbits	set	4011
   118  0000                     _PIR1bits	set	3998
   119  0000                     _SPBRGH1	set	4016
   120  0000                     _SPBRG1	set	4015
   121  0000                     _TX1STA	set	4012
   122  0000                     _RC1STA	set	4011
   123  0000                     _BAUD1CON	set	4024
   124  0000                     _LATC	set	3979
   125  00FCF5                     STR_12:
   126                           
   127                           ; BSR set to: 15
   128  00FCF5  44                 	db	68	;'D'
   129  00FCF6  69                 	db	105	;'i'
   130  00FCF7  67                 	db	103	;'g'
   131  00FCF8  69                 	db	105	;'i'
   132  00FCF9  74                 	db	116	;'t'
   133  00FCFA  61                 	db	97	;'a'
   134  00FCFB  72                 	db	114	;'r'
   135  00FCFC  65                 	db	101	;'e'
   136  00FCFD  20                 	db	32
   137  00FCFE  69                 	db	105	;'i'
   138  00FCFF  6E                 	db	110	;'n'
   139  00FD00  76                 	db	118	;'v'
   140  00FD01  69                 	db	105	;'i'
   141  00FD02  6F                 	db	111	;'o'
   142  00FD03  20                 	db	32
   143  00FD04  70                 	db	112	;'p'
   144  00FD05  65                 	db	101	;'e'
   145  00FD06  72                 	db	114	;'r'
   146  00FD07  20                 	db	32
   147  00FD08  72                 	db	114	;'r'
   148  00FD09  69                 	db	105	;'i'
   149  00FD0A  74                 	db	116	;'t'
   150  00FD0B  6F                 	db	111	;'o'
   151  00FD0C  72                 	db	114	;'r'
   152  00FD0D  6E                 	db	110	;'n'
   153  00FD0E  61                 	db	97	;'a'
   154  00FD0F  72                 	db	114	;'r'
   155  00FD10  65                 	db	101	;'e'
   156  00FD11  20                 	db	32
   157  00FD12  61                 	db	97	;'a'
   158  00FD13  6C                 	db	108	;'l'
   159  00FD14  6C                 	db	108	;'l'
   160  00FD15  61                 	db	97	;'a'
   161  00FD16  20                 	db	32
   162  00FD17  73                 	db	115	;'s'
   163  00FD18  65                 	db	101	;'e'
   164  00FD19  6C                 	db	108	;'l'
   165  00FD1A  65                 	db	101	;'e'
   166  00FD1B  7A                 	db	122	;'z'
   167  00FD1C  69                 	db	105	;'i'
   168  00FD1D  6F                 	db	111	;'o'
   169  00FD1E  6E                 	db	110	;'n'
   170  00FD1F  65                 	db	101	;'e'
   171  00FD20  20                 	db	32
   172  00FD21  64                 	db	100	;'d'
   173  00FD22  65                 	db	101	;'e'
   174  00FD23  6C                 	db	108	;'l'
   175  00FD24  20                 	db	32
   176  00FD25  64                 	db	100	;'d'
   177  00FD26  75                 	db	117	;'u'
   178  00FD27  74                 	db	116	;'t'
   179  00FD28  79                 	db	121	;'y'
   180  00FD29  20                 	db	32
   181  00FD2A  63                 	db	99	;'c'
   182  00FD2B  79                 	db	121	;'y'
   183  00FD2C  63                 	db	99	;'c'
   184  00FD2D  6C                 	db	108	;'l'
   185  00FD2E  65                 	db	101	;'e'
   186  00FD2F  2E                 	db	46
   187  00FD30  0A                 	db	10
   188  00FD31  0D                 	db	13
   189  00FD32  00                 	db	0
   190  00FD33                     STR_15:
   191                           
   192                           ; BSR set to: 15
   193  00FD33  44                 	db	68	;'D'
   194  00FD34  69                 	db	105	;'i'
   195  00FD35  67                 	db	103	;'g'
   196  00FD36  69                 	db	105	;'i'
   197  00FD37  74                 	db	116	;'t'
   198  00FD38  61                 	db	97	;'a'
   199  00FD39  72                 	db	114	;'r'
   200  00FD3A  65                 	db	101	;'e'
   201  00FD3B  20                 	db	32
   202  00FD3C  61                 	db	97	;'a'
   203  00FD3D  20                 	db	32
   204  00FD3E  71                 	db	113	;'q'
   205  00FD3F  75                 	db	117	;'u'
   206  00FD40  61                 	db	97	;'a'
   207  00FD41  6C                 	db	108	;'l'
   208  00FD42  65                 	db	101	;'e'
   209  00FD43  20                 	db	32
   210  00FD44  69                 	db	105	;'i'
   211  00FD45  6E                 	db	110	;'n'
   212  00FD46  64                 	db	100	;'d'
   213  00FD47  69                 	db	105	;'i'
   214  00FD48  72                 	db	114	;'r'
   215  00FD49  69                 	db	105	;'i'
   216  00FD4A  7A                 	db	122	;'z'
   217  00FD4B  7A                 	db	122	;'z'
   218  00FD4C  6F                 	db	111	;'o'
   219  00FD4D  20                 	db	32
   220  00FD4E  73                 	db	115	;'s'
   221  00FD4F  74                 	db	116	;'t'
   222  00FD50  61                 	db	97	;'a'
   223  00FD51  6D                 	db	109	;'m'
   224  00FD52  70                 	db	112	;'p'
   225  00FD53  61                 	db	97	;'a'
   226  00FD54  72                 	db	114	;'r'
   227  00FD55  65                 	db	101	;'e'
   228  00FD56  20                 	db	32
   229  00FD57  69                 	db	105	;'i'
   230  00FD58  6C                 	db	108	;'l'
   231  00FD59  20                 	db	32
   232  00FD5A  63                 	db	99	;'c'
   233  00FD5B  6F                 	db	111	;'o'
   234  00FD5C  6E                 	db	110	;'n'
   235  00FD5D  74                 	db	116	;'t'
   236  00FD5E  65                 	db	101	;'e'
   237  00FD5F  6E                 	db	110	;'n'
   238  00FD60  75                 	db	117	;'u'
   239  00FD61  74                 	db	116	;'t'
   240  00FD62  6F                 	db	111	;'o'
   241  00FD63  20                 	db	32
   242  00FD64  64                 	db	100	;'d'
   243  00FD65  65                 	db	101	;'e'
   244  00FD66  6C                 	db	108	;'l'
   245  00FD67  6C                 	db	108	;'l'
   246  00FD68  65                 	db	101	;'e'
   247  00FD69  20                 	db	32
   248  00FD6A  52                 	db	82	;'R'
   249  00FD6B  41                 	db	65	;'A'
   250  00FD6C  4D                 	db	77	;'M'
   251  00FD6D  3A                 	db	58	;':'
   252  00FD6E  20                 	db	32
   253  00FD6F  00                 	db	0
   254  00FD70                     STR_16:
   255                           
   256                           ; BSR set to: 15
   257  00FD70  4C                 	db	76	;'L'
   258  00FD71  65                 	db	101	;'e'
   259  00FD72  20                 	db	32
   260  00FD73  73                 	db	115	;'s'
   261  00FD74  74                 	db	116	;'t'
   262  00FD75  72                 	db	114	;'r'
   263  00FD76  69                 	db	105	;'i'
   264  00FD77  6E                 	db	110	;'n'
   265  00FD78  67                 	db	103	;'g'
   266  00FD79  68                 	db	104	;'h'
   267  00FD7A  65                 	db	101	;'e'
   268  00FD7B  20                 	db	32
   269  00FD7C  61                 	db	97	;'a'
   270  00FD7D  74                 	db	116	;'t'
   271  00FD7E  74                 	db	116	;'t'
   272  00FD7F  75                 	db	117	;'u'
   273  00FD80  61                 	db	97	;'a'
   274  00FD81  6C                 	db	108	;'l'
   275  00FD82  6D                 	db	109	;'m'
   276  00FD83  65                 	db	101	;'e'
   277  00FD84  6E                 	db	110	;'n'
   278  00FD85  74                 	db	116	;'t'
   279  00FD86  65                 	db	101	;'e'
   280  00FD87  20                 	db	32
   281  00FD88  69                 	db	105	;'i'
   282  00FD89  6E                 	db	110	;'n'
   283  00FD8A  20                 	db	32
   284  00FD8B  6D                 	db	109	;'m'
   285  00FD8C  65                 	db	101	;'e'
   286  00FD8D  6D                 	db	109	;'m'
   287  00FD8E  6F                 	db	111	;'o'
   288  00FD8F  72                 	db	114	;'r'
   289  00FD90  69                 	db	105	;'i'
   290  00FD91  61                 	db	97	;'a'
   291  00FD92  20                 	db	32
   292  00FD93  61                 	db	97	;'a'
   293  00FD94  6C                 	db	108	;'l'
   294  00FD95  6C                 	db	108	;'l'
   295  00FD96  27                 	db	39
   296  00FD97  69                 	db	105	;'i'
   297  00FD98  6E                 	db	110	;'n'
   298  00FD99  64                 	db	100	;'d'
   299  00FD9A  69                 	db	105	;'i'
   300  00FD9B  72                 	db	114	;'r'
   301  00FD9C  69                 	db	105	;'i'
   302  00FD9D  7A                 	db	122	;'z'
   303  00FD9E  7A                 	db	122	;'z'
   304  00FD9F  6F                 	db	111	;'o'
   305  00FDA0  20                 	db	32
   306  00FDA1  25                 	db	37
   307  00FDA2  64                 	db	100	;'d'
   308  00FDA3  3A                 	db	58	;':'
   309  00FDA4  0A                 	db	10
   310  00FDA5  0D                 	db	13
   311  00FDA6  25                 	db	37
   312  00FDA7  73                 	db	115	;'s'
   313  00FDA8  0A                 	db	10
   314  00FDA9  0D                 	db	13
   315  00FDAA  00                 	db	0
   316  00FDAB                     STR_24:
   317                           
   318                           ; BSR set to: 15
   319  00FDAB  4C                 	db	76	;'L'
   320  00FDAC  61                 	db	97	;'a'
   321  00FDAD  20                 	db	32
   322  00FDAE  73                 	db	115	;'s'
   323  00FDAF  74                 	db	116	;'t'
   324  00FDB0  72                 	db	114	;'r'
   325  00FDB1  69                 	db	105	;'i'
   326  00FDB2  6E                 	db	110	;'n'
   327  00FDB3  67                 	db	103	;'g'
   328  00FDB4  61                 	db	97	;'a'
   329  00FDB5  20                 	db	32
   330  00FDB6  61                 	db	97	;'a'
   331  00FDB7  74                 	db	116	;'t'
   332  00FDB8  74                 	db	116	;'t'
   333  00FDB9  75                 	db	117	;'u'
   334  00FDBA  61                 	db	97	;'a'
   335  00FDBB  6C                 	db	108	;'l'
   336  00FDBC  6D                 	db	109	;'m'
   337  00FDBD  65                 	db	101	;'e'
   338  00FDBE  6E                 	db	110	;'n'
   339  00FDBF  74                 	db	116	;'t'
   340  00FDC0  65                 	db	101	;'e'
   341  00FDC1  20                 	db	32
   342  00FDC2  69                 	db	105	;'i'
   343  00FDC3  6E                 	db	110	;'n'
   344  00FDC4  20                 	db	32
   345  00FDC5  6D                 	db	109	;'m'
   346  00FDC6  65                 	db	101	;'e'
   347  00FDC7  6D                 	db	109	;'m'
   348  00FDC8  6F                 	db	111	;'o'
   349  00FDC9  72                 	db	114	;'r'
   350  00FDCA  69                 	db	105	;'i'
   351  00FDCB  61                 	db	97	;'a'
   352  00FDCC  20                 	db	32
   353  00FDCD  61                 	db	97	;'a'
   354  00FDCE  6C                 	db	108	;'l'
   355  00FDCF  6C                 	db	108	;'l'
   356  00FDD0  27                 	db	39
   357  00FDD1  69                 	db	105	;'i'
   358  00FDD2  6E                 	db	110	;'n'
   359  00FDD3  64                 	db	100	;'d'
   360  00FDD4  69                 	db	105	;'i'
   361  00FDD5  72                 	db	114	;'r'
   362  00FDD6  69                 	db	105	;'i'
   363  00FDD7  7A                 	db	122	;'z'
   364  00FDD8  7A                 	db	122	;'z'
   365  00FDD9  6F                 	db	111	;'o'
   366  00FDDA  20                 	db	32
   367  00FDDB  25                 	db	37
   368  00FDDC  64                 	db	100	;'d'
   369  00FDDD  3A                 	db	58	;':'
   370  00FDDE  0A                 	db	10
   371  00FDDF  0D                 	db	13
   372  00FDE0  25                 	db	37
   373  00FDE1  73                 	db	115	;'s'
   374  00FDE2  0A                 	db	10
   375  00FDE3  0D                 	db	13
   376  00FDE4  00                 	db	0
   377  00FDE5                     STR_11:
   378                           
   379                           ; BSR set to: 15
   380  00FDE5  49                 	db	73	;'I'
   381  00FDE6  6D                 	db	109	;'m'
   382  00FDE7  6D                 	db	109	;'m'
   383  00FDE8  65                 	db	101	;'e'
   384  00FDE9  74                 	db	116	;'t'
   385  00FDEA  74                 	db	116	;'t'
   386  00FDEB  65                 	db	101	;'e'
   387  00FDEC  72                 	db	114	;'r'
   388  00FDED  65                 	db	101	;'e'
   389  00FDEE  20                 	db	32
   390  00FDEF  75                 	db	117	;'u'
   391  00FDF0  6E                 	db	110	;'n'
   392  00FDF1  20                 	db	32
   393  00FDF2  76                 	db	118	;'v'
   394  00FDF3  61                 	db	97	;'a'
   395  00FDF4  6C                 	db	108	;'l'
   396  00FDF5  6F                 	db	111	;'o'
   397  00FDF6  72                 	db	114	;'r'
   398  00FDF7  65                 	db	101	;'e'
   399  00FDF8  20                 	db	32
   400  00FDF9  63                 	db	99	;'c'
   401  00FDFA  6F                 	db	111	;'o'
   402  00FDFB  6D                 	db	109	;'m'
   403  00FDFC  70                 	db	112	;'p'
   404  00FDFD  72                 	db	114	;'r'
   405  00FDFE  65                 	db	101	;'e'
   406  00FDFF  73                 	db	115	;'s'
   407  00FE00  6F                 	db	111	;'o'
   408  00FE01  20                 	db	32
   409  00FE02  6E                 	db	110	;'n'
   410  00FE03  65                 	db	101	;'e'
   411  00FE04  6C                 	db	108	;'l'
   412  00FE05  6C                 	db	108	;'l'
   413  00FE06  27                 	db	39
   414  00FE07  69                 	db	105	;'i'
   415  00FE08  6E                 	db	110	;'n'
   416  00FE09  74                 	db	116	;'t'
   417  00FE0A  65                 	db	101	;'e'
   418  00FE0B  72                 	db	114	;'r'
   419  00FE0C  76                 	db	118	;'v'
   420  00FE0D  61                 	db	97	;'a'
   421  00FE0E  6C                 	db	108	;'l'
   422  00FE0F  6C                 	db	108	;'l'
   423  00FE10  6F                 	db	111	;'o'
   424  00FE11  20                 	db	32
   425  00FE12  30                 	db	48	;'0'
   426  00FE13  20                 	db	32
   427  00FE14  2D                 	db	45
   428  00FE15  20                 	db	32
   429  00FE16  31                 	db	49	;'1'
   430  00FE17  30                 	db	48	;'0'
   431  00FE18  32                 	db	50	;'2'
   432  00FE19  33                 	db	51	;'3'
   433  00FE1A  2E                 	db	46
   434  00FE1B  0A                 	db	10
   435  00FE1C  0D                 	db	13
   436  00FE1D  00                 	db	0
   437  00FE1E                     STR_8:
   438                           
   439                           ; BSR set to: 15
   440  00FE1E  44                 	db	68	;'D'
   441  00FE1F  69                 	db	105	;'i'
   442  00FE20  67                 	db	103	;'g'
   443  00FE21  69                 	db	105	;'i'
   444  00FE22  74                 	db	116	;'t'
   445  00FE23  61                 	db	97	;'a'
   446  00FE24  72                 	db	114	;'r'
   447  00FE25  65                 	db	101	;'e'
   448  00FE26  20                 	db	32
   449  00FE27  73                 	db	115	;'s'
   450  00FE28  6F                 	db	111	;'o'
   451  00FE29  6C                 	db	108	;'l'
   452  00FE2A  6F                 	db	111	;'o'
   453  00FE2B  20                 	db	32
   454  00FE2C  75                 	db	117	;'u'
   455  00FE2D  6E                 	db	110	;'n'
   456  00FE2E  6F                 	db	111	;'o'
   457  00FE2F  20                 	db	32
   458  00FE30  74                 	db	116	;'t'
   459  00FE31  72                 	db	114	;'r'
   460  00FE32  61                 	db	97	;'a'
   461  00FE33  20                 	db	32
   462  00FE34  69                 	db	105	;'i'
   463  00FE35  20                 	db	32
   464  00FE36  63                 	db	99	;'c'
   465  00FE37  61                 	db	97	;'a'
   466  00FE38  72                 	db	114	;'r'
   467  00FE39  61                 	db	97	;'a'
   468  00FE3A  74                 	db	116	;'t'
   469  00FE3B  74                 	db	116	;'t'
   470  00FE3C  65                 	db	101	;'e'
   471  00FE3D  72                 	db	114	;'r'
   472  00FE3E  69                 	db	105	;'i'
   473  00FE3F  20                 	db	32
   474  00FE40  61                 	db	97	;'a'
   475  00FE41  6D                 	db	109	;'m'
   476  00FE42  6D                 	db	109	;'m'
   477  00FE43  65                 	db	101	;'e'
   478  00FE44  73                 	db	115	;'s'
   479  00FE45  73                 	db	115	;'s'
   480  00FE46  69                 	db	105	;'i'
   481  00FE47  3A                 	db	58	;':'
   482  00FE48  20                 	db	32
   483  00FE49  61                 	db	97	;'a'
   484  00FE4A  2C                 	db	44
   485  00FE4B  62                 	db	98	;'b'
   486  00FE4C  2C                 	db	44
   487  00FE4D  20                 	db	32
   488  00FE4E  6F                 	db	111	;'o'
   489  00FE4F  20                 	db	32
   490  00FE50  63                 	db	99	;'c'
   491  00FE51  2E                 	db	46
   492  00FE52  0A                 	db	10
   493  00FE53  0D                 	db	13
   494  00FE54  00                 	db	0
   495  00FE55                     STR_25:
   496                           
   497                           ; BSR set to: 15
   498  00FE55  44                 	db	68	;'D'
   499  00FE56  69                 	db	105	;'i'
   500  00FE57  67                 	db	103	;'g'
   501  00FE58  69                 	db	105	;'i'
   502  00FE59  74                 	db	116	;'t'
   503  00FE5A  61                 	db	97	;'a'
   504  00FE5B  72                 	db	114	;'r'
   505  00FE5C  65                 	db	101	;'e'
   506  00FE5D  20                 	db	32
   507  00FE5E  73                 	db	115	;'s'
   508  00FE5F  6F                 	db	111	;'o'
   509  00FE60  6C                 	db	108	;'l'
   510  00FE61  6F                 	db	111	;'o'
   511  00FE62  20                 	db	32
   512  00FE63  75                 	db	117	;'u'
   513  00FE64  6E                 	db	110	;'n'
   514  00FE65  6F                 	db	111	;'o'
   515  00FE66  20                 	db	32
   516  00FE67  74                 	db	116	;'t'
   517  00FE68  72                 	db	114	;'r'
   518  00FE69  61                 	db	97	;'a'
   519  00FE6A  20                 	db	32
   520  00FE6B  69                 	db	105	;'i'
   521  00FE6C  20                 	db	32
   522  00FE6D  63                 	db	99	;'c'
   523  00FE6E  61                 	db	97	;'a'
   524  00FE6F  72                 	db	114	;'r'
   525  00FE70  61                 	db	97	;'a'
   526  00FE71  74                 	db	116	;'t'
   527  00FE72  74                 	db	116	;'t'
   528  00FE73  65                 	db	101	;'e'
   529  00FE74  72                 	db	114	;'r'
   530  00FE75  69                 	db	105	;'i'
   531  00FE76  20                 	db	32
   532  00FE77  61                 	db	97	;'a'
   533  00FE78  6D                 	db	109	;'m'
   534  00FE79  6D                 	db	109	;'m'
   535  00FE7A  65                 	db	101	;'e'
   536  00FE7B  73                 	db	115	;'s'
   537  00FE7C  73                 	db	115	;'s'
   538  00FE7D  69                 	db	105	;'i'
   539  00FE7E  3A                 	db	58	;':'
   540  00FE7F  20                 	db	32
   541  00FE80  61                 	db	97	;'a'
   542  00FE81  20                 	db	32
   543  00FE82  6F                 	db	111	;'o'
   544  00FE83  20                 	db	32
   545  00FE84  62                 	db	98	;'b'
   546  00FE85  2E                 	db	46
   547  00FE86  0A                 	db	10
   548  00FE87  0D                 	db	13
   549  00FE88  00                 	db	0
   550  00FE89                     STR_13:
   551                           
   552                           ; BSR set to: 15
   553  00FE89  44                 	db	68	;'D'
   554  00FE8A  69                 	db	105	;'i'
   555  00FE8B  67                 	db	103	;'g'
   556  00FE8C  69                 	db	105	;'i'
   557  00FE8D  74                 	db	116	;'t'
   558  00FE8E  61                 	db	97	;'a'
   559  00FE8F  72                 	db	114	;'r'
   560  00FE90  65                 	db	101	;'e'
   561  00FE91  20                 	db	32
   562  00FE92  73                 	db	115	;'s'
   563  00FE93  65                 	db	101	;'e'
   564  00FE94  20                 	db	32
   565  00FE95  6C                 	db	108	;'l'
   566  00FE96  65                 	db	101	;'e'
   567  00FE97  67                 	db	103	;'g'
   568  00FE98  67                 	db	103	;'g'
   569  00FE99  65                 	db	101	;'e'
   570  00FE9A  72                 	db	114	;'r'
   571  00FE9B  65                 	db	101	;'e'
   572  00FE9C  20                 	db	32
   573  00FE9D  28                 	db	40
   574  00FE9E  61                 	db	97	;'a'
   575  00FE9F  29                 	db	41
   576  00FEA0  20                 	db	32
   577  00FEA1  6F                 	db	111	;'o'
   578  00FEA2  20                 	db	32
   579  00FEA3  73                 	db	115	;'s'
   580  00FEA4  63                 	db	99	;'c'
   581  00FEA5  72                 	db	114	;'r'
   582  00FEA6  69                 	db	105	;'i'
   583  00FEA7  76                 	db	118	;'v'
   584  00FEA8  65                 	db	101	;'e'
   585  00FEA9  72                 	db	114	;'r'
   586  00FEAA  65                 	db	101	;'e'
   587  00FEAB  20                 	db	32
   588  00FEAC  28                 	db	40
   589  00FEAD  62                 	db	98	;'b'
   590  00FEAE  29                 	db	41
   591  00FEAF  20                 	db	32
   592  00FEB0  64                 	db	100	;'d'
   593  00FEB1  61                 	db	97	;'a'
   594  00FEB2  6C                 	db	108	;'l'
   595  00FEB3  6C                 	db	108	;'l'
   596  00FEB4  65                 	db	101	;'e'
   597  00FEB5  20                 	db	32
   598  00FEB6  52                 	db	82	;'R'
   599  00FEB7  41                 	db	65	;'A'
   600  00FEB8  4D                 	db	77	;'M'
   601  00FEB9  3A                 	db	58	;':'
   602  00FEBA  20                 	db	32
   603  00FEBB  00                 	db	0
   604  00FEBC                     STR_9:
   605                           
   606                           ; BSR set to: 15
   607  00FEBC  44                 	db	68	;'D'
   608  00FEBD  69                 	db	105	;'i'
   609  00FEBE  67                 	db	103	;'g'
   610  00FEBF  69                 	db	105	;'i'
   611  00FEC0  74                 	db	116	;'t'
   612  00FEC1  61                 	db	97	;'a'
   613  00FEC2  72                 	db	114	;'r'
   614  00FEC3  65                 	db	101	;'e'
   615  00FEC4  20                 	db	32
   616  00FEC5  69                 	db	105	;'i'
   617  00FEC6  6E                 	db	110	;'n'
   618  00FEC7  76                 	db	118	;'v'
   619  00FEC8  69                 	db	105	;'i'
   620  00FEC9  6F                 	db	111	;'o'
   621  00FECA  20                 	db	32
   622  00FECB  70                 	db	112	;'p'
   623  00FECC  65                 	db	101	;'e'
   624  00FECD  72                 	db	114	;'r'
   625  00FECE  20                 	db	32
   626  00FECF  6E                 	db	110	;'n'
   627  00FED0  6F                 	db	111	;'o'
   628  00FED1  6E                 	db	110	;'n'
   629  00FED2  20                 	db	32
   630  00FED3  61                 	db	97	;'a'
   631  00FED4  70                 	db	112	;'p'
   632  00FED5  70                 	db	112	;'p'
   633  00FED6  6F                 	db	111	;'o'
   634  00FED7  72                 	db	114	;'r'
   635  00FED8  74                 	db	116	;'t'
   636  00FED9  61                 	db	97	;'a'
   637  00FEDA  72                 	db	114	;'r'
   638  00FEDB  65                 	db	101	;'e'
   639  00FEDC  20                 	db	32
   640  00FEDD  63                 	db	99	;'c'
   641  00FEDE  61                 	db	97	;'a'
   642  00FEDF  6D                 	db	109	;'m'
   643  00FEE0  62                 	db	98	;'b'
   644  00FEE1  69                 	db	105	;'i'
   645  00FEE2  61                 	db	97	;'a'
   646  00FEE3  6D                 	db	109	;'m'
   647  00FEE4  65                 	db	101	;'e'
   648  00FEE5  6E                 	db	110	;'n'
   649  00FEE6  74                 	db	116	;'t'
   650  00FEE7  69                 	db	105	;'i'
   651  00FEE8  2E                 	db	46
   652  00FEE9  0A                 	db	10
   653  00FEEA  0D                 	db	13
   654  00FEEB  00                 	db	0
   655  00FEEC                     STR_2:
   656                           
   657                           ; BSR set to: 15
   658  00FEEC  53                 	db	83	;'S'
   659  00FEED  65                 	db	101	;'e'
   660  00FEEE  6C                 	db	108	;'l'
   661  00FEEF  65                 	db	101	;'e'
   662  00FEF0  7A                 	db	122	;'z'
   663  00FEF1  69                 	db	105	;'i'
   664  00FEF2  6F                 	db	111	;'o'
   665  00FEF3  6E                 	db	110	;'n'
   666  00FEF4  61                 	db	97	;'a'
   667  00FEF5  72                 	db	114	;'r'
   668  00FEF6  65                 	db	101	;'e'
   669  00FEF7  20                 	db	32
   670  00FEF8  6C                 	db	108	;'l'
   671  00FEF9  61                 	db	97	;'a'
   672  00FEFA  20                 	db	32
   673  00FEFB  76                 	db	118	;'v'
   674  00FEFC  65                 	db	101	;'e'
   675  00FEFD  6C                 	db	108	;'l'
   676  00FEFE  6F                 	db	111	;'o'
   677  00FEFF  63                 	db	99	;'c'
   678  00FF00  69                 	db	105	;'i'
   679  00FF01  74                 	db	116	;'t'
   680  00FF02  61                 	db	97	;'a'
   681  00FF03  27                 	db	39
   682  00FF04  20                 	db	32
   683  00FF05  64                 	db	100	;'d'
   684  00FF06  65                 	db	101	;'e'
   685  00FF07  6C                 	db	108	;'l'
   686  00FF08  20                 	db	32
   687  00FF09  74                 	db	116	;'t'
   688  00FF0A  72                 	db	114	;'r'
   689  00FF0B  61                 	db	97	;'a'
   690  00FF0C  73                 	db	115	;'s'
   691  00FF0D  66                 	db	102	;'f'
   692  00FF0E  65                 	db	101	;'e'
   693  00FF0F  72                 	db	114	;'r'
   694  00FF10  69                 	db	105	;'i'
   695  00FF11  6D                 	db	109	;'m'
   696  00FF12  65                 	db	101	;'e'
   697  00FF13  6E                 	db	110	;'n'
   698  00FF14  74                 	db	116	;'t'
   699  00FF15  6F                 	db	111	;'o'
   700  00FF16  3A                 	db	58	;':'
   701  00FF17  0A                 	db	10
   702  00FF18  0D                 	db	13
   703  00FF19  00                 	db	0
   704  00FF1A                     STR_10:
   705                           
   706                           ; BSR set to: 15
   707  00FF1A  44                 	db	68	;'D'
   708  00FF1B  69                 	db	105	;'i'
   709  00FF1C  67                 	db	103	;'g'
   710  00FF1D  69                 	db	105	;'i'
   711  00FF1E  74                 	db	116	;'t'
   712  00FF1F  61                 	db	97	;'a'
   713  00FF20  72                 	db	114	;'r'
   714  00FF21  65                 	db	101	;'e'
   715  00FF22  20                 	db	32
   716  00FF23  69                 	db	105	;'i'
   717  00FF24  6C                 	db	108	;'l'
   718  00FF25  20                 	db	32
   719  00FF26  64                 	db	100	;'d'
   720  00FF27  75                 	db	117	;'u'
   721  00FF28  74                 	db	116	;'t'
   722  00FF29  79                 	db	121	;'y'
   723  00FF2A  20                 	db	32
   724  00FF2B  63                 	db	99	;'c'
   725  00FF2C  79                 	db	121	;'y'
   726  00FF2D  63                 	db	99	;'c'
   727  00FF2E  6C                 	db	108	;'l'
   728  00FF2F  65                 	db	101	;'e'
   729  00FF30  20                 	db	32
   730  00FF31  64                 	db	100	;'d'
   731  00FF32  65                 	db	101	;'e'
   732  00FF33  6C                 	db	108	;'l'
   733  00FF34  20                 	db	32
   734  00FF35  50                 	db	80	;'P'
   735  00FF36  57                 	db	87	;'W'
   736  00FF37  4D                 	db	77	;'M'
   737  00FF38  20                 	db	32
   738  00FF39  28                 	db	40
   739  00FF3A  30                 	db	48	;'0'
   740  00FF3B  20                 	db	32
   741  00FF3C  2D                 	db	45
   742  00FF3D  20                 	db	32
   743  00FF3E  31                 	db	49	;'1'
   744  00FF3F  30                 	db	48	;'0'
   745  00FF40  32                 	db	50	;'2'
   746  00FF41  33                 	db	51	;'3'
   747  00FF42  29                 	db	41
   748  00FF43  3A                 	db	58	;':'
   749  00FF44  20                 	db	32
   750  00FF45  00                 	db	0
   751  00FF46                     STR_19:
   752                           
   753                           ; BSR set to: 15
   754  00FF46  44                 	db	68	;'D'
   755  00FF47  69                 	db	105	;'i'
   756  00FF48  67                 	db	103	;'g'
   757  00FF49  69                 	db	105	;'i'
   758  00FF4A  74                 	db	116	;'t'
   759  00FF4B  61                 	db	97	;'a'
   760  00FF4C  72                 	db	114	;'r'
   761  00FF4D  65                 	db	101	;'e'
   762  00FF4E  20                 	db	32
   763  00FF4F  73                 	db	115	;'s'
   764  00FF50  75                 	db	117	;'u'
   765  00FF51  20                 	db	32
   766  00FF52  71                 	db	113	;'q'
   767  00FF53  75                 	db	117	;'u'
   768  00FF54  61                 	db	97	;'a'
   769  00FF55  6C                 	db	108	;'l'
   770  00FF56  65                 	db	101	;'e'
   771  00FF57  20                 	db	32
   772  00FF58  52                 	db	82	;'R'
   773  00FF59  41                 	db	65	;'A'
   774  00FF5A  4D                 	db	77	;'M'
   775  00FF5B  20                 	db	32
   776  00FF5C  73                 	db	115	;'s'
   777  00FF5D  63                 	db	99	;'c'
   778  00FF5E  72                 	db	114	;'r'
   779  00FF5F  69                 	db	105	;'i'
   780  00FF60  76                 	db	118	;'v'
   781  00FF61  65                 	db	101	;'e'
   782  00FF62  72                 	db	114	;'r'
   783  00FF63  65                 	db	101	;'e'
   784  00FF64  20                 	db	32
   785  00FF65  28                 	db	40
   786  00FF66  61                 	db	97	;'a'
   787  00FF67  2C                 	db	44
   788  00FF68  62                 	db	98	;'b'
   789  00FF69  2C                 	db	44
   790  00FF6A  20                 	db	32
   791  00FF6B  6F                 	db	111	;'o'
   792  00FF6C  20                 	db	32
   793  00FF6D  63                 	db	99	;'c'
   794  00FF6E  29                 	db	41
   795  00FF6F  3A                 	db	58	;':'
   796  00FF70  00                 	db	0
   797  00FF71                     STR_22:
   798                           
   799                           ; BSR set to: 15
   800  00FF71  44                 	db	68	;'D'
   801  00FF72  69                 	db	105	;'i'
   802  00FF73  67                 	db	103	;'g'
   803  00FF74  69                 	db	105	;'i'
   804  00FF75  74                 	db	116	;'t'
   805  00FF76  61                 	db	97	;'a'
   806  00FF77  72                 	db	114	;'r'
   807  00FF78  65                 	db	101	;'e'
   808  00FF79  20                 	db	32
   809  00FF7A  61                 	db	97	;'a'
   810  00FF7B  20                 	db	32
   811  00FF7C  71                 	db	113	;'q'
   812  00FF7D  75                 	db	117	;'u'
   813  00FF7E  61                 	db	97	;'a'
   814  00FF7F  6C                 	db	108	;'l'
   815  00FF80  65                 	db	101	;'e'
   816  00FF81  20                 	db	32
   817  00FF82  69                 	db	105	;'i'
   818  00FF83  6E                 	db	110	;'n'
   819  00FF84  64                 	db	100	;'d'
   820  00FF85  69                 	db	105	;'i'
   821  00FF86  72                 	db	114	;'r'
   822  00FF87  69                 	db	105	;'i'
   823  00FF88  7A                 	db	122	;'z'
   824  00FF89  7A                 	db	122	;'z'
   825  00FF8A  6F                 	db	111	;'o'
   826  00FF8B  20                 	db	32
   827  00FF8C  73                 	db	115	;'s'
   828  00FF8D  63                 	db	99	;'c'
   829  00FF8E  72                 	db	114	;'r'
   830  00FF8F  69                 	db	105	;'i'
   831  00FF90  76                 	db	118	;'v'
   832  00FF91  65                 	db	101	;'e'
   833  00FF92  72                 	db	114	;'r'
   834  00FF93  65                 	db	101	;'e'
   835  00FF94  3A                 	db	58	;':'
   836  00FF95  20                 	db	32
   837  00FF96  00                 	db	0
   838  00FF97                     STR_23:
   839                           
   840                           ; BSR set to: 15
   841  00FF97  44                 	db	68	;'D'
   842  00FF98  69                 	db	105	;'i'
   843  00FF99  67                 	db	103	;'g'
   844  00FF9A  69                 	db	105	;'i'
   845  00FF9B  74                 	db	116	;'t'
   846  00FF9C  61                 	db	97	;'a'
   847  00FF9D  72                 	db	114	;'r'
   848  00FF9E  65                 	db	101	;'e'
   849  00FF9F  20                 	db	32
   850  00FFA0  75                 	db	117	;'u'
   851  00FFA1  6E                 	db	110	;'n'
   852  00FFA2  61                 	db	97	;'a'
   853  00FFA3  20                 	db	32
   854  00FFA4  73                 	db	115	;'s'
   855  00FFA5  74                 	db	116	;'t'
   856  00FFA6  72                 	db	114	;'r'
   857  00FFA7  69                 	db	105	;'i'
   858  00FFA8  6E                 	db	110	;'n'
   859  00FFA9  67                 	db	103	;'g'
   860  00FFAA  61                 	db	97	;'a'
   861  00FFAB  3A                 	db	58	;':'
   862  00FFAC  20                 	db	32
   863  00FFAD  00                 	db	0
   864  00FFAE                     STR_5:
   865                           
   866                           ; BSR set to: 15
   867  00FFAE  09                 	db	9
   868  00FFAF  63                 	db	99	;'c'
   869  00FFB0  09                 	db	9
   870  00FFB1  46                 	db	70	;'F'
   871  00FFB2  4F                 	db	79	;'O'
   872  00FFB3  53                 	db	83	;'S'
   873  00FFB4  43                 	db	67	;'C'
   874  00FFB5  2F                 	db	47
   875  00FFB6  36                 	db	54	;'6'
   876  00FFB7  34                 	db	52	;'4'
   877  00FFB8  20                 	db	32
   878  00FFB9  28                 	db	40
   879  00FFBA  31                 	db	49	;'1'
   880  00FFBB  4D                 	db	77	;'M'
   881  00FFBC  48                 	db	72	;'H'
   882  00FFBD  7A                 	db	122	;'z'
   883  00FFBE  29                 	db	41
   884  00FFBF  0A                 	db	10
   885  00FFC0  0D                 	db	13
   886  00FFC1  00                 	db	0
   887  00FFC2                     STR_4:
   888                           
   889                           ; BSR set to: 15
   890  00FFC2  09                 	db	9
   891  00FFC3  62                 	db	98	;'b'
   892  00FFC4  09                 	db	9
   893  00FFC5  46                 	db	70	;'F'
   894  00FFC6  4F                 	db	79	;'O'
   895  00FFC7  53                 	db	83	;'S'
   896  00FFC8  43                 	db	67	;'C'
   897  00FFC9  2F                 	db	47
   898  00FFCA  31                 	db	49	;'1'
   899  00FFCB  36                 	db	54	;'6'
   900  00FFCC  20                 	db	32
   901  00FFCD  28                 	db	40
   902  00FFCE  34                 	db	52	;'4'
   903  00FFCF  4D                 	db	77	;'M'
   904  00FFD0  48                 	db	72	;'H'
   905  00FFD1  7A                 	db	122	;'z'
   906  00FFD2  29                 	db	41
   907  00FFD3  0A                 	db	10
   908  00FFD4  0D                 	db	13
   909  00FFD5  00                 	db	0
   910  00FFD6                     STR_3:
   911                           
   912                           ; BSR set to: 15
   913  00FFD6  09                 	db	9
   914  00FFD7  61                 	db	97	;'a'
   915  00FFD8  09                 	db	9
   916  00FFD9  46                 	db	70	;'F'
   917  00FFDA  4F                 	db	79	;'O'
   918  00FFDB  53                 	db	83	;'S'
   919  00FFDC  43                 	db	67	;'C'
   920  00FFDD  2F                 	db	47
   921  00FFDE  34                 	db	52	;'4'
   922  00FFDF  20                 	db	32
   923  00FFE0  28                 	db	40
   924  00FFE1  31                 	db	49	;'1'
   925  00FFE2  36                 	db	54	;'6'
   926  00FFE3  4D                 	db	77	;'M'
   927  00FFE4  48                 	db	72	;'H'
   928  00FFE5  7A                 	db	122	;'z'
   929  00FFE6  29                 	db	41
   930  00FFE7  0A                 	db	10
   931  00FFE8  0D                 	db	13
   932  00FFE9  00                 	db	0
   933  00FFEA                     STR_6:
   934                           
   935                           ; BSR set to: 15
   936  00FFEA  73                 	db	115	;'s'
   937  00FFEB  63                 	db	99	;'c'
   938  00FFEC  65                 	db	101	;'e'
   939  00FFED  6C                 	db	108	;'l'
   940  00FFEE  74                 	db	116	;'t'
   941  00FFEF  61                 	db	97	;'a'
   942  00FFF0  3A                 	db	58	;':'
   943  00FFF1  20                 	db	32
   944  00FFF2  00                 	db	0
   945  00FFF3                     STR_26:
   946                           
   947                           ; BSR set to: 15
   948  00FFF3  28                 	db	40
   949  00FFF4  6E                 	db	110	;'n'
   950  00FFF5  75                 	db	117	;'u'
   951  00FFF6  6C                 	db	108	;'l'
   952  00FFF7  6C                 	db	108	;'l'
   953  00FFF8  29                 	db	41
   954  00FFF9  00                 	db	0
   955  00FFFA                     STR_7:
   956                           
   957                           ; BSR set to: 15
   958  00FFFA  25                 	db	37
   959  00FFFB  63                 	db	99	;'c'
   960  00FFFC  0A                 	db	10
   961  00FFFD  0D                 	db	13
   962  00FFFE  00                 	db	0
   963  0000                     
   964                           ; #config settings
   965  00FFFF  00                 	db	0	; dummy byte at the end
   966  0000                     
   967                           	psect	cinit
   968  00F028                     __pcinit:
   969                           	opt stack 0
   970  00F028                     start_initialization:
   971                           	opt stack 0
   972  00F028                     __initialization:
   973                           	opt stack 0
   974  00F028                     end_of_initialization:
   975                           	opt stack 0
   976  00F028                     __end_of__initialization:
   977                           	opt stack 0
   978  00F028  0100               	movlb	0
   979  00F02A  EF57  F07C         	goto	_main	;jump to C main() function
   980                           
   981                           	psect	cstackBANK0
   982  000060                     __pcstackBANK0:
   983                           	opt stack 0
   984  000060                     main@string:
   985                           	opt stack 0
   986                           
   987                           ; 30 bytes @ 0x0
   988  000060                     	ds	30
   989  00007E                     main@buffer:
   990                           	opt stack 0
   991                           
   992                           ; 30 bytes @ 0x1E
   993  00007E                     	ds	30
   994  00009C                     main@n:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x3C
   998  00009C                     	ds	1
   999  00009D                     main@dtc:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x3D
  1003  00009D                     	ds	4
  1004  0000A1                     main@i:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x41
  1008  0000A1                     	ds	2
  1009  0000A3                     main@ind:
  1010                           	opt stack 0
  1011                           
  1012                           ; 3 bytes @ 0x43
  1013  0000A3                     	ds	3
  1014  0000A6                     main@ch:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x46
  1018  0000A6                     	ds	1
  1019                           
  1020                           	psect	cstackCOMRAM
  1021  000001                     __pcstackCOMRAM:
  1022                           	opt stack 0
  1023  000001                     ??_isdigit:
  1024  000001                     ?_strlen:
  1025                           	opt stack 0
  1026  000001                     ?___wmul:
  1027                           	opt stack 0
  1028  000001                     ?___lwdiv:
  1029                           	opt stack 0
  1030  000001                     ?___lmul:
  1031                           	opt stack 0
  1032  000001                     EUSART1_Write@txData:
  1033                           	opt stack 0
  1034  000001                     SPI1_Exchange8bit@data:
  1035                           	opt stack 0
  1036  000001                     PWM4_LoadDutyValue@dutyValue:
  1037                           	opt stack 0
  1038  000001                     ___wmul@multiplier:
  1039                           	opt stack 0
  1040  000001                     ___lwdiv@dividend:
  1041                           	opt stack 0
  1042  000001                     strlen@s:
  1043                           	opt stack 0
  1044  000001                     ___lmul@multiplier:
  1045                           	opt stack 0
  1046                           
  1047                           ; 4 bytes @ 0x0
  1048  000001                     	ds	1
  1049  000002                     putch@txData:
  1050                           	opt stack 0
  1051  000002                     _isdigit$950:
  1052                           	opt stack 0
  1053  000002                     SPI1_Exchange8bitBuffer@dataIn:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x1
  1057  000002                     	ds	1
  1058  000003                     ??_PWM4_LoadDutyValue:
  1059  000003                     ??_strlen:
  1060  000003                     isdigit@c:
  1061                           	opt stack 0
  1062  000003                     read_line@s:
  1063                           	opt stack 0
  1064  000003                     ___wmul@multiplicand:
  1065                           	opt stack 0
  1066  000003                     ___lwdiv@divisor:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x2
  1070  000003                     	ds	1
  1071  000004                     SPI1_Exchange8bitBuffer@bufLen:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x3
  1075  000004                     	ds	1
  1076  000005                     SPI1_Exchange8bitBuffer@dataOut:
  1077                           	opt stack 0
  1078  000005                     read_line@max_len:
  1079                           	opt stack 0
  1080  000005                     ___wmul@product:
  1081                           	opt stack 0
  1082  000005                     ___lwdiv@quotient:
  1083                           	opt stack 0
  1084  000005                     strlen@cp:
  1085                           	opt stack 0
  1086  000005                     ___lmul@multiplicand:
  1087                           	opt stack 0
  1088                           
  1089                           ; 4 bytes @ 0x4
  1090  000005                     	ds	2
  1091  000007                     ??_read_line:
  1092  000007                     ?_atoi:
  1093                           	opt stack 0
  1094  000007                     SPI1_Exchange8bitBuffer@bytesWritten:
  1095                           	opt stack 0
  1096  000007                     ___lwdiv@counter:
  1097                           	opt stack 0
  1098  000007                     atoi@s:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x6
  1102  000007                     	ds	1
  1103  000008                     ?___lwmod:
  1104                           	opt stack 0
  1105  000008                     RAM_sequential_SPI_write@latch:
  1106                           	opt stack 0
  1107  000008                     RAM_sequential_SPI_read@latch:
  1108                           	opt stack 0
  1109  000008                     read_line@i:
  1110                           	opt stack 0
  1111  000008                     ___lwmod@dividend:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x7
  1115  000008                     	ds	1
  1116  000009                     ??_atoi:
  1117  000009                     ___lmul@product:
  1118                           	opt stack 0
  1119                           
  1120                           ; 4 bytes @ 0x8
  1121  000009                     	ds	1
  1122  00000A                     RAM_sequential_SPI_write@pin_number:
  1123                           	opt stack 0
  1124  00000A                     RAM_sequential_SPI_read@pin_number:
  1125                           	opt stack 0
  1126  00000A                     read_line@c:
  1127                           	opt stack 0
  1128  00000A                     ___lwmod@divisor:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x9
  1132  00000A                     	ds	1
  1133  00000B                     atoi@sign:
  1134                           	opt stack 0
  1135  00000B                     RAM_sequential_SPI_write@address:
  1136                           	opt stack 0
  1137  00000B                     RAM_sequential_SPI_read@address:
  1138                           	opt stack 0
  1139                           
  1140                           ; 3 bytes @ 0xA
  1141  00000B                     	ds	1
  1142  00000C                     ___lwmod@counter:
  1143                           	opt stack 0
  1144  00000C                     atoi@a:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0xB
  1148  00000C                     	ds	1
  1149  00000D                     ?_printf:
  1150                           	opt stack 0
  1151  00000D                     ?_atol:
  1152                           	opt stack 0
  1153  00000D                     printf@f:
  1154                           	opt stack 0
  1155  00000D                     atol@s:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0xC
  1159  00000D                     	ds	1
  1160  00000E                     RAM_sequential_SPI_write@data_out:
  1161                           	opt stack 0
  1162  00000E                     RAM_sequential_SPI_read@data_in:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0xD
  1166  00000E                     	ds	2
  1167  000010                     RAM_sequential_SPI_write@data_out_size:
  1168                           	opt stack 0
  1169  000010                     RAM_sequential_SPI_read@data_in_size:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0xF
  1173  000010                     	ds	1
  1174  000011                     ??_atol:
  1175  000011                     ??_RAM_sequential_SPI_read:
  1176  000011                     ??_RAM_sequential_SPI_write:
  1177                           
  1178                           ; 1 bytes @ 0x10
  1179  000011                     	ds	2
  1180  000013                     ??_printf:
  1181                           
  1182                           ; 1 bytes @ 0x12
  1183  000013                     	ds	1
  1184  000014                     printf@flag:
  1185                           	opt stack 0
  1186  000014                     RAM_sequential_SPI_write@address_array:
  1187                           	opt stack 0
  1188  000014                     RAM_sequential_SPI_read@address_array:
  1189                           	opt stack 0
  1190                           
  1191                           ; 3 bytes @ 0x13
  1192  000014                     	ds	1
  1193  000015                     printf@prec:
  1194                           	opt stack 0
  1195  000015                     atol@sign:
  1196                           	opt stack 0
  1197                           
  1198                           ; 1 bytes @ 0x14
  1199  000015                     	ds	1
  1200  000016                     printf@cp:
  1201                           	opt stack 0
  1202  000016                     atol@a:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x15
  1206  000016                     	ds	2
  1207  000018                     printf@ap:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x17
  1211  000018                     	ds	2
  1212  00001A                     atol@c:
  1213                           	opt stack 0
  1214  00001A                     printf@val:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x19
  1218  00001A                     	ds	2
  1219  00001C                     printf@c:
  1220                           	opt stack 0
  1221                           
  1222                           ; 1 bytes @ 0x1B
  1223  00001C                     	ds	1
  1224  00001D                     
  1225                           ; 1 bytes @ 0x1C
  1226 ;;
  1227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1228 ;;
  1229 ;; *************** function _main *****************
  1230 ;; Defined at:
  1231 ;;		line 12 in file "main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  i               2   65[BANK0 ] int 
  1236 ;;  buffer         30   30[BANK0 ] unsigned char [30]
  1237 ;;  string         30    0[BANK0 ] unsigned char [30]
  1238 ;;  dtc             4   61[BANK0 ] unsigned long 
  1239 ;;  ind             3   67[BANK0 ] unsigned um
  1240 ;;  ch              1   70[BANK0 ] unsigned char 
  1241 ;;  n               1   60[BANK0 ] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Locals:         0      71       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Totals:         0      71       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;Total ram usage:       71 bytes
  1256 ;; Hardware stack levels required when called:    3
  1257 ;; This function calls:
  1258 ;;		_PWM4_LoadDutyValue
  1259 ;;		_RAM_sequential_SPI_read
  1260 ;;		_RAM_sequential_SPI_write
  1261 ;;		_SYSTEM_Initialize
  1262 ;;		_atoi
  1263 ;;		_atol
  1264 ;;		_getch
  1265 ;;		_printf
  1266 ;;		_read_line
  1267 ;;		_strlen
  1268 ;; This function is called by:
  1269 ;;		Startup code after reset
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text0
  1274  00F8AE                     __ptext0:
  1275                           	opt stack 0
  1276  00F8AE                     _main:
  1277                           	opt stack 28
  1278                           
  1279                           ;main.c: 13: SYSTEM_Initialize();
  1280                           
  1281                           ;incstack = 0
  1282  00F8AE  EC5E  F078         	call	_SYSTEM_Initialize	;wreg free
  1283                           
  1284                           ;main.c: 15: unsigned long int dtc = 0;
  1285  00F8B2  0E00               	movlw	0
  1286  00F8B4  0100               	movlb	0	; () banked
  1287  00F8B6  6F9D               	movwf	main@dtc& (0+255),b
  1288  00F8B8  0E00               	movlw	0
  1289  00F8BA  6F9E               	movwf	(main@dtc+1)& (0+255),b
  1290  00F8BC  0E00               	movlw	0
  1291  00F8BE  6F9F               	movwf	(main@dtc+2)& (0+255),b
  1292  00F8C0  0E00               	movlw	0
  1293  00F8C2  6FA0               	movwf	(main@dtc+3)& (0+255),b
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;main.c: 16: char string[30], buffer[30], ch;
  1297                           ;main.c: 17: uint24_t ind = 0;
  1298  00F8C4  0E00               	movlw	0
  1299  00F8C6  6FA3               	movwf	main@ind& (0+255),b
  1300  00F8C8  0E00               	movlw	0
  1301  00F8CA  6FA4               	movwf	(main@ind+1)& (0+255),b
  1302  00F8CC  0E00               	movlw	0
  1303  00F8CE  6FA5               	movwf	(main@ind+2)& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 18: uint8_t n = 2;
  1307  00F8D0  0E02               	movlw	2
  1308  00F8D2  6F9C               	movwf	main@n& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 19: printf("\n\r");
  1312  00F8D4  0EBF               	movlw	low (STR_5+17)
  1313  00F8D6  6E0D               	movwf	printf@f,c
  1314  00F8D8  0EFF               	movlw	high (STR_5+17)
  1315  00F8DA  6E0E               	movwf	printf@f+1,c
  1316  00F8DC  EC6B  F07B         	call	_printf	;wreg free
  1317  00F8E0                     
  1318                           ;main.c: 22: printf("Selezionare la velocita' del trasferimento:\n\r");
  1319  00F8E0  0EEC               	movlw	low STR_2
  1320  00F8E2  6E0D               	movwf	printf@f,c
  1321  00F8E4  0EFE               	movlw	high STR_2
  1322  00F8E6  6E0E               	movwf	printf@f+1,c
  1323  00F8E8  EC6B  F07B         	call	_printf	;wreg free
  1324                           
  1325                           ;main.c: 23: printf("\ta\tFOSC/4 (16MHz)\n\r");
  1326  00F8EC  0ED6               	movlw	low STR_3
  1327  00F8EE  6E0D               	movwf	printf@f,c
  1328  00F8F0  0EFF               	movlw	high STR_3
  1329  00F8F2  6E0E               	movwf	printf@f+1,c
  1330  00F8F4  EC6B  F07B         	call	_printf	;wreg free
  1331                           
  1332                           ;main.c: 24: printf("\tb\tFOSC/16 (4MHz)\n\r");
  1333  00F8F8  0EC2               	movlw	low STR_4
  1334  00F8FA  6E0D               	movwf	printf@f,c
  1335  00F8FC  0EFF               	movlw	high STR_4
  1336  00F8FE  6E0E               	movwf	printf@f+1,c
  1337  00F900  EC6B  F07B         	call	_printf	;wreg free
  1338                           
  1339                           ;main.c: 25: printf("\tc\tFOSC/64 (1MHz)\n\r");
  1340  00F904  0EAE               	movlw	low STR_5
  1341  00F906  6E0D               	movwf	printf@f,c
  1342  00F908  0EFF               	movlw	high STR_5
  1343  00F90A  6E0E               	movwf	printf@f+1,c
  1344  00F90C  EC6B  F07B         	call	_printf	;wreg free
  1345                           
  1346                           ;main.c: 26: printf("scelta: ");
  1347  00F910  0EEA               	movlw	low STR_6
  1348  00F912  6E0D               	movwf	printf@f,c
  1349  00F914  0EFF               	movlw	high STR_6
  1350  00F916  6E0E               	movwf	printf@f+1,c
  1351  00F918  EC6B  F07B         	call	_printf	;wreg free
  1352                           
  1353                           ;main.c: 27: ch = getch();
  1354  00F91C  EC11  F078         	call	_getch	;wreg free
  1355  00F920  0100               	movlb	0	; () banked
  1356  00F922  6FA6               	movwf	main@ch& (0+255),b
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 28: printf("%c\n\r", ch);
  1360  00F924  0EFA               	movlw	low STR_7
  1361  00F926  6E0D               	movwf	printf@f,c
  1362  00F928  0EFF               	movlw	high STR_7
  1363  00F92A  6E0E               	movwf	printf@f+1,c
  1364  00F92C  C0A6  F00F         	movff	main@ch,?_printf+2
  1365  00F930  6A10               	clrf	?_printf+3,c
  1366  00F932  EC6B  F07B         	call	_printf	;wreg free
  1367                           
  1368                           ;main.c: 29: switch (ch) {
  1369  00F936  D00E               	goto	l172
  1370  00F938  0E20               	movlw	32
  1371  00F93A  D003               	goto	L2
  1372  00F93C  0E21               	movlw	33
  1373  00F93E  D001               	goto	L2
  1374  00F940  0E22               	movlw	34
  1375  00F942                     L2:
  1376  00F942  6EC6               	movwf	4038,c	;volatile
  1377                           
  1378                           ;main.c: 35: break;
  1379  00F944  D013               	goto	l174
  1380  00F946                     
  1381                           ;main.c: 37: printf("Digitare solo uno tra i caratteri ammessi: a,b, o c.\n\r");
  1382  00F946  0E1E               	movlw	low STR_8
  1383  00F948  6E0D               	movwf	printf@f,c
  1384  00F94A  0EFE               	movlw	high STR_8
  1385  00F94C  6E0E               	movwf	printf@f+1,c
  1386  00F94E  EC6B  F07B         	call	_printf	;wreg free
  1387                           
  1388                           ;main.c: 39: }
  1389                           
  1390                           ;main.c: 38: break;
  1391  00F952  D00C               	goto	l174
  1392  00F954                     l172:
  1393  00F954  0100               	movlb	0	; () banked
  1394  00F956  51A6               	movf	main@ch& (0+255),w,b
  1395                           
  1396                           ; Switch size 1, requested type "space"
  1397                           ; Number of cases is 3, Range of values is 97 to 99
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte           10     6 (average)
  1401                           ;	Chosen strategy is simple_byte
  1402  00F958  0A61               	xorlw	97	; case 97
  1403  00F95A  B4D8               	btfsc	status,2,c
  1404  00F95C  D7ED               	goto	l173
  1405  00F95E  0A03               	xorlw	3	; case 98
  1406  00F960  B4D8               	btfsc	status,2,c
  1407  00F962  D7EC               	goto	l175
  1408  00F964  0A01               	xorlw	1	; case 99
  1409  00F966  B4D8               	btfsc	status,2,c
  1410  00F968  D7EB               	goto	l176
  1411  00F96A  D7ED               	goto	l177
  1412  00F96C                     l174:
  1413                           
  1414                           ;main.c: 40: } while (ch !='a' & ch !='b' & ch !='c');
  1415                           
  1416                           ; BSR set to: 0
  1417  00F96C  0E61               	movlw	97
  1418  00F96E  0100               	movlb	0	; () banked
  1419  00F970  19A6               	xorwf	main@ch& (0+255),w,b
  1420  00F972  B4D8               	btfsc	status,2,c
  1421  00F974  D008               	goto	u1260
  1422                           
  1423                           ; BSR set to: 0
  1424  00F976  0E62               	movlw	98
  1425  00F978  19A6               	xorwf	main@ch& (0+255),w,b
  1426  00F97A  B4D8               	btfsc	status,2,c
  1427  00F97C  D004               	goto	u1260
  1428                           
  1429                           ; BSR set to: 0
  1430  00F97E  0E63               	movlw	99
  1431  00F980  19A6               	xorwf	main@ch& (0+255),w,b
  1432  00F982  A4D8               	btfss	status,2,c
  1433  00F984  D7AD               	goto	l171
  1434  00F986                     u1260:
  1435                           
  1436                           ;main.c: 42: for (int i = 0; i < 30; i++) {
  1437                           
  1438                           ; BSR set to: 0
  1439                           
  1440                           ;main.c: 41: while (1) {
  1441                           
  1442                           ; BSR set to: 0
  1443                           
  1444                           ; BSR set to: 0
  1445  00F986  0E00               	movlw	0
  1446  00F988  0100               	movlb	0	; () banked
  1447  00F98A  6FA2               	movwf	(main@i+1)& (0+255),b
  1448  00F98C  0E00               	movlw	0
  1449  00F98E  6FA1               	movwf	main@i& (0+255),b
  1450  00F990                     l1894:
  1451                           
  1452                           ; BSR set to: 0
  1453  00F990  BFA2               	btfsc	(main@i+1)& (0+255),7,b
  1454  00F992  D006               	goto	l182
  1455  00F994  51A2               	movf	(main@i+1)& (0+255),w,b
  1456  00F996  E117               	bnz	l1904
  1457  00F998  0E1E               	movlw	30
  1458  00F99A  5DA1               	subwf	main@i& (0+255),w,b
  1459  00F99C  B0D8               	btfsc	status,0,c
  1460  00F99E  D013               	goto	u1280
  1461  00F9A0                     l182:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;main.c: 43: string[i] = '\0';
  1465                           
  1466                           ; BSR set to: 0
  1467  00F9A0  0E60               	movlw	low main@string
  1468  00F9A2  25A1               	addwf	main@i& (0+255),w,b
  1469  00F9A4  6ED9               	movwf	fsr2l,c
  1470  00F9A6  0E00               	movlw	high main@string
  1471  00F9A8  21A2               	addwfc	(main@i+1)& (0+255),w,b
  1472  00F9AA  6EDA               	movwf	fsr2h,c
  1473  00F9AC  0E00               	movlw	0
  1474  00F9AE  6EDF               	movwf	indf2,c
  1475                           
  1476                           ;main.c: 44: buffer[i] = '\0';
  1477  00F9B0  0E7E               	movlw	low main@buffer
  1478  00F9B2  25A1               	addwf	main@i& (0+255),w,b
  1479  00F9B4  6ED9               	movwf	fsr2l,c
  1480  00F9B6  0E00               	movlw	high main@buffer
  1481  00F9B8  21A2               	addwfc	(main@i+1)& (0+255),w,b
  1482  00F9BA  6EDA               	movwf	fsr2h,c
  1483  00F9BC  0E00               	movlw	0
  1484  00F9BE  6EDF               	movwf	indf2,c
  1485                           
  1486                           ; BSR set to: 0
  1487  00F9C0  4BA1               	infsnz	main@i& (0+255),f,b
  1488  00F9C2  2BA2               	incf	(main@i+1)& (0+255),f,b
  1489  00F9C4  D7E5               	goto	l1894
  1490  00F9C6                     u1280:
  1491  00F9C6                     l1904:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;main.c: 47: printf("Digitare invio per non apportare cambiamenti.\n\r");
  1495  00F9C6  0EBC               	movlw	low STR_9
  1496  00F9C8  6E0D               	movwf	printf@f,c
  1497  00F9CA  0EFE               	movlw	high STR_9
  1498  00F9CC  6E0E               	movwf	printf@f+1,c
  1499  00F9CE  EC6B  F07B         	call	_printf	;wreg free
  1500                           
  1501                           ;main.c: 48: printf("Digitare il duty cycle del PWM (0 - 1023): ");
  1502  00F9D2  0E1A               	movlw	low STR_10
  1503  00F9D4  6E0D               	movwf	printf@f,c
  1504  00F9D6  0EFF               	movlw	high STR_10
  1505  00F9D8  6E0E               	movwf	printf@f+1,c
  1506  00F9DA  EC6B  F07B         	call	_printf	;wreg free
  1507                           
  1508                           ;main.c: 49: read_line(string, 30);
  1509  00F9DE  0E60               	movlw	low main@string
  1510  00F9E0  6E03               	movwf	read_line@s,c
  1511  00F9E2  0E00               	movlw	high main@string
  1512  00F9E4  6E04               	movwf	read_line@s+1,c
  1513  00F9E6  0E00               	movlw	0
  1514  00F9E8  6E06               	movwf	read_line@max_len+1,c
  1515  00F9EA  0E1E               	movlw	30
  1516  00F9EC  6E05               	movwf	read_line@max_len,c
  1517  00F9EE  EC39  F07A         	call	_read_line	;wreg free
  1518                           
  1519                           ;main.c: 50: dtc =(unsigned long int) atol(string);
  1520  00F9F2  0E60               	movlw	low main@string
  1521  00F9F4  6E0D               	movwf	atol@s,c
  1522  00F9F6  0E00               	movlw	high main@string
  1523  00F9F8  6E0E               	movwf	atol@s+1,c
  1524  00F9FA  ECF1  F07A         	call	_atol	;wreg free
  1525  00F9FE  C00D  F09D         	movff	?_atol,main@dtc
  1526  00FA02  C00E  F09E         	movff	?_atol+1,main@dtc+1
  1527  00FA06  C00F  F09F         	movff	?_atol+2,main@dtc+2
  1528  00FA0A  C010  F0A0         	movff	?_atol+3,main@dtc+3
  1529                           
  1530                           ;main.c: 51: if (dtc > 1023) printf("Immettere un valore compreso nell'intervallo 0 - 10
      +                          23.\n\r");
  1531  00FA0E  0100               	movlb	0	; () banked
  1532  00FA10  51A0               	movf	(main@dtc+3)& (0+255),w,b
  1533  00FA12  119F               	iorwf	(main@dtc+2)& (0+255),w,b
  1534  00FA14  E104               	bnz	u1290
  1535  00FA16  0E04               	movlw	4
  1536  00FA18  5D9E               	subwf	(main@dtc+1)& (0+255),w,b
  1537  00FA1A  A0D8               	btfss	status,0,c
  1538  00FA1C  D007               	goto	l185
  1539  00FA1E                     u1290:
  1540                           
  1541                           ; BSR set to: 0
  1542  00FA1E  0EE5               	movlw	low STR_11
  1543  00FA20  6E0D               	movwf	printf@f,c
  1544  00FA22  0EFD               	movlw	high STR_11
  1545  00FA24  6E0E               	movwf	printf@f+1,c
  1546  00FA26  EC6B  F07B         	call	_printf	;wreg free
  1547  00FA2A  D00A               	goto	l187
  1548  00FA2C                     l185:
  1549                           
  1550                           ;main.c: 52: else if(string[0] != '\0') PWM4_LoadDutyValue(dtc);
  1551  00FA2C  0100               	movlb	0	; () banked
  1552  00FA2E  5160               	movf	main@string& (0+255),w,b
  1553  00FA30  B4D8               	btfsc	status,2,c
  1554  00FA32  D006               	goto	l187
  1555                           
  1556                           ; BSR set to: 0
  1557  00FA34  C09D  F001         	movff	main@dtc,PWM4_LoadDutyValue@dutyValue
  1558  00FA38  C09E  F002         	movff	main@dtc+1,PWM4_LoadDutyValue@dutyValue+1
  1559  00FA3C  ECA3  F078         	call	_PWM4_LoadDutyValue	;wreg free
  1560  00FA40                     l187:
  1561                           
  1562                           ;main.c: 53: } while (dtc > 1023);
  1563  00FA40  0100               	movlb	0	; () banked
  1564  00FA42  51A0               	movf	(main@dtc+3)& (0+255),w,b
  1565  00FA44  119F               	iorwf	(main@dtc+2)& (0+255),w,b
  1566  00FA46  E1BF               	bnz	l1904
  1567  00FA48  0E04               	movlw	4
  1568  00FA4A  5D9E               	subwf	(main@dtc+1)& (0+255),w,b
  1569  00FA4C  B0D8               	btfsc	status,0,c
  1570  00FA4E  D7BB               	goto	u1280
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;main.c: 54: printf("Digitare invio per ritornare alla selezione del duty cycle.\n\r");
  1574                           
  1575                           ; BSR set to: 0
  1576  00FA50  0EF5               	movlw	low STR_12
  1577  00FA52  6E0D               	movwf	printf@f,c
  1578  00FA54  0EFC               	movlw	high STR_12
  1579  00FA56  6E0E               	movwf	printf@f+1,c
  1580  00FA58  EC6B  F07B         	call	_printf	;wreg free
  1581                           
  1582                           ;main.c: 55: printf("Digitare se leggere (a) o scrivere (b) dalle RAM: ");
  1583  00FA5C  0E89               	movlw	low STR_13
  1584  00FA5E  6E0D               	movwf	printf@f,c
  1585  00FA60  0EFE               	movlw	high STR_13
  1586  00FA62  6E0E               	movwf	printf@f+1,c
  1587  00FA64  EC6B  F07B         	call	_printf	;wreg free
  1588                           
  1589                           ;main.c: 56: ch = getch();
  1590  00FA68  EC11  F078         	call	_getch	;wreg free
  1591  00FA6C  0100               	movlb	0	; () banked
  1592  00FA6E  6FA6               	movwf	main@ch& (0+255),b
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;main.c: 57: printf("%c\n\r", ch);
  1596  00FA70  0EFA               	movlw	low STR_7
  1597  00FA72  6E0D               	movwf	printf@f,c
  1598  00FA74  0EFF               	movlw	high STR_7
  1599  00FA76  6E0E               	movwf	printf@f+1,c
  1600  00FA78  C0A6  F00F         	movff	main@ch,?_printf+2
  1601  00FA7C  6A10               	clrf	?_printf+3,c
  1602  00FA7E  EC6B  F07B         	call	_printf	;wreg free
  1603                           
  1604                           ;main.c: 58: if (ch == 'a') {
  1605  00FA82  0E61               	movlw	97
  1606  00FA84  0100               	movlb	0	; () banked
  1607  00FA86  19A6               	xorwf	main@ch& (0+255),w,b
  1608  00FA88  A4D8               	btfss	status,2,c
  1609  00FA8A  D086               	goto	l189
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;main.c: 59: printf("Digitare a quale indirizzo stampare il contenuto delle RAM: ");
  1613  00FA8C  0E33               	movlw	low STR_15
  1614  00FA8E  6E0D               	movwf	printf@f,c
  1615  00FA90  0EFD               	movlw	high STR_15
  1616  00FA92  6E0E               	movwf	printf@f+1,c
  1617  00FA94  EC6B  F07B         	call	_printf	;wreg free
  1618                           
  1619                           ;main.c: 60: read_line(string, 30);
  1620  00FA98  0E60               	movlw	low main@string
  1621  00FA9A  6E03               	movwf	read_line@s,c
  1622  00FA9C  0E00               	movlw	high main@string
  1623  00FA9E  6E04               	movwf	read_line@s+1,c
  1624  00FAA0  0E00               	movlw	0
  1625  00FAA2  6E06               	movwf	read_line@max_len+1,c
  1626  00FAA4  0E1E               	movlw	30
  1627  00FAA6  6E05               	movwf	read_line@max_len,c
  1628  00FAA8  EC39  F07A         	call	_read_line	;wreg free
  1629                           
  1630                           ;main.c: 61: ind = atoi(string);
  1631  00FAAC  0E60               	movlw	low main@string
  1632  00FAAE  6E07               	movwf	atoi@s,c
  1633  00FAB0  0E00               	movlw	high main@string
  1634  00FAB2  6E08               	movwf	atoi@s+1,c
  1635  00FAB4  EC8A  F07A         	call	_atoi	;wreg free
  1636  00FAB8  C007  F0A3         	movff	?_atoi,main@ind
  1637  00FABC  C008  F0A4         	movff	?_atoi+1,main@ind+1
  1638  00FAC0  0100               	movlb	0	; () banked
  1639  00FAC2  6BA5               	clrf	(main@ind+2)& (0+255),b
  1640  00FAC4  BFA4               	btfsc	(main@ind+1)& (0+255),7,b
  1641  00FAC6  07A5               	decf	(main@ind+2)& (0+255),f,b
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 62: RAM_sequential_SPI_read(&LATC, 0, ind, buffer, 30);
  1645  00FAC8  0E8B               	movlw	139
  1646  00FACA  6E08               	movwf	RAM_sequential_SPI_read@latch,c
  1647  00FACC  0E0F               	movlw	15
  1648  00FACE  6E09               	movwf	RAM_sequential_SPI_read@latch+1,c
  1649  00FAD0  0E00               	movlw	0
  1650  00FAD2  6E0A               	movwf	RAM_sequential_SPI_read@pin_number,c
  1651  00FAD4  C0A3  F00B         	movff	main@ind,RAM_sequential_SPI_read@address
  1652  00FAD8  C0A4  F00C         	movff	main@ind+1,RAM_sequential_SPI_read@address+1
  1653  00FADC  C0A5  F00D         	movff	main@ind+2,RAM_sequential_SPI_read@address+2
  1654  00FAE0  0E7E               	movlw	low main@buffer
  1655  00FAE2  6E0E               	movwf	RAM_sequential_SPI_read@data_in,c
  1656  00FAE4  0E00               	movlw	high main@buffer
  1657  00FAE6  6E0F               	movwf	RAM_sequential_SPI_read@data_in+1,c
  1658  00FAE8  0E1E               	movlw	30
  1659  00FAEA  6E10               	movwf	RAM_sequential_SPI_read@data_in_size,c
  1660  00FAEC  EC99  F079         	call	_RAM_sequential_SPI_read	;wreg free
  1661                           
  1662                           ;main.c: 63: buffer[29] = '\0';
  1663  00FAF0  0E00               	movlw	0
  1664  00FAF2  0100               	movlb	0	; () banked
  1665  00FAF4  6F9B               	movwf	(main@buffer+29)& (0+255),b
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 64: printf("Le stringhe attualmente in memoria all'indirizzo %d:\n\r%s\n\r", (i
      +                          nt) ind, buffer);
  1669  00FAF6  0E70               	movlw	low STR_16
  1670  00FAF8  6E0D               	movwf	printf@f,c
  1671  00FAFA  0EFD               	movlw	high STR_16
  1672  00FAFC  6E0E               	movwf	printf@f+1,c
  1673  00FAFE  C0A3  F00F         	movff	main@ind,?_printf+2
  1674  00FB02  C0A4  F010         	movff	main@ind+1,?_printf+3
  1675  00FB06  0E7E               	movlw	low main@buffer
  1676  00FB08  6E11               	movwf	?_printf+4,c
  1677  00FB0A  0E00               	movlw	high main@buffer
  1678  00FB0C  6E12               	movwf	?_printf+5,c
  1679  00FB0E  EC6B  F07B         	call	_printf	;wreg free
  1680                           
  1681                           ;main.c: 65: RAM_sequential_SPI_read(&LATC, 1, ind, buffer, 30);
  1682  00FB12  0E8B               	movlw	139
  1683  00FB14  6E08               	movwf	RAM_sequential_SPI_read@latch,c
  1684  00FB16  0E0F               	movlw	15
  1685  00FB18  6E09               	movwf	RAM_sequential_SPI_read@latch+1,c
  1686  00FB1A  0E01               	movlw	1
  1687  00FB1C  6E0A               	movwf	RAM_sequential_SPI_read@pin_number,c
  1688  00FB1E  C0A3  F00B         	movff	main@ind,RAM_sequential_SPI_read@address
  1689  00FB22  C0A4  F00C         	movff	main@ind+1,RAM_sequential_SPI_read@address+1
  1690  00FB26  C0A5  F00D         	movff	main@ind+2,RAM_sequential_SPI_read@address+2
  1691  00FB2A  0E7E               	movlw	low main@buffer
  1692  00FB2C  6E0E               	movwf	RAM_sequential_SPI_read@data_in,c
  1693  00FB2E  0E00               	movlw	high main@buffer
  1694  00FB30  6E0F               	movwf	RAM_sequential_SPI_read@data_in+1,c
  1695  00FB32  0E1E               	movlw	30
  1696  00FB34  6E10               	movwf	RAM_sequential_SPI_read@data_in_size,c
  1697  00FB36  EC99  F079         	call	_RAM_sequential_SPI_read	;wreg free
  1698                           
  1699                           ;main.c: 66: buffer[29] = '\0';
  1700  00FB3A  0E00               	movlw	0
  1701  00FB3C  0100               	movlb	0	; () banked
  1702  00FB3E  6F9B               	movwf	(main@buffer+29)& (0+255),b
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;main.c: 67: printf("%s\n\r", buffer);
  1706  00FB40  0EE0               	movlw	low (STR_24+53)
  1707  00FB42  6E0D               	movwf	printf@f,c
  1708  00FB44  0EFD               	movlw	high (STR_24+53)
  1709  00FB46  6E0E               	movwf	printf@f+1,c
  1710  00FB48  0E7E               	movlw	low main@buffer
  1711  00FB4A  6E0F               	movwf	?_printf+2,c
  1712  00FB4C  0E00               	movlw	high main@buffer
  1713  00FB4E  6E10               	movwf	?_printf+3,c
  1714  00FB50  EC6B  F07B         	call	_printf	;wreg free
  1715                           
  1716                           ;main.c: 68: RAM_sequential_SPI_read(&LATC, 2, ind, buffer, 30);
  1717  00FB54  0E8B               	movlw	139
  1718  00FB56  6E08               	movwf	RAM_sequential_SPI_read@latch,c
  1719  00FB58  0E0F               	movlw	15
  1720  00FB5A  6E09               	movwf	RAM_sequential_SPI_read@latch+1,c
  1721  00FB5C  0E02               	movlw	2
  1722  00FB5E  6E0A               	movwf	RAM_sequential_SPI_read@pin_number,c
  1723  00FB60  C0A3  F00B         	movff	main@ind,RAM_sequential_SPI_read@address
  1724  00FB64  C0A4  F00C         	movff	main@ind+1,RAM_sequential_SPI_read@address+1
  1725  00FB68  C0A5  F00D         	movff	main@ind+2,RAM_sequential_SPI_read@address+2
  1726  00FB6C  0E7E               	movlw	low main@buffer
  1727  00FB6E  6E0E               	movwf	RAM_sequential_SPI_read@data_in,c
  1728  00FB70  0E00               	movlw	high main@buffer
  1729  00FB72  6E0F               	movwf	RAM_sequential_SPI_read@data_in+1,c
  1730  00FB74  0E1E               	movlw	30
  1731  00FB76  6E10               	movwf	RAM_sequential_SPI_read@data_in_size,c
  1732  00FB78  EC99  F079         	call	_RAM_sequential_SPI_read	;wreg free
  1733                           
  1734                           ;main.c: 69: buffer[29] = '\0';
  1735  00FB7C  0E00               	movlw	0
  1736  00FB7E  0100               	movlb	0	; () banked
  1737  00FB80  6F9B               	movwf	(main@buffer+29)& (0+255),b
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 70: printf("%s\n\r", buffer);
  1741  00FB82  0EE0               	movlw	low (STR_24+53)
  1742  00FB84  6E0D               	movwf	printf@f,c
  1743  00FB86  0EFD               	movlw	high (STR_24+53)
  1744  00FB88  6E0E               	movwf	printf@f+1,c
  1745  00FB8A  0E7E               	movlw	low main@buffer
  1746  00FB8C  6E0F               	movwf	?_printf+2,c
  1747  00FB8E  0E00               	movlw	high main@buffer
  1748  00FB90  6E10               	movwf	?_printf+3,c
  1749  00FB92  EC6B  F07B         	call	_printf	;wreg free
  1750                           
  1751                           ;main.c: 71: } else {
  1752  00FB96  D6F7               	goto	u1260
  1753  00FB98                     l189:
  1754                           
  1755                           ;main.c: 72: if (ch == 'b') {
  1756  00FB98  0E62               	movlw	98
  1757  00FB9A  0100               	movlb	0	; () banked
  1758  00FB9C  19A6               	xorwf	main@ch& (0+255),w,b
  1759  00FB9E  A4D8               	btfss	status,2,c
  1760  00FBA0  D09D               	goto	l191
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 73: printf("Digitare su quale RAM scrivere (a,b, o c):");
  1764  00FBA2  0E46               	movlw	low STR_19
  1765  00FBA4  6E0D               	movwf	printf@f,c
  1766  00FBA6  0EFF               	movlw	high STR_19
  1767  00FBA8  6E0E               	movwf	printf@f+1,c
  1768  00FBAA  EC6B  F07B         	call	_printf	;wreg free
  1769                           
  1770                           ;main.c: 74: ch = getch();
  1771  00FBAE  EC11  F078         	call	_getch	;wreg free
  1772  00FBB2  0100               	movlb	0	; () banked
  1773  00FBB4  6FA6               	movwf	main@ch& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;main.c: 75: printf("%c\n\r", ch);
  1777  00FBB6  0EFA               	movlw	low STR_7
  1778  00FBB8  6E0D               	movwf	printf@f,c
  1779  00FBBA  0EFF               	movlw	high STR_7
  1780  00FBBC  6E0E               	movwf	printf@f+1,c
  1781  00FBBE  C0A6  F00F         	movff	main@ch,?_printf+2
  1782  00FBC2  6A10               	clrf	?_printf+3,c
  1783  00FBC4  EC6B  F07B         	call	_printf	;wreg free
  1784                           
  1785                           ;main.c: 76: switch (ch) {
  1786  00FBC8  D00F               	goto	l192
  1787  00FBCA  0E00               	movlw	0
  1788  00FBCC  0100               	movlb	0	; () banked
  1789  00FBCE  D003               	goto	L4
  1790  00FBD0                     
  1791                           ; BSR set to: 0
  1792                           
  1793                           ; BSR set to: 0
  1794  00FBD0  0E01               	movlw	1
  1795  00FBD2  D001               	goto	L4
  1796  00FBD4                     
  1797                           ; BSR set to: 0
  1798                           
  1799                           ; BSR set to: 0
  1800  00FBD4  0E02               	movlw	2
  1801  00FBD6                     L4:
  1802  00FBD6  6F9C               	movwf	main@n& (0+255),b
  1803                           
  1804                           ;main.c: 82: break;
  1805  00FBD8  D013               	goto	l194
  1806  00FBDA                     
  1807                           ; BSR set to: 0
  1808                           ;main.c: 84: printf("Digitare solo uno tra i caratteri ammessi: a,b, o c.\n\r");
  1809                           
  1810                           ; BSR set to: 0
  1811  00FBDA  0E1E               	movlw	low STR_8
  1812  00FBDC  6E0D               	movwf	printf@f,c
  1813  00FBDE  0EFE               	movlw	high STR_8
  1814  00FBE0  6E0E               	movwf	printf@f+1,c
  1815  00FBE2  EC6B  F07B         	call	_printf	;wreg free
  1816                           
  1817                           ;main.c: 86: }
  1818                           
  1819                           ;main.c: 85: break;
  1820  00FBE6  D00C               	goto	l194
  1821  00FBE8                     l192:
  1822  00FBE8  0100               	movlb	0	; () banked
  1823  00FBEA  51A6               	movf	main@ch& (0+255),w,b
  1824                           
  1825                           ; Switch size 1, requested type "space"
  1826                           ; Number of cases is 3, Range of values is 97 to 99
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte           10     6 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831  00FBEC  0A61               	xorlw	97	; case 97
  1832  00FBEE  B4D8               	btfsc	status,2,c
  1833  00FBF0  D7EC               	goto	l193
  1834  00FBF2  0A03               	xorlw	3	; case 98
  1835  00FBF4  B4D8               	btfsc	status,2,c
  1836  00FBF6  D7EC               	goto	l195
  1837  00FBF8  0A01               	xorlw	1	; case 99
  1838  00FBFA  B4D8               	btfsc	status,2,c
  1839  00FBFC  D7EB               	goto	l196
  1840  00FBFE  D7ED               	goto	l197
  1841  00FC00                     l194:
  1842                           
  1843                           ;main.c: 87: printf("Digitare a quale indirizzo scrivere: ");
  1844                           
  1845                           ; BSR set to: 0
  1846  00FC00  0E71               	movlw	low STR_22
  1847  00FC02  6E0D               	movwf	printf@f,c
  1848  00FC04  0EFF               	movlw	high STR_22
  1849  00FC06  6E0E               	movwf	printf@f+1,c
  1850  00FC08  EC6B  F07B         	call	_printf	;wreg free
  1851                           
  1852                           ;main.c: 88: read_line(string, 30);
  1853  00FC0C  0E60               	movlw	low main@string
  1854  00FC0E  6E03               	movwf	read_line@s,c
  1855  00FC10  0E00               	movlw	high main@string
  1856  00FC12  6E04               	movwf	read_line@s+1,c
  1857  00FC14  0E00               	movlw	0
  1858  00FC16  6E06               	movwf	read_line@max_len+1,c
  1859  00FC18  0E1E               	movlw	30
  1860  00FC1A  6E05               	movwf	read_line@max_len,c
  1861  00FC1C  EC39  F07A         	call	_read_line	;wreg free
  1862                           
  1863                           ;main.c: 89: ind = atoi(string);
  1864  00FC20  0E60               	movlw	low main@string
  1865  00FC22  6E07               	movwf	atoi@s,c
  1866  00FC24  0E00               	movlw	high main@string
  1867  00FC26  6E08               	movwf	atoi@s+1,c
  1868  00FC28  EC8A  F07A         	call	_atoi	;wreg free
  1869  00FC2C  C007  F0A3         	movff	?_atoi,main@ind
  1870  00FC30  C008  F0A4         	movff	?_atoi+1,main@ind+1
  1871  00FC34  0100               	movlb	0	; () banked
  1872  00FC36  6BA5               	clrf	(main@ind+2)& (0+255),b
  1873  00FC38  BFA4               	btfsc	(main@ind+1)& (0+255),7,b
  1874  00FC3A  07A5               	decf	(main@ind+2)& (0+255),f,b
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 90: printf("Digitare una stringa: ");
  1878  00FC3C  0E97               	movlw	low STR_23
  1879  00FC3E  6E0D               	movwf	printf@f,c
  1880  00FC40  0EFF               	movlw	high STR_23
  1881  00FC42  6E0E               	movwf	printf@f+1,c
  1882  00FC44  EC6B  F07B         	call	_printf	;wreg free
  1883                           
  1884                           ;main.c: 91: read_line(string, 30);
  1885  00FC48  0E60               	movlw	low main@string
  1886  00FC4A  6E03               	movwf	read_line@s,c
  1887  00FC4C  0E00               	movlw	high main@string
  1888  00FC4E  6E04               	movwf	read_line@s+1,c
  1889  00FC50  0E00               	movlw	0
  1890  00FC52  6E06               	movwf	read_line@max_len+1,c
  1891  00FC54  0E1E               	movlw	30
  1892  00FC56  6E05               	movwf	read_line@max_len,c
  1893  00FC58  EC39  F07A         	call	_read_line	;wreg free
  1894                           
  1895                           ;main.c: 92: RAM_sequential_SPI_write(&LATC, n, ind, string, strlen(string));
  1896  00FC5C  0E8B               	movlw	139
  1897  00FC5E  6E08               	movwf	RAM_sequential_SPI_write@latch,c
  1898  00FC60  0E0F               	movlw	15
  1899  00FC62  6E09               	movwf	RAM_sequential_SPI_write@latch+1,c
  1900  00FC64  C09C  F00A         	movff	main@n,RAM_sequential_SPI_write@pin_number
  1901  00FC68  C0A3  F00B         	movff	main@ind,RAM_sequential_SPI_write@address
  1902  00FC6C  C0A4  F00C         	movff	main@ind+1,RAM_sequential_SPI_write@address+1
  1903  00FC70  C0A5  F00D         	movff	main@ind+2,RAM_sequential_SPI_write@address+2
  1904  00FC74  0E60               	movlw	low main@string
  1905  00FC76  6E0E               	movwf	RAM_sequential_SPI_write@data_out,c
  1906  00FC78  0E00               	movlw	high main@string
  1907  00FC7A  6E0F               	movwf	RAM_sequential_SPI_write@data_out+1,c
  1908  00FC7C  0E60               	movlw	low main@string
  1909  00FC7E  6E01               	movwf	strlen@s,c
  1910  00FC80  0E00               	movlw	high main@string
  1911  00FC82  6E02               	movwf	strlen@s+1,c
  1912  00FC84  ECBC  F078         	call	_strlen	;wreg free
  1913  00FC88  5001               	movf	?_strlen,w,c
  1914  00FC8A  6E10               	movwf	RAM_sequential_SPI_write@data_out_size,c
  1915  00FC8C  ECE9  F079         	call	_RAM_sequential_SPI_write	;wreg free
  1916                           
  1917                           ;main.c: 93: RAM_sequential_SPI_read(&LATC, n, ind, buffer, 30);
  1918  00FC90  0E8B               	movlw	139
  1919  00FC92  6E08               	movwf	RAM_sequential_SPI_read@latch,c
  1920  00FC94  0E0F               	movlw	15
  1921  00FC96  6E09               	movwf	RAM_sequential_SPI_read@latch+1,c
  1922  00FC98  C09C  F00A         	movff	main@n,RAM_sequential_SPI_read@pin_number
  1923  00FC9C  C0A3  F00B         	movff	main@ind,RAM_sequential_SPI_read@address
  1924  00FCA0  C0A4  F00C         	movff	main@ind+1,RAM_sequential_SPI_read@address+1
  1925  00FCA4  C0A5  F00D         	movff	main@ind+2,RAM_sequential_SPI_read@address+2
  1926  00FCA8  0E7E               	movlw	low main@buffer
  1927  00FCAA  6E0E               	movwf	RAM_sequential_SPI_read@data_in,c
  1928  00FCAC  0E00               	movlw	high main@buffer
  1929  00FCAE  6E0F               	movwf	RAM_sequential_SPI_read@data_in+1,c
  1930  00FCB0  0E1E               	movlw	30
  1931  00FCB2  6E10               	movwf	RAM_sequential_SPI_read@data_in_size,c
  1932  00FCB4  EC99  F079         	call	_RAM_sequential_SPI_read	;wreg free
  1933                           
  1934                           ;main.c: 94: buffer[29] = '\0';
  1935  00FCB8  0E00               	movlw	0
  1936  00FCBA  0100               	movlb	0	; () banked
  1937  00FCBC  6F9B               	movwf	(main@buffer+29)& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;main.c: 95: printf("La stringa attualmente in memoria all'indirizzo %d:\n\r%s\n\r", (in
      +                          t) ind, buffer);
  1941  00FCBE  0EAB               	movlw	low STR_24
  1942  00FCC0  6E0D               	movwf	printf@f,c
  1943  00FCC2  0EFD               	movlw	high STR_24
  1944  00FCC4  6E0E               	movwf	printf@f+1,c
  1945  00FCC6  C0A3  F00F         	movff	main@ind,?_printf+2
  1946  00FCCA  C0A4  F010         	movff	main@ind+1,?_printf+3
  1947  00FCCE  0E7E               	movlw	low main@buffer
  1948  00FCD0  6E11               	movwf	?_printf+4,c
  1949  00FCD2  0E00               	movlw	high main@buffer
  1950  00FCD4  6E12               	movwf	?_printf+5,c
  1951  00FCD6  EC6B  F07B         	call	_printf	;wreg free
  1952                           
  1953                           ;main.c: 96: } else printf("Digitare solo uno tra i caratteri ammessi: a o b.\n\r");
  1954  00FCDA  D655               	goto	u1260
  1955  00FCDC                     l191:
  1956  00FCDC  0E55               	movlw	low STR_25
  1957  00FCDE  6E0D               	movwf	printf@f,c
  1958  00FCE0  0EFE               	movlw	high STR_25
  1959  00FCE2  6E0E               	movwf	printf@f+1,c
  1960  00FCE4  EC6B  F07B         	call	_printf	;wreg free
  1961  00FCE8  D64E               	goto	u1260
  1962  00FCEA                     __end_of_main:
  1963                           	opt stack 0
  1964                           indf2	equ	0xFDF
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _strlen *****************
  1970 ;; Defined at:
  1971 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1974 ;;		 -> main@string(30), 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  1977 ;;		 -> main@string(30), 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2    0[COMRAM] unsigned int 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        6 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text1
  2001  00F178                     __ptext1:
  2002                           	opt stack 0
  2003  00F178                     _strlen:
  2004                           	opt stack 30
  2005                           
  2006                           ;incstack = 0
  2007  00F178  C001  F005         	movff	strlen@s,strlen@cp
  2008  00F17C  C002  F006         	movff	strlen@s+1,strlen@cp+1
  2009  00F180  D002               	goto	l890
  2010  00F182  4A05               	infsnz	strlen@cp,f,c
  2011  00F184  2A06               	incf	strlen@cp+1,f,c
  2012  00F186                     l890:
  2013  00F186  C005  FFD9         	movff	strlen@cp,fsr2l
  2014  00F18A  C006  FFDA         	movff	strlen@cp+1,fsr2h
  2015  00F18E  50DF               	movf	indf2,w,c
  2016  00F190  A4D8               	btfss	status,2,c
  2017  00F192  D7F7               	goto	l891
  2018  00F194  C001  F003         	movff	strlen@s,??_strlen
  2019  00F198  C002  F004         	movff	strlen@s+1,??_strlen+1
  2020  00F19C  1E03               	comf	??_strlen,f,c
  2021  00F19E  1E04               	comf	??_strlen+1,f,c
  2022  00F1A0  4A03               	infsnz	??_strlen,f,c
  2023  00F1A2  2A04               	incf	??_strlen+1,f,c
  2024  00F1A4  5005               	movf	strlen@cp,w,c
  2025  00F1A6  2403               	addwf	??_strlen,w,c
  2026  00F1A8  6E01               	movwf	?_strlen,c
  2027  00F1AA  5006               	movf	strlen@cp+1,w,c
  2028  00F1AC  2004               	addwfc	??_strlen+1,w,c
  2029  00F1AE  6E02               	movwf	?_strlen+1,c
  2030  00F1B0  0012               	return	
  2031  00F1B2                     __end_of_strlen:
  2032                           	opt stack 0
  2033                           indf2	equ	0xFDF
  2034                           fsr2h	equ	0xFDA
  2035                           fsr2l	equ	0xFD9
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _read_line *****************
  2039 ;; Defined at:
  2040 ;;		line 131 in file "main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  s               2    2[COMRAM] PTR unsigned char 
  2043 ;;		 -> main@string(30), 
  2044 ;;  max_len         2    4[COMRAM] int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  c               1    9[COMRAM] unsigned char 
  2047 ;;  i               2    7[COMRAM] int 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    2
  2064 ;; This function calls:
  2065 ;;		_EUSART1_Read
  2066 ;;		_putch
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text2
  2073  00F472                     __ptext2:
  2074                           	opt stack 0
  2075  00F472                     _read_line:
  2076                           	opt stack 28
  2077                           
  2078                           ;main.c: 132: int i = 0;
  2079                           
  2080                           ;incstack = 0
  2081  00F472  0E00               	movlw	0
  2082  00F474  6E09               	movwf	read_line@i+1,c
  2083  00F476  0E00               	movlw	0
  2084  00F478  6E08               	movwf	read_line@i,c
  2085  00F47A                     
  2086                           ;main.c: 134: char c = EUSART1_Read();
  2087  00F47A  EC38  F078         	call	_EUSART1_Read	;wreg free
  2088  00F47E  6E0A               	movwf	read_line@c,c
  2089                           
  2090                           ;main.c: 135: if (c == 13) {
  2091  00F480  0E0D               	movlw	13
  2092  00F482  180A               	xorwf	read_line@c,w,c
  2093  00F484  A4D8               	btfss	status,2,c
  2094  00F486  D00F               	goto	l214
  2095                           
  2096                           ;main.c: 136: putch(c);
  2097  00F488  500A               	movf	read_line@c,w,c
  2098  00F48A  EC17  F078         	call	_putch
  2099                           
  2100                           ;main.c: 137: putch(10);
  2101  00F48E  0E0A               	movlw	10
  2102  00F490  EC17  F078         	call	_putch
  2103                           
  2104                           ;main.c: 138: s[i] = 0;
  2105  00F494  5008               	movf	read_line@i,w,c
  2106  00F496  2403               	addwf	read_line@s,w,c
  2107  00F498  6ED9               	movwf	fsr2l,c
  2108  00F49A  5009               	movf	read_line@i+1,w,c
  2109  00F49C  2004               	addwfc	read_line@s+1,w,c
  2110  00F49E  6EDA               	movwf	fsr2h,c
  2111  00F4A0  0E00               	movlw	0
  2112  00F4A2  6EDF               	movwf	indf2,c
  2113                           
  2114                           ;main.c: 139: return;
  2115  00F4A4  0012               	return	
  2116  00F4A6                     l214:
  2117  00F4A6  0E7F               	movlw	127
  2118  00F4A8  180A               	xorwf	read_line@c,w,c
  2119  00F4AA  B4D8               	btfsc	status,2,c
  2120  00F4AC  D004               	goto	u1030
  2121  00F4AE  0E08               	movlw	8
  2122  00F4B0  180A               	xorwf	read_line@c,w,c
  2123  00F4B2  A4D8               	btfss	status,2,c
  2124  00F4B4  D014               	goto	l217
  2125  00F4B6                     u1030:
  2126                           
  2127                           ;main.c: 141: if (i > 0) {
  2128  00F4B6  BE09               	btfsc	read_line@i+1,7,c
  2129  00F4B8  D7E0               	goto	l213
  2130  00F4BA  5009               	movf	read_line@i+1,w,c
  2131  00F4BC  E103               	bnz	u1040
  2132  00F4BE  0408               	decf	read_line@i,w,c
  2133  00F4C0  A0D8               	btfss	status,0,c
  2134  00F4C2  D7DB               	goto	l213
  2135  00F4C4                     u1040:
  2136                           
  2137                           ;main.c: 142: putch(c);
  2138  00F4C4  500A               	movf	read_line@c,w,c
  2139  00F4C6  EC17  F078         	call	_putch
  2140                           
  2141                           ;main.c: 143: putch(' ');
  2142  00F4CA  0E20               	movlw	32
  2143  00F4CC  EC17  F078         	call	_putch
  2144                           
  2145                           ;main.c: 144: putch(c);
  2146  00F4D0  500A               	movf	read_line@c,w,c
  2147  00F4D2  EC17  F078         	call	_putch
  2148                           
  2149                           ;main.c: 145: --i;
  2150  00F4D6  0608               	decf	read_line@i,f,c
  2151  00F4D8  A0D8               	btfss	status,0,c
  2152  00F4DA  0609               	decf	read_line@i+1,f,c
  2153                           
  2154                           ;main.c: 146: }
  2155                           ;main.c: 147: } else if (c >= 32) {
  2156  00F4DC  D7CE               	goto	l213
  2157  00F4DE                     l217:
  2158  00F4DE  0E1F               	movlw	31
  2159  00F4E0  640A               	cpfsgt	read_line@c,c
  2160  00F4E2  D7CB               	goto	l213
  2161                           
  2162                           ;main.c: 148: if (i < max_len) {
  2163  00F4E4  5005               	movf	read_line@max_len,w,c
  2164  00F4E6  5C08               	subwf	read_line@i,w,c
  2165  00F4E8  5009               	movf	read_line@i+1,w,c
  2166  00F4EA  0A80               	xorlw	128
  2167  00F4EC  6E07               	movwf	??_read_line& (0+255),c
  2168  00F4EE  5006               	movf	read_line@max_len+1,w,c
  2169  00F4F0  0A80               	xorlw	128
  2170  00F4F2  5807               	subwfb	??_read_line& (0+255),w,c
  2171  00F4F4  B0D8               	btfsc	status,0,c
  2172  00F4F6  D7C1               	goto	l213
  2173                           
  2174                           ;main.c: 149: putch(c);
  2175  00F4F8  500A               	movf	read_line@c,w,c
  2176  00F4FA  EC17  F078         	call	_putch
  2177                           
  2178                           ;main.c: 150: s[i] = c;
  2179  00F4FE  5008               	movf	read_line@i,w,c
  2180  00F500  2403               	addwf	read_line@s,w,c
  2181  00F502  6ED9               	movwf	fsr2l,c
  2182  00F504  5009               	movf	read_line@i+1,w,c
  2183  00F506  2004               	addwfc	read_line@s+1,w,c
  2184  00F508  6EDA               	movwf	fsr2h,c
  2185  00F50A  C00A  FFDF         	movff	read_line@c,indf2
  2186                           
  2187                           ;main.c: 151: ++i;
  2188  00F50E  4A08               	infsnz	read_line@i,f,c
  2189  00F510  2A09               	incf	read_line@i+1,f,c
  2190                           
  2191                           ;main.c: 152: }
  2192                           ;main.c: 153: }
  2193                           ;main.c: 154: }
  2194  00F512  D7B3               	goto	l213
  2195  00F514                     __end_of_read_line:
  2196                           	opt stack 0
  2197                           indf2	equ	0xFDF
  2198                           fsr2h	equ	0xFDA
  2199                           fsr2l	equ	0xFD9
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function _printf *****************
  2203 ;; Defined at:
  2204 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  f               2   12[COMRAM] PTR const unsigned char 
  2207 ;;		 -> STR_25(52), STR_24(58), STR_23(23), STR_22(38), 
  2208 ;;		 -> STR_21(55), STR_20(5), STR_19(43), STR_18(5), 
  2209 ;;		 -> STR_17(5), STR_16(59), STR_15(61), STR_14(5), 
  2210 ;;		 -> STR_13(51), STR_12(62), STR_11(57), STR_10(44), 
  2211 ;;		 -> STR_9(48), STR_8(55), STR_7(5), STR_6(9), 
  2212 ;;		 -> STR_5(20), STR_4(20), STR_3(20), STR_2(46), 
  2213 ;;		 -> STR_1(3), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  tmpval          4    0        struct .
  2216 ;;  val             2   25[COMRAM] unsigned int 
  2217 ;;  ap              2   23[COMRAM] PTR void [1]
  2218 ;;		 -> ?_printf(2), 
  2219 ;;  cp              2   21[COMRAM] PTR const unsigned char 
  2220 ;;		 -> STR_26(7), main@buffer(30), 
  2221 ;;  len             2    0        unsigned int 
  2222 ;;  c               1   27[COMRAM] char 
  2223 ;;  prec            1   20[COMRAM] char 
  2224 ;;  flag            1   19[COMRAM] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2   12[COMRAM] int 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2234 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;Total ram usage:       16 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		___lwdiv
  2243 ;;		___lwmod
  2244 ;;		_putch
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text3
  2251  00F6D6                     __ptext3:
  2252                           	opt stack 0
  2253  00F6D6                     _printf:
  2254                           	opt stack 28
  2255                           
  2256                           ;doprnt.c: 466: va_list ap;
  2257                           ;doprnt.c: 499: signed char c;
  2258                           ;doprnt.c: 506: signed char prec;
  2259                           ;doprnt.c: 508: unsigned char flag;
  2260                           ;doprnt.c: 523: union {
  2261                           ;doprnt.c: 524: unsigned long vd;
  2262                           ;doprnt.c: 525: double integ;
  2263                           ;doprnt.c: 526: } tmpval;
  2264                           ;doprnt.c: 528: unsigned int val;
  2265                           ;doprnt.c: 529: unsigned len;
  2266                           ;doprnt.c: 530: const char * cp;
  2267                           ;doprnt.c: 533: *ap = __va_start();
  2268                           
  2269                           ;incstack = 0
  2270  00F6D6  0E0F               	movlw	low (?_printf+2)
  2271  00F6D8  6E18               	movwf	printf@ap,c
  2272  00F6DA  0E00               	movlw	high (?_printf+2)
  2273  00F6DC  6E19               	movwf	printf@ap+1,c
  2274                           
  2275                           ;doprnt.c: 536: while(c = *f++) {
  2276  00F6DE  D0D9               	goto	u990
  2277  00F6E0                     
  2278                           ;doprnt.c: 538: if(c != '%')
  2279  00F6E0  0E25               	movlw	37
  2280  00F6E2  181C               	xorwf	printf@c,w,c
  2281  00F6E4  B4D8               	btfsc	status,2,c
  2282  00F6E6  D004               	goto	l285
  2283                           
  2284                           ;doprnt.c: 540: {
  2285                           ;doprnt.c: 541: (putch(c) );
  2286  00F6E8  501C               	movf	printf@c,w,c
  2287  00F6EA  EC17  F078         	call	_putch
  2288                           
  2289                           ;doprnt.c: 542: continue;
  2290  00F6EE  D0D1               	goto	u990
  2291  00F6F0                     l285:
  2292                           
  2293                           ;doprnt.c: 543: }
  2294                           ;doprnt.c: 548: flag = 0;
  2295  00F6F0  0E00               	movlw	0
  2296  00F6F2  6E14               	movwf	printf@flag,c
  2297                           
  2298                           ;doprnt.c: 635: switch(c = *f++) {
  2299  00F6F4  D04D               	goto	l286
  2300  00F6F6                     
  2301                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2302  00F6F6  C018  FFD9         	movff	printf@ap,fsr2l
  2303  00F6FA  C019  FFDA         	movff	printf@ap+1,fsr2h
  2304  00F6FE  CFDE F016          	movff	postinc2,printf@cp
  2305  00F702  CFDD F017          	movff	postdec2,printf@cp+1
  2306  00F706  0E02               	movlw	2
  2307  00F708  2618               	addwf	printf@ap,f,c
  2308  00F70A  0E00               	movlw	0
  2309  00F70C  2219               	addwfc	printf@ap+1,f,c
  2310                           
  2311                           ;doprnt.c: 740: if(!cp)
  2312  00F70E  5016               	movf	printf@cp,w,c
  2313  00F710  1017               	iorwf	printf@cp+1,w,c
  2314  00F712  A4D8               	btfss	status,2,c
  2315  00F714  D01A               	goto	l294
  2316                           
  2317                           ;doprnt.c: 741: cp = "(null)";
  2318  00F716  0EF3               	movlw	low STR_26
  2319  00F718  6E16               	movwf	printf@cp,c
  2320  00F71A  0EFF               	movlw	high STR_26
  2321  00F71C  6E17               	movwf	printf@cp+1,c
  2322                           
  2323                           ;doprnt.c: 777: while(*cp)
  2324  00F71E  D015               	goto	l294
  2325  00F720                     
  2326                           ;doprnt.c: 778: (putch(*cp++) );
  2327  00F720  C016  FFF6         	movff	printf@cp,tblptrl
  2328  00F724  C017  FFF7         	movff	printf@cp+1,tblptrh
  2329  00F728  0E00               	movlw	low (__mediumconst shr (0+16))
  2330  00F72A  6EF8               	movwf	tblptru,c
  2331  00F72C  0E0F               	movlw	(high __ramtop+-1)
  2332  00F72E  64F7               	cpfsgt	tblptrh,c
  2333  00F730  D003               	bra	u917
  2334  00F732  0008               	tblrd		*
  2335  00F734  50F5               	movf	tablat,w,c
  2336  00F736  D005               	bra	u910
  2337  00F738                     u917:
  2338  00F738  CFF6 FFE1          	movff	tblptrl,fsr1l
  2339  00F73C  CFF7 FFE2          	movff	tblptrh,fsr1h
  2340  00F740  50E7               	movf	indf1,w,c
  2341  00F742                     u910:
  2342  00F742  EC17  F078         	call	_putch
  2343  00F746  4A16               	infsnz	printf@cp,f,c
  2344  00F748  2A17               	incf	printf@cp+1,f,c
  2345  00F74A                     l294:
  2346  00F74A  C016  FFF6         	movff	printf@cp,tblptrl
  2347  00F74E  C017  FFF7         	movff	printf@cp+1,tblptrh
  2348  00F752  0E00               	movlw	low (__mediumconst shr (0+16))
  2349  00F754  6EF8               	movwf	tblptru,c
  2350  00F756  0E0F               	movlw	(high __ramtop+-1)
  2351  00F758  64F7               	cpfsgt	tblptrh,c
  2352  00F75A  D003               	bra	u927
  2353  00F75C  0008               	tblrd		*
  2354  00F75E  50F5               	movf	tablat,w,c
  2355  00F760  D005               	bra	u920
  2356  00F762                     u927:
  2357  00F762  CFF6 FFE1          	movff	tblptrl,fsr1l
  2358  00F766  CFF7 FFE2          	movff	tblptrh,fsr1h
  2359  00F76A  50E7               	movf	indf1,w,c
  2360  00F76C                     u920:
  2361  00F76C  0900               	iorlw	0
  2362  00F76E  B4D8               	btfsc	status,2,c
  2363  00F770  D090               	goto	u990
  2364  00F772  D7D6               	goto	l295
  2365  00F774                     
  2366                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2367  00F774  C018  FFD9         	movff	printf@ap,fsr2l
  2368  00F778  C019  FFDA         	movff	printf@ap+1,fsr2h
  2369  00F77C  50DF               	movf	indf2,w,c
  2370  00F77E  6E1C               	movwf	printf@c,c
  2371  00F780  0E02               	movlw	2
  2372  00F782  2618               	addwf	printf@ap,f,c
  2373  00F784  0E00               	movlw	0
  2374  00F786  2219               	addwfc	printf@ap+1,f,c
  2375  00F788                     
  2376                           ;doprnt.c: 809: (putch(c) );
  2377  00F788  501C               	movf	printf@c,w,c
  2378  00F78A  EC17  F078         	call	_putch
  2379                           
  2380                           ;doprnt.c: 810: continue;
  2381  00F78E  D081               	goto	u990
  2382  00F790                     l286:
  2383  00F790  C00D  FFF6         	movff	printf@f,tblptrl
  2384  00F794  C00E  FFF7         	movff	printf@f+1,tblptrh
  2385  00F798  4A0D               	infsnz	printf@f,f,c
  2386  00F79A  2A0E               	incf	printf@f+1,f,c
  2387  00F79C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2388  00F79C  6AF8               	clrf	tblptru,c
  2389  00F79E                     	endif
  2390  00F79E                     	if	0	;tblptru may be non-zero
  2391  00F79E                     	endif
  2392  00F79E  0008               	tblrd		*
  2393  00F7A0  CFF5 F01C          	movff	tablat,printf@c
  2394  00F7A4  501C               	movf	printf@c,w,c
  2395                           
  2396                           ; Switch size 1, requested type "space"
  2397                           ; Number of cases is 5, Range of values is 0 to 115
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte           16     9 (average)
  2401                           ;	Chosen strategy is simple_byte
  2402  00F7A6  0A00               	xorlw	0	; case 0
  2403  00F7A8  B4D8               	btfsc	status,2,c
  2404  00F7AA  0012               	return	
  2405  00F7AC  0A63               	xorlw	99	; case 99
  2406  00F7AE  B4D8               	btfsc	status,2,c
  2407  00F7B0  D7E1               	goto	l297
  2408  00F7B2  0A07               	xorlw	7	; case 100
  2409  00F7B4  B4D8               	btfsc	status,2,c
  2410  00F7B6  D007               	goto	l291
  2411  00F7B8  0A0D               	xorlw	13	; case 105
  2412  00F7BA  B4D8               	btfsc	status,2,c
  2413  00F7BC  D004               	goto	l291
  2414  00F7BE  0A1A               	xorlw	26	; case 115
  2415  00F7C0  B4D8               	btfsc	status,2,c
  2416  00F7C2  D799               	goto	l292
  2417  00F7C4  D7E1               	goto	l298
  2418  00F7C6                     l291:
  2419                           
  2420                           ;doprnt.c: 1253: {
  2421                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2422  00F7C6  C018  FFD9         	movff	printf@ap,fsr2l
  2423  00F7CA  C019  FFDA         	movff	printf@ap+1,fsr2h
  2424  00F7CE  CFDE F01A          	movff	postinc2,printf@val
  2425  00F7D2  CFDD F01B          	movff	postdec2,printf@val+1
  2426  00F7D6  0E02               	movlw	2
  2427  00F7D8  2618               	addwf	printf@ap,f,c
  2428  00F7DA  0E00               	movlw	0
  2429  00F7DC  2219               	addwfc	printf@ap+1,f,c
  2430                           
  2431                           ;doprnt.c: 1261: if((int)val < 0) {
  2432  00F7DE  AE1B               	btfss	printf@val+1,7,c
  2433  00F7E0  D006               	goto	l299
  2434                           
  2435                           ;doprnt.c: 1262: flag |= 0x03;
  2436  00F7E2  0E03               	movlw	3
  2437  00F7E4  1214               	iorwf	printf@flag,f,c
  2438                           
  2439                           ;doprnt.c: 1263: val = -val;
  2440  00F7E6  6C1A               	negf	printf@val,c
  2441  00F7E8  1E1B               	comf	printf@val+1,f,c
  2442  00F7EA  B0D8               	btfsc	status,0,c
  2443  00F7EC  2A1B               	incf	printf@val+1,f,c
  2444  00F7EE                     l299:
  2445                           
  2446                           ;doprnt.c: 1264: }
  2447                           ;doprnt.c: 1266: }
  2448                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2449  00F7EE  0E01               	movlw	1
  2450  00F7F0  6E1C               	movwf	printf@c,c
  2451  00F7F2                     l1680:
  2452  00F7F2  0E05               	movlw	5
  2453  00F7F4  181C               	xorwf	printf@c,w,c
  2454  00F7F6  B4D8               	btfsc	status,2,c
  2455  00F7F8  D015               	goto	u970
  2456                           
  2457                           ;doprnt.c: 1306: if(val < dpowers[c])
  2458  00F7FA  501C               	movf	printf@c,w,c
  2459  00F7FC  0D02               	mullw	2
  2460  00F7FE  0EEB               	movlw	low _dpowers
  2461  00F800  24F3               	addwf	prodl,w,c
  2462  00F802  6EF6               	movwf	tblptrl,c
  2463  00F804  0EFC               	movlw	high _dpowers
  2464  00F806  20F4               	addwfc	prodh,w,c
  2465  00F808  6EF7               	movwf	tblptrh,c
  2466  00F80A                     	if	1	;There are 3 active tblptr bytes
  2467  00F80A  6AF8               	clrf	tblptru,c
  2468  00F80C  0E00               	movlw	low (__mediumconst shr (0+16))
  2469  00F80E  22F8               	addwfc	tblptru,f,c
  2470  00F810                     	endif
  2471  00F810  0009               	tblrd		*+
  2472  00F812  50F5               	movf	tablat,w,c
  2473  00F814  5C1A               	subwf	printf@val,w,c
  2474  00F816  0009               	tblrd		*+
  2475  00F818  50F5               	movf	tablat,w,c
  2476  00F81A  581B               	subwfb	printf@val+1,w,c
  2477  00F81C  A0D8               	btfss	status,0,c
  2478  00F81E  D002               	goto	u970
  2479                           
  2480                           ;doprnt.c: 1307: break;
  2481  00F820  2A1C               	incf	printf@c,f,c
  2482  00F822  D7E7               	goto	l1680
  2483  00F824                     u970:
  2484                           
  2485                           ;doprnt.c: 1422: {
  2486                           ;doprnt.c: 1438: if(flag & 0x03)
  2487  00F824  C014  F013         	movff	printf@flag,??_printf
  2488  00F828  0E03               	movlw	3
  2489  00F82A  1613               	andwf	??_printf,f,c
  2490  00F82C  B4D8               	btfsc	status,2,c
  2491  00F82E  D003               	goto	l303
  2492                           
  2493                           ;doprnt.c: 1439: (putch('-') );
  2494  00F830  0E2D               	movlw	45
  2495  00F832  EC17  F078         	call	_putch
  2496  00F836                     l303:
  2497                           
  2498                           ;doprnt.c: 1469: }
  2499                           ;doprnt.c: 1472: prec = c;
  2500  00F836  C01C  F015         	movff	printf@c,printf@prec
  2501                           
  2502                           ;doprnt.c: 1474: while(prec--) {
  2503  00F83A  D027               	goto	l304
  2504  00F83C                     
  2505                           ;doprnt.c: 1478: {
  2506                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2507  00F83C  5015               	movf	printf@prec,w,c
  2508  00F83E  0D02               	mullw	2
  2509  00F840  0EEB               	movlw	low _dpowers
  2510  00F842  24F3               	addwf	prodl,w,c
  2511  00F844  6EF6               	movwf	tblptrl,c
  2512  00F846  0EFC               	movlw	high _dpowers
  2513  00F848  20F4               	addwfc	prodh,w,c
  2514  00F84A  6EF7               	movwf	tblptrh,c
  2515  00F84C                     	if	1	;There are 3 active tblptr bytes
  2516  00F84C  6AF8               	clrf	tblptru,c
  2517  00F84E  0E00               	movlw	low (__mediumconst shr (0+16))
  2518  00F850  22F8               	addwfc	tblptru,f,c
  2519  00F852                     	endif
  2520  00F852  0009               	tblrd		*+
  2521  00F854  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2522  00F858  000A               	tblrd		*-
  2523  00F85A  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2524  00F85E  C01A  F001         	movff	printf@val,___lwdiv@dividend
  2525  00F862  C01B  F002         	movff	printf@val+1,___lwdiv@dividend+1
  2526  00F866  ECFA  F078         	call	___lwdiv	;wreg free
  2527  00F86A  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2528  00F86E  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2529  00F872  0E00               	movlw	0
  2530  00F874  6E0B               	movwf	___lwmod@divisor+1,c
  2531  00F876  0E0A               	movlw	10
  2532  00F878  6E0A               	movwf	___lwmod@divisor,c
  2533  00F87A  ECD9  F078         	call	___lwmod	;wreg free
  2534  00F87E  5008               	movf	?___lwmod,w,c
  2535  00F880  0F30               	addlw	48
  2536  00F882  6E1C               	movwf	printf@c,c
  2537                           
  2538                           ;doprnt.c: 1523: }
  2539                           ;doprnt.c: 1524: (putch(c) );
  2540  00F884  501C               	movf	printf@c,w,c
  2541  00F886  EC17  F078         	call	_putch
  2542  00F88A                     l304:
  2543  00F88A  0615               	decf	printf@prec,f,c
  2544  00F88C  2815               	incf	printf@prec,w,c
  2545  00F88E  A4D8               	btfss	status,2,c
  2546  00F890  D7D5               	goto	l305
  2547  00F892                     u990:
  2548  00F892  C00D  FFF6         	movff	printf@f,tblptrl
  2549  00F896  C00E  FFF7         	movff	printf@f+1,tblptrh
  2550  00F89A  4A0D               	infsnz	printf@f,f,c
  2551  00F89C  2A0E               	incf	printf@f+1,f,c
  2552  00F89E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2553  00F89E  6AF8               	clrf	tblptru,c
  2554  00F8A0                     	endif
  2555  00F8A0                     	if	0	;tblptru may be non-zero
  2556  00F8A0                     	endif
  2557  00F8A0  0008               	tblrd		*
  2558  00F8A2  CFF5 F01C          	movff	tablat,printf@c
  2559  00F8A6  501C               	movf	printf@c,w,c
  2560  00F8A8  B4D8               	btfsc	status,2,c
  2561  00F8AA  0012               	return	
  2562  00F8AC  D719               	goto	l284
  2563  00F8AE                     __end_of_printf:
  2564                           	opt stack 0
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           prodh	equ	0xFF4
  2570                           prodl	equ	0xFF3
  2571                           indf1	equ	0xFE7
  2572                           fsr1h	equ	0xFE2
  2573                           fsr1l	equ	0xFE1
  2574                           indf2	equ	0xFDF
  2575                           postinc2	equ	0xFDE
  2576                           postdec2	equ	0xFDD
  2577                           fsr2h	equ	0xFDA
  2578                           fsr2l	equ	0xFD9
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _putch *****************
  2582 ;; Defined at:
  2583 ;;		line 102 in file "mcc_generated_files/eusart1.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  txData          1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  txData          1    1[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        1 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    1
  2604 ;; This function calls:
  2605 ;;		_EUSART1_Write
  2606 ;; This function is called by:
  2607 ;;		_read_line
  2608 ;;		_printf
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text4
  2613  00F02E                     __ptext4:
  2614                           	opt stack 0
  2615  00F02E                     _putch:
  2616                           	opt stack 28
  2617                           
  2618                           ;incstack = 0
  2619                           ;putch@txData stored from wreg
  2620  00F02E  6E02               	movwf	putch@txData,c
  2621                           
  2622                           ;eusart1.c: 103: EUSART1_Write(txData);
  2623  00F030  5002               	movf	putch@txData,w,c
  2624  00F032  EC1C  F078         	call	_EUSART1_Write
  2625  00F036  0012               	return		;funcret
  2626  00F038                     __end_of_putch:
  2627                           	opt stack 0
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           prodh	equ	0xFF4
  2633                           prodl	equ	0xFF3
  2634                           indf1	equ	0xFE7
  2635                           fsr1h	equ	0xFE2
  2636                           fsr1l	equ	0xFE1
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _EUSART1_Write *****************
  2645 ;; Defined at:
  2646 ;;		line 91 in file "mcc_generated_files/eusart1.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  txData          1    wreg     unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  txData          1    0[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:        1 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_putch
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text5
  2674  00F038                     __ptext5:
  2675                           	opt stack 0
  2676  00F038                     _EUSART1_Write:
  2677                           	opt stack 28
  2678                           
  2679                           ;incstack = 0
  2680                           ;EUSART1_Write@txData stored from wreg
  2681  00F038  6E01               	movwf	EUSART1_Write@txData,c
  2682  00F03A                     
  2683                           ;eusart1.c: 92: while (0 == PIR1bits.TX1IF) {
  2684  00F03A  A89E               	btfss	3998,4,c	;volatile
  2685  00F03C  D7FE               	goto	l1496
  2686                           
  2687                           ;eusart1.c: 93: }
  2688                           ;eusart1.c: 95: TXREG1 = txData;
  2689  00F03E  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2690  00F042  0012               	return		;funcret
  2691  00F044                     __end_of_EUSART1_Write:
  2692                           	opt stack 0
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           indf1	equ	0xFE7
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           indf2	equ	0xFDF
  2703                           postinc2	equ	0xFDE
  2704                           postdec2	equ	0xFDD
  2705                           fsr2h	equ	0xFDA
  2706                           fsr2l	equ	0xFD9
  2707                           status	equ	0xFD8
  2708                           
  2709 ;; *************** function ___lwmod *****************
  2710 ;; Defined at:
  2711 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  dividend        2    7[COMRAM] unsigned int 
  2714 ;;  divisor         2    9[COMRAM] unsigned int 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  counter         1   11[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2    7[COMRAM] unsigned int 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:        5 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_printf
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text6
  2740  00F1B2                     __ptext6:
  2741                           	opt stack 0
  2742  00F1B2                     ___lwmod:
  2743                           	opt stack 29
  2744                           
  2745                           ;incstack = 0
  2746  00F1B2  500A               	movf	___lwmod@divisor,w,c
  2747  00F1B4  100B               	iorwf	___lwmod@divisor+1,w,c
  2748  00F1B6  B4D8               	btfsc	status,2,c
  2749  00F1B8  D018               	goto	l761
  2750  00F1BA  0E01               	movlw	1
  2751  00F1BC  6E0C               	movwf	___lwmod@counter,c
  2752  00F1BE  D004               	goto	l756
  2753  00F1C0  90D8               	bcf	status,0,c
  2754  00F1C2  360A               	rlcf	___lwmod@divisor,f,c
  2755  00F1C4  360B               	rlcf	___lwmod@divisor+1,f,c
  2756  00F1C6  2A0C               	incf	___lwmod@counter,f,c
  2757  00F1C8                     l756:
  2758  00F1C8  AE0B               	btfss	___lwmod@divisor+1,7,c
  2759  00F1CA  D7FA               	goto	l757
  2760  00F1CC                     u870:
  2761  00F1CC  500A               	movf	___lwmod@divisor,w,c
  2762  00F1CE  5C08               	subwf	___lwmod@dividend,w,c
  2763  00F1D0  500B               	movf	___lwmod@divisor+1,w,c
  2764  00F1D2  5809               	subwfb	___lwmod@dividend+1,w,c
  2765  00F1D4  A0D8               	btfss	status,0,c
  2766  00F1D6  D004               	goto	l760
  2767  00F1D8  500A               	movf	___lwmod@divisor,w,c
  2768  00F1DA  5E08               	subwf	___lwmod@dividend,f,c
  2769  00F1DC  500B               	movf	___lwmod@divisor+1,w,c
  2770  00F1DE  5A09               	subwfb	___lwmod@dividend+1,f,c
  2771  00F1E0                     l760:
  2772  00F1E0  90D8               	bcf	status,0,c
  2773  00F1E2  320B               	rrcf	___lwmod@divisor+1,f,c
  2774  00F1E4  320A               	rrcf	___lwmod@divisor,f,c
  2775  00F1E6  2E0C               	decfsz	___lwmod@counter,f,c
  2776  00F1E8  D7F1               	goto	u870
  2777  00F1EA                     l761:
  2778  00F1EA  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2779  00F1EE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2780  00F1F2  0012               	return		;funcret
  2781  00F1F4                     __end_of___lwmod:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           indf1	equ	0xFE7
  2790                           fsr1h	equ	0xFE2
  2791                           fsr1l	equ	0xFE1
  2792                           indf2	equ	0xFDF
  2793                           postinc2	equ	0xFDE
  2794                           postdec2	equ	0xFDD
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function ___lwdiv *****************
  2800 ;; Defined at:
  2801 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  dividend        2    0[COMRAM] unsigned int 
  2804 ;;  divisor         2    2[COMRAM] unsigned int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  quotient        2    4[COMRAM] unsigned int 
  2807 ;;  counter         1    6[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  2    0[COMRAM] unsigned int 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;Total ram usage:        7 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_printf
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text7
  2831  00F1F4                     __ptext7:
  2832                           	opt stack 0
  2833  00F1F4                     ___lwdiv:
  2834                           	opt stack 29
  2835                           
  2836                           ;incstack = 0
  2837  00F1F4  0E00               	movlw	0
  2838  00F1F6  6E06               	movwf	___lwdiv@quotient+1,c
  2839  00F1F8  0E00               	movlw	0
  2840  00F1FA  6E05               	movwf	___lwdiv@quotient,c
  2841  00F1FC  5003               	movf	___lwdiv@divisor,w,c
  2842  00F1FE  1004               	iorwf	___lwdiv@divisor+1,w,c
  2843  00F200  B4D8               	btfsc	status,2,c
  2844  00F202  D01C               	goto	l751
  2845  00F204  0E01               	movlw	1
  2846  00F206  6E07               	movwf	___lwdiv@counter,c
  2847  00F208  D004               	goto	l746
  2848  00F20A  90D8               	bcf	status,0,c
  2849  00F20C  3603               	rlcf	___lwdiv@divisor,f,c
  2850  00F20E  3604               	rlcf	___lwdiv@divisor+1,f,c
  2851  00F210  2A07               	incf	___lwdiv@counter,f,c
  2852  00F212                     l746:
  2853  00F212  AE04               	btfss	___lwdiv@divisor+1,7,c
  2854  00F214  D7FA               	goto	l747
  2855  00F216                     u840:
  2856  00F216  90D8               	bcf	status,0,c
  2857  00F218  3605               	rlcf	___lwdiv@quotient,f,c
  2858  00F21A  3606               	rlcf	___lwdiv@quotient+1,f,c
  2859  00F21C  5003               	movf	___lwdiv@divisor,w,c
  2860  00F21E  5C01               	subwf	___lwdiv@dividend,w,c
  2861  00F220  5004               	movf	___lwdiv@divisor+1,w,c
  2862  00F222  5802               	subwfb	___lwdiv@dividend+1,w,c
  2863  00F224  A0D8               	btfss	status,0,c
  2864  00F226  D005               	goto	l750
  2865  00F228  5003               	movf	___lwdiv@divisor,w,c
  2866  00F22A  5E01               	subwf	___lwdiv@dividend,f,c
  2867  00F22C  5004               	movf	___lwdiv@divisor+1,w,c
  2868  00F22E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2869  00F230  8005               	bsf	___lwdiv@quotient,0,c
  2870  00F232                     l750:
  2871  00F232  90D8               	bcf	status,0,c
  2872  00F234  3204               	rrcf	___lwdiv@divisor+1,f,c
  2873  00F236  3203               	rrcf	___lwdiv@divisor,f,c
  2874  00F238  2E07               	decfsz	___lwdiv@counter,f,c
  2875  00F23A  D7ED               	goto	u840
  2876  00F23C                     l751:
  2877  00F23C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2878  00F240  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2879  00F244  0012               	return		;funcret
  2880  00F246                     __end_of___lwdiv:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           prodh	equ	0xFF4
  2887                           prodl	equ	0xFF3
  2888                           indf1	equ	0xFE7
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           indf2	equ	0xFDF
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _getch *****************
  2899 ;; Defined at:
  2900 ;;		line 98 in file "mcc_generated_files/eusart1.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      unsigned char 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    1
  2921 ;; This function calls:
  2922 ;;		_EUSART1_Read
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text8
  2929  00F022                     __ptext8:
  2930                           	opt stack 0
  2931  00F022                     _getch:
  2932                           	opt stack 29
  2933                           
  2934                           ;eusart1.c: 99: return EUSART1_Read();
  2935                           
  2936                           ;incstack = 0
  2937  00F022  EC38  F078         	call	_EUSART1_Read	;wreg free
  2938  00F026  0012               	return	
  2939  00F028                     __end_of_getch:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodh	equ	0xFF4
  2946                           prodl	equ	0xFF3
  2947                           indf1	equ	0xFE7
  2948                           fsr1h	equ	0xFE2
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           postinc2	equ	0xFDE
  2952                           postdec2	equ	0xFDD
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function _EUSART1_Read *****************
  2958 ;; Defined at:
  2959 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      unsigned char 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_getch
  2983 ;;		_read_line
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text9
  2988  00F070                     __ptext9:
  2989                           	opt stack 0
  2990  00F070                     _EUSART1_Read:
  2991                           	opt stack 29
  2992                           
  2993                           ;eusart1.c: 78: while (!PIR1bits.RC1IF) {
  2994                           
  2995                           ;incstack = 0
  2996  00F070  AA9E               	btfss	3998,5,c	;volatile
  2997  00F072  D7FE               	goto	_EUSART1_Read
  2998                           
  2999                           ;eusart1.c: 79: }
  3000                           ;eusart1.c: 81: if (1 == RC1STAbits.OERR) {
  3001  00F074  A2AB               	btfss	4011,1,c	;volatile
  3002  00F076  D002               	goto	l27
  3003                           
  3004                           ;eusart1.c: 84: RC1STAbits.CREN = 0;
  3005  00F078  98AB               	bcf	4011,4,c	;volatile
  3006                           
  3007                           ;eusart1.c: 85: RC1STAbits.CREN = 1;
  3008  00F07A  88AB               	bsf	4011,4,c	;volatile
  3009  00F07C                     l27:
  3010                           
  3011                           ;eusart1.c: 86: }
  3012                           ;eusart1.c: 88: return RCREG1;
  3013  00F07C  50AE               	movf	4014,w,c	;volatile
  3014  00F07E  0012               	return	
  3015  00F080                     __end_of_EUSART1_Read:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           prodh	equ	0xFF4
  3022                           prodl	equ	0xFF3
  3023                           indf1	equ	0xFE7
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           indf2	equ	0xFDF
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _atol *****************
  3034 ;; Defined at:
  3035 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3038 ;;		 -> main@string(30), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  a               4   21[COMRAM] long 
  3041 ;;  c               1   25[COMRAM] unsigned char 
  3042 ;;  sign            1   20[COMRAM] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  4   12[COMRAM] long 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;Total ram usage:       14 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    1
  3059 ;; This function calls:
  3060 ;;		___lmul
  3061 ;;		_isdigit
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text10
  3068  00F5E2                     __ptext10:
  3069                           	opt stack 0
  3070  00F5E2                     _atol:
  3071                           	opt stack 29
  3072                           
  3073                           ;incstack = 0
  3074  00F5E2  C00D  FFD9         	movff	atol@s,fsr2l
  3075  00F5E6  C00E  FFDA         	movff	atol@s+1,fsr2h
  3076  00F5EA  50DF               	movf	indf2,w,c
  3077  00F5EC  6E1A               	movwf	atol@c,c
  3078  00F5EE  4A0D               	infsnz	atol@s,f,c
  3079  00F5F0  2A0E               	incf	atol@s+1,f,c
  3080  00F5F2  0E20               	movlw	32
  3081  00F5F4  181A               	xorwf	atol@c,w,c
  3082  00F5F6  B4D8               	btfsc	status,2,c
  3083  00F5F8  D7F4               	goto	_atol
  3084  00F5FA  0E09               	movlw	9
  3085  00F5FC  181A               	xorwf	atol@c,w,c
  3086  00F5FE  B4D8               	btfsc	status,2,c
  3087  00F600  D7F0               	goto	_atol
  3088  00F602  0E00               	movlw	0
  3089  00F604  6E16               	movwf	atol@a,c
  3090  00F606  0E00               	movlw	0
  3091  00F608  6E17               	movwf	atol@a+1,c
  3092  00F60A  0E00               	movlw	0
  3093  00F60C  6E18               	movwf	atol@a+2,c
  3094  00F60E  0E00               	movlw	0
  3095  00F610  6E19               	movwf	atol@a+3,c
  3096  00F612  0E00               	movlw	0
  3097  00F614  6E15               	movwf	atol@sign,c
  3098  00F616  0E2D               	movlw	45
  3099  00F618  181A               	xorwf	atol@c,w,c
  3100  00F61A  A4D8               	btfss	status,2,c
  3101  00F61C  D002               	goto	l489
  3102  00F61E  2A15               	incf	atol@sign,f,c
  3103  00F620  D027               	goto	L5
  3104  00F622                     l489:
  3105  00F622  0E2B               	movlw	43
  3106  00F624  181A               	xorwf	atol@c,w,c
  3107  00F626  A4D8               	btfss	status,2,c
  3108  00F628  D02B               	goto	l492
  3109  00F62A  D022               	goto	L5
  3110  00F62C  C016  F001         	movff	atol@a,___lmul@multiplier
  3111  00F630  C017  F002         	movff	atol@a+1,___lmul@multiplier+1
  3112  00F634  C018  F003         	movff	atol@a+2,___lmul@multiplier+2
  3113  00F638  C019  F004         	movff	atol@a+3,___lmul@multiplier+3
  3114  00F63C  0E0A               	movlw	10
  3115  00F63E  6E05               	movwf	___lmul@multiplicand,c
  3116  00F640  0E00               	movlw	0
  3117  00F642  6E06               	movwf	___lmul@multiplicand+1,c
  3118  00F644  0E00               	movlw	0
  3119  00F646  6E07               	movwf	___lmul@multiplicand+2,c
  3120  00F648  0E00               	movlw	0
  3121  00F64A  6E08               	movwf	___lmul@multiplicand+3,c
  3122  00F64C  EC23  F079         	call	___lmul	;wreg free
  3123  00F650  C01A  F011         	movff	atol@c,??_atol
  3124  00F654  0ED0               	movlw	208
  3125  00F656  2611               	addwf	??_atol,f,c
  3126  00F658  5011               	movf	??_atol,w,c
  3127  00F65A  2401               	addwf	?___lmul,w,c
  3128  00F65C  6E16               	movwf	atol@a,c
  3129  00F65E  0E00               	movlw	0
  3130  00F660  2002               	addwfc	?___lmul+1,w,c
  3131  00F662  6E17               	movwf	atol@a+1,c
  3132  00F664  0E00               	movlw	0
  3133  00F666  2003               	addwfc	?___lmul+2,w,c
  3134  00F668  6E18               	movwf	atol@a+2,c
  3135  00F66A  0E00               	movlw	0
  3136  00F66C  2004               	addwfc	?___lmul+3,w,c
  3137  00F66E  6E19               	movwf	atol@a+3,c
  3138  00F670                     L5:
  3139  00F670  C00D  FFD9         	movff	atol@s,fsr2l
  3140  00F674  C00E  FFDA         	movff	atol@s+1,fsr2h
  3141  00F678  50DF               	movf	indf2,w,c
  3142  00F67A  6E1A               	movwf	atol@c,c
  3143  00F67C  4A0D               	infsnz	atol@s,f,c
  3144  00F67E  2A0E               	incf	atol@s+1,f,c
  3145  00F680                     l492:
  3146  00F680  501A               	movf	atol@c,w,c
  3147  00F682  EC6B  F078         	call	_isdigit
  3148  00F686  B0D8               	btfsc	status,0,c
  3149  00F688  D7D1               	goto	l493
  3150  00F68A  5015               	movf	atol@sign,w,c
  3151  00F68C  B4D8               	btfsc	status,2,c
  3152  00F68E  D01A               	goto	l495
  3153  00F690  C016  F011         	movff	atol@a,??_atol
  3154  00F694  C017  F012         	movff	atol@a+1,??_atol+1
  3155  00F698  C018  F013         	movff	atol@a+2,??_atol+2
  3156  00F69C  C019  F014         	movff	atol@a+3,??_atol+3
  3157  00F6A0  1E11               	comf	??_atol,f,c
  3158  00F6A2  1E12               	comf	??_atol+1,f,c
  3159  00F6A4  1E13               	comf	??_atol+2,f,c
  3160  00F6A6  1E14               	comf	??_atol+3,f,c
  3161  00F6A8  2A11               	incf	??_atol,f,c
  3162  00F6AA  0E00               	movlw	0
  3163  00F6AC  2212               	addwfc	??_atol+1,f,c
  3164  00F6AE  2213               	addwfc	??_atol+2,f,c
  3165  00F6B0  2214               	addwfc	??_atol+3,f,c
  3166  00F6B2  C011  F00D         	movff	??_atol,?_atol
  3167  00F6B6  C012  F00E         	movff	??_atol+1,?_atol+1
  3168  00F6BA  C013  F00F         	movff	??_atol+2,?_atol+2
  3169  00F6BE  C014  F010         	movff	??_atol+3,?_atol+3
  3170  00F6C2  0012               	return	
  3171  00F6C4                     l495:
  3172  00F6C4  C016  F00D         	movff	atol@a,?_atol
  3173  00F6C8  C017  F00E         	movff	atol@a+1,?_atol+1
  3174  00F6CC  C018  F00F         	movff	atol@a+2,?_atol+2
  3175  00F6D0  C019  F010         	movff	atol@a+3,?_atol+3
  3176  00F6D4  0012               	return		;funcret
  3177  00F6D6                     __end_of_atol:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           prodh	equ	0xFF4
  3184                           prodl	equ	0xFF3
  3185                           indf1	equ	0xFE7
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function ___lmul *****************
  3196 ;; Defined at:
  3197 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  multiplier      4    0[COMRAM] unsigned long 
  3200 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  product         4    8[COMRAM] unsigned long 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  4    0[COMRAM] unsigned long 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3212 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;Total ram usage:       12 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_atol
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text11
  3226  00F246                     __ptext11:
  3227                           	opt stack 0
  3228  00F246                     ___lmul:
  3229                           	opt stack 29
  3230                           
  3231                           ;incstack = 0
  3232  00F246  0E00               	movlw	0
  3233  00F248  6E09               	movwf	___lmul@product,c
  3234  00F24A  0E00               	movlw	0
  3235  00F24C  6E0A               	movwf	___lmul@product+1,c
  3236  00F24E  0E00               	movlw	0
  3237  00F250  6E0B               	movwf	___lmul@product+2,c
  3238  00F252  0E00               	movlw	0
  3239  00F254  6E0C               	movwf	___lmul@product+3,c
  3240  00F256  A001               	btfss	___lmul@multiplier,0,c
  3241  00F258  D008               	goto	l321
  3242  00F25A  5005               	movf	___lmul@multiplicand,w,c
  3243  00F25C  2609               	addwf	___lmul@product,f,c
  3244  00F25E  5006               	movf	___lmul@multiplicand+1,w,c
  3245  00F260  220A               	addwfc	___lmul@product+1,f,c
  3246  00F262  5007               	movf	___lmul@multiplicand+2,w,c
  3247  00F264  220B               	addwfc	___lmul@product+2,f,c
  3248  00F266  5008               	movf	___lmul@multiplicand+3,w,c
  3249  00F268  220C               	addwfc	___lmul@product+3,f,c
  3250  00F26A                     l321:
  3251  00F26A  90D8               	bcf	status,0,c
  3252  00F26C  3605               	rlcf	___lmul@multiplicand,f,c
  3253  00F26E  3606               	rlcf	___lmul@multiplicand+1,f,c
  3254  00F270  3607               	rlcf	___lmul@multiplicand+2,f,c
  3255  00F272  3608               	rlcf	___lmul@multiplicand+3,f,c
  3256  00F274  90D8               	bcf	status,0,c
  3257  00F276  3204               	rrcf	___lmul@multiplier+3,f,c
  3258  00F278  3203               	rrcf	___lmul@multiplier+2,f,c
  3259  00F27A  3202               	rrcf	___lmul@multiplier+1,f,c
  3260  00F27C  3201               	rrcf	___lmul@multiplier,f,c
  3261  00F27E  5001               	movf	___lmul@multiplier,w,c
  3262  00F280  1002               	iorwf	___lmul@multiplier+1,w,c
  3263  00F282  1003               	iorwf	___lmul@multiplier+2,w,c
  3264  00F284  1004               	iorwf	___lmul@multiplier+3,w,c
  3265  00F286  A4D8               	btfss	status,2,c
  3266  00F288  D7E6               	goto	l320
  3267  00F28A  C009  F001         	movff	___lmul@product,?___lmul
  3268  00F28E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3269  00F292  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3270  00F296  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3271  00F29A  0012               	return		;funcret
  3272  00F29C                     __end_of___lmul:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           indf1	equ	0xFE7
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _atoi *****************
  3291 ;; Defined at:
  3292 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3295 ;;		 -> main@string(30), 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  a               2   11[COMRAM] int 
  3298 ;;  sign            1   10[COMRAM] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2    6[COMRAM] int 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;Total ram usage:        7 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    1
  3315 ;; This function calls:
  3316 ;;		___wmul
  3317 ;;		_isdigit
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text12
  3324  00F514                     __ptext12:
  3325                           	opt stack 0
  3326  00F514                     _atoi:
  3327                           	opt stack 29
  3328                           
  3329                           ;incstack = 0
  3330  00F514  D002               	goto	l472
  3331  00F516  4A07               	infsnz	atoi@s,f,c
  3332  00F518  2A08               	incf	atoi@s+1,f,c
  3333  00F51A                     l472:
  3334  00F51A  C007  FFD9         	movff	atoi@s,fsr2l
  3335  00F51E  C008  FFDA         	movff	atoi@s+1,fsr2h
  3336  00F522  0E20               	movlw	32
  3337  00F524  18DE               	xorwf	postinc2,w,c
  3338  00F526  B4D8               	btfsc	status,2,c
  3339  00F528  D7F6               	goto	l473
  3340  00F52A  C007  FFD9         	movff	atoi@s,fsr2l
  3341  00F52E  C008  FFDA         	movff	atoi@s+1,fsr2h
  3342  00F532  0E09               	movlw	9
  3343  00F534  18DE               	xorwf	postinc2,w,c
  3344  00F536  B4D8               	btfsc	status,2,c
  3345  00F538  D7EE               	goto	l473
  3346  00F53A  0E00               	movlw	0
  3347  00F53C  6E0D               	movwf	atoi@a+1,c
  3348  00F53E  0E00               	movlw	0
  3349  00F540  6E0C               	movwf	atoi@a,c
  3350  00F542  0E00               	movlw	0
  3351  00F544  6E0B               	movwf	atoi@sign,c
  3352  00F546  C007  FFD9         	movff	atoi@s,fsr2l
  3353  00F54A  C008  FFDA         	movff	atoi@s+1,fsr2h
  3354  00F54E  0E2D               	movlw	45
  3355  00F550  18DE               	xorwf	postinc2,w,c
  3356  00F552  A4D8               	btfss	status,2,c
  3357  00F554  D002               	goto	l475
  3358  00F556  2A0B               	incf	atoi@sign,f,c
  3359  00F558  D024               	goto	l1800
  3360  00F55A                     l475:
  3361  00F55A  C007  FFD9         	movff	atoi@s,fsr2l
  3362  00F55E  C008  FFDA         	movff	atoi@s+1,fsr2h
  3363  00F562  0E2B               	movlw	43
  3364  00F564  18DE               	xorwf	postinc2,w,c
  3365  00F566  A4D8               	btfss	status,2,c
  3366  00F568  D01E               	goto	l478
  3367  00F56A  D01B               	goto	l1800
  3368  00F56C  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3369  00F570  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3370  00F574  0E00               	movlw	0
  3371  00F576  6E04               	movwf	___wmul@multiplicand+1,c
  3372  00F578  0E0A               	movlw	10
  3373  00F57A  6E03               	movwf	___wmul@multiplicand,c
  3374  00F57C  EC7A  F078         	call	___wmul	;wreg free
  3375  00F580  C007  FFD9         	movff	atoi@s,fsr2l
  3376  00F584  C008  FFDA         	movff	atoi@s+1,fsr2h
  3377  00F588  50DF               	movf	indf2,w,c
  3378  00F58A  6E09               	movwf	??_atoi& (0+255),c
  3379  00F58C  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3380  00F58E  5001               	movf	?___wmul,w,c
  3381  00F590  2609               	addwf	??_atoi,f,c
  3382  00F592  5002               	movf	?___wmul+1,w,c
  3383  00F594  220A               	addwfc	??_atoi+1,f,c
  3384  00F596  0ED0               	movlw	208
  3385  00F598  2409               	addwf	??_atoi,w,c
  3386  00F59A  6E0C               	movwf	atoi@a,c
  3387  00F59C  0EFF               	movlw	255
  3388  00F59E  200A               	addwfc	??_atoi+1,w,c
  3389  00F5A0  6E0D               	movwf	atoi@a+1,c
  3390  00F5A2                     l1800:
  3391  00F5A2  4A07               	infsnz	atoi@s,f,c
  3392  00F5A4  2A08               	incf	atoi@s+1,f,c
  3393  00F5A6                     l478:
  3394  00F5A6  C007  FFD9         	movff	atoi@s,fsr2l
  3395  00F5AA  C008  FFDA         	movff	atoi@s+1,fsr2h
  3396  00F5AE  50DF               	movf	indf2,w,c
  3397  00F5B0  EC6B  F078         	call	_isdigit
  3398  00F5B4  B0D8               	btfsc	status,0,c
  3399  00F5B6  D7DA               	goto	l479
  3400  00F5B8  500B               	movf	atoi@sign,w,c
  3401  00F5BA  B4D8               	btfsc	status,2,c
  3402  00F5BC  D00D               	goto	l481
  3403  00F5BE  C00C  F009         	movff	atoi@a,??_atoi
  3404  00F5C2  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  3405  00F5C6  1E09               	comf	??_atoi,f,c
  3406  00F5C8  1E0A               	comf	??_atoi+1,f,c
  3407  00F5CA  4A09               	infsnz	??_atoi,f,c
  3408  00F5CC  2A0A               	incf	??_atoi+1,f,c
  3409  00F5CE  C009  F007         	movff	??_atoi,?_atoi
  3410  00F5D2  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3411  00F5D6  0012               	return	
  3412  00F5D8                     l481:
  3413  00F5D8  C00C  F007         	movff	atoi@a,?_atoi
  3414  00F5DC  C00D  F008         	movff	atoi@a+1,?_atoi+1
  3415  00F5E0  0012               	return		;funcret
  3416  00F5E2                     __end_of_atoi:
  3417                           	opt stack 0
  3418                           tblptru	equ	0xFF8
  3419                           tblptrh	equ	0xFF7
  3420                           tblptrl	equ	0xFF6
  3421                           tablat	equ	0xFF5
  3422                           prodh	equ	0xFF4
  3423                           prodl	equ	0xFF3
  3424                           indf1	equ	0xFE7
  3425                           fsr1h	equ	0xFE2
  3426                           fsr1l	equ	0xFE1
  3427                           indf2	equ	0xFDF
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _isdigit *****************
  3435 ;; Defined at:
  3436 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  c               1    wreg     unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  c               1    2[COMRAM] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;		None               void
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;Total ram usage:        3 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_atoi
  3460 ;;		_atol
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text13
  3465  00F0D6                     __ptext13:
  3466                           	opt stack 0
  3467  00F0D6                     _isdigit:
  3468                           	opt stack 29
  3469                           
  3470                           ;incstack = 0
  3471                           ;isdigit@c stored from wreg
  3472  00F0D6  6E03               	movwf	isdigit@c,c
  3473  00F0D8  0E00               	movlw	0
  3474  00F0DA  6E02               	movwf	_isdigit$950,c
  3475  00F0DC  0E3A               	movlw	58
  3476  00F0DE  6003               	cpfslt	isdigit@c,c
  3477  00F0E0  D005               	goto	l667
  3478  00F0E2  0E2F               	movlw	47
  3479  00F0E4  6403               	cpfsgt	isdigit@c,c
  3480  00F0E6  D002               	goto	l667
  3481  00F0E8  0E01               	movlw	1
  3482  00F0EA  6E02               	movwf	_isdigit$950,c
  3483  00F0EC                     l667:
  3484  00F0EC  C002  F001         	movff	_isdigit$950,??_isdigit
  3485  00F0F0  3001               	rrcf	??_isdigit,w,c
  3486  00F0F2  0012               	return	
  3487  00F0F4                     __end_of_isdigit:
  3488                           	opt stack 0
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           prodh	equ	0xFF4
  3494                           prodl	equ	0xFF3
  3495                           indf1	equ	0xFE7
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           postdec2	equ	0xFDD
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function ___wmul *****************
  3506 ;; Defined at:
  3507 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  multiplier      2    0[COMRAM] unsigned int 
  3510 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  product         2    4[COMRAM] unsigned int 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    0[COMRAM] unsigned int 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, prodl, prodh
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        6 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_atoi
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text14
  3536  00F0F4                     __ptext14:
  3537                           	opt stack 0
  3538  00F0F4                     ___wmul:
  3539                           	opt stack 29
  3540                           
  3541                           ;incstack = 0
  3542  00F0F4  5001               	movf	___wmul@multiplier,w,c
  3543  00F0F6  0203               	mulwf	___wmul@multiplicand,c
  3544  00F0F8  CFF3 F005          	movff	prodl,___wmul@product
  3545  00F0FC  CFF4 F006          	movff	prodh,___wmul@product+1
  3546  00F100  5001               	movf	___wmul@multiplier,w,c
  3547  00F102  0204               	mulwf	___wmul@multiplicand+1,c
  3548  00F104  50F3               	movf	prodl,w,c
  3549  00F106  2606               	addwf	___wmul@product+1,f,c
  3550  00F108  5002               	movf	___wmul@multiplier+1,w,c
  3551  00F10A  0203               	mulwf	___wmul@multiplicand,c
  3552  00F10C  50F3               	movf	prodl,w,c
  3553  00F10E  2606               	addwf	___wmul@product+1,f,c
  3554  00F110  C005  F001         	movff	___wmul@product,?___wmul
  3555  00F114  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3556  00F118  0012               	return	
  3557  00F11A                     __end_of___wmul:
  3558                           	opt stack 0
  3559                           tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           prodh	equ	0xFF4
  3564                           prodl	equ	0xFF3
  3565                           indf1	equ	0xFE7
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           indf2	equ	0xFDF
  3569                           postinc2	equ	0xFDE
  3570                           postdec2	equ	0xFDD
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _SYSTEM_Initialize *****************
  3576 ;; Defined at:
  3577 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    2
  3598 ;; This function calls:
  3599 ;;		_EUSART1_Initialize
  3600 ;;		_OSCILLATOR_Initialize
  3601 ;;		_PIN_MANAGER_Initialize
  3602 ;;		_PWM4_Initialize
  3603 ;;		_SPI1_Initialize
  3604 ;;		_TMR2_Initialize
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text15
  3611  00F0BC                     __ptext15:
  3612                           	opt stack 0
  3613  00F0BC                     _SYSTEM_Initialize:
  3614                           	opt stack 28
  3615                           
  3616                           ;mcc.c: 113: OSCILLATOR_Initialize();
  3617                           
  3618                           ;incstack = 0
  3619  00F0BC  EC22  F078         	call	_OSCILLATOR_Initialize	;wreg free
  3620                           
  3621                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  3622  00F0C0  EC8D  F078         	call	_PIN_MANAGER_Initialize	;wreg free
  3623                           
  3624                           ;mcc.c: 115: EUSART1_Initialize();
  3625  00F0C4  EC53  F078         	call	_EUSART1_Initialize	;wreg free
  3626                           
  3627                           ;mcc.c: 116: SPI1_Initialize();
  3628  00F0C8  EC29  F078         	call	_SPI1_Initialize	;wreg free
  3629                           
  3630                           ;mcc.c: 117: TMR2_Initialize();
  3631  00F0CC  EC40  F078         	call	_TMR2_Initialize	;wreg free
  3632                           
  3633                           ;mcc.c: 118: PWM4_Initialize();
  3634  00F0D0  EC49  F078         	call	_PWM4_Initialize	;wreg free
  3635  00F0D4  0012               	return		;funcret
  3636  00F0D6                     __end_of_SYSTEM_Initialize:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           indf1	equ	0xFE7
  3645                           fsr1h	equ	0xFE2
  3646                           fsr1l	equ	0xFE1
  3647                           indf2	equ	0xFDF
  3648                           postinc2	equ	0xFDE
  3649                           postdec2	equ	0xFDD
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _TMR2_Initialize *****************
  3655 ;; Defined at:
  3656 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    1
  3677 ;; This function calls:
  3678 ;;		_TMR2_StartTimer
  3679 ;; This function is called by:
  3680 ;;		_SYSTEM_Initialize
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text16
  3685  00F080                     __ptext16:
  3686                           	opt stack 0
  3687  00F080                     _TMR2_Initialize:
  3688                           	opt stack 28
  3689                           
  3690                           ;tmr2.c: 62: T2CON = 0x7A;
  3691                           
  3692                           ;incstack = 0
  3693  00F080  0E7A               	movlw	122
  3694  00F082  6EBA               	movwf	4026,c	;volatile
  3695                           
  3696                           ;tmr2.c: 65: PR2 = 0xFF;
  3697  00F084  68BB               	setf	4027,c	;volatile
  3698                           
  3699                           ;tmr2.c: 68: TMR2 = 0x00;
  3700  00F086  0E00               	movlw	0
  3701  00F088  6EBC               	movwf	4028,c	;volatile
  3702                           
  3703                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  3704  00F08A  929E               	bcf	3998,1,c	;volatile
  3705                           
  3706                           ;tmr2.c: 74: TMR2_StartTimer();
  3707  00F08C  EC0F  F078         	call	_TMR2_StartTimer	;wreg free
  3708  00F090  0012               	return		;funcret
  3709  00F092                     __end_of_TMR2_Initialize:
  3710                           	opt stack 0
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           indf1	equ	0xFE7
  3718                           fsr1h	equ	0xFE2
  3719                           fsr1l	equ	0xFE1
  3720                           indf2	equ	0xFDF
  3721                           postinc2	equ	0xFDE
  3722                           postdec2	equ	0xFDD
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           
  3727 ;; *************** function _TMR2_StartTimer *****************
  3728 ;; Defined at:
  3729 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		None
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;Total ram usage:        0 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_TMR2_Initialize
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text17
  3757  00F01E                     __ptext17:
  3758                           	opt stack 0
  3759  00F01E                     _TMR2_StartTimer:
  3760                           	opt stack 28
  3761                           
  3762                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
  3763                           
  3764                           ;incstack = 0
  3765  00F01E  84BA               	bsf	4026,2,c	;volatile
  3766  00F020  0012               	return		;funcret
  3767  00F022                     __end_of_TMR2_StartTimer:
  3768                           	opt stack 0
  3769                           tblptru	equ	0xFF8
  3770                           tblptrh	equ	0xFF7
  3771                           tblptrl	equ	0xFF6
  3772                           tablat	equ	0xFF5
  3773                           prodh	equ	0xFF4
  3774                           prodl	equ	0xFF3
  3775                           indf1	equ	0xFE7
  3776                           fsr1h	equ	0xFE2
  3777                           fsr1l	equ	0xFE1
  3778                           indf2	equ	0xFDF
  3779                           postinc2	equ	0xFDE
  3780                           postdec2	equ	0xFDD
  3781                           fsr2h	equ	0xFDA
  3782                           fsr2l	equ	0xFD9
  3783                           status	equ	0xFD8
  3784                           
  3785 ;; *************** function _SPI1_Initialize *****************
  3786 ;; Defined at:
  3787 ;;		line 64 in file "mcc_generated_files/spi1.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_SYSTEM_Initialize
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text18
  3815  00F052                     __ptext18:
  3816                           	opt stack 0
  3817  00F052                     _SPI1_Initialize:
  3818                           	opt stack 29
  3819                           
  3820                           ;spi1.c: 68: SSP1STAT = 0xC0;
  3821                           
  3822                           ;incstack = 0
  3823  00F052  0EC0               	movlw	192
  3824  00F054  6EC7               	movwf	4039,c	;volatile
  3825                           
  3826                           ;spi1.c: 71: SSP1CON1 = 0x22;
  3827  00F056  0E22               	movlw	34
  3828  00F058  6EC6               	movwf	4038,c	;volatile
  3829                           
  3830                           ;spi1.c: 74: SSP1ADD = 0x00;
  3831  00F05A  0E00               	movlw	0
  3832  00F05C  6EC8               	movwf	4040,c	;volatile
  3833  00F05E  0012               	return		;funcret
  3834  00F060                     __end_of_SPI1_Initialize:
  3835                           	opt stack 0
  3836                           tblptru	equ	0xFF8
  3837                           tblptrh	equ	0xFF7
  3838                           tblptrl	equ	0xFF6
  3839                           tablat	equ	0xFF5
  3840                           prodh	equ	0xFF4
  3841                           prodl	equ	0xFF3
  3842                           indf1	equ	0xFE7
  3843                           fsr1h	equ	0xFE2
  3844                           fsr1l	equ	0xFE1
  3845                           indf2	equ	0xFDF
  3846                           postinc2	equ	0xFDE
  3847                           postdec2	equ	0xFDD
  3848                           fsr2h	equ	0xFDA
  3849                           fsr2l	equ	0xFD9
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _PWM4_Initialize *****************
  3853 ;; Defined at:
  3854 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_SYSTEM_Initialize
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text19
  3882  00F092                     __ptext19:
  3883                           	opt stack 0
  3884  00F092                     _PWM4_Initialize:
  3885                           	opt stack 29
  3886                           
  3887                           ;pwm4.c: 68: CCP4CON = 0x3C;
  3888                           
  3889                           ;incstack = 0
  3890  00F092  0E3C               	movlw	60
  3891  00F094  010F               	movlb	15	; () banked
  3892  00F096  6F57               	movwf	87,b	;volatile
  3893                           
  3894                           ;pwm4.c: 71: CCPR4L = 0x7F;
  3895  00F098  0E7F               	movlw	127
  3896  00F09A  6F58               	movwf	88,b	;volatile
  3897                           
  3898                           ;pwm4.c: 74: CCPR4H = 0x00;
  3899  00F09C  0E00               	movlw	0
  3900  00F09E  6F59               	movwf	89,b	;volatile
  3901                           
  3902                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  3903  00F0A0  0EFC               	movlw	-4
  3904  00F0A2  1748               	andwf	72,f,b	;volatile
  3905                           
  3906                           ; BSR set to: 15
  3907  00F0A4  0012               	return		;funcret
  3908  00F0A6                     __end_of_PWM4_Initialize:
  3909                           	opt stack 0
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           indf1	equ	0xFE7
  3917                           fsr1h	equ	0xFE2
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function _PIN_MANAGER_Initialize *****************
  3927 ;; Defined at:
  3928 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_SYSTEM_Initialize
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text20
  3956  00F11A                     __ptext20:
  3957                           	opt stack 0
  3958  00F11A                     _PIN_MANAGER_Initialize:
  3959                           	opt stack 29
  3960                           
  3961                           ;pin_manager.c: 51: LATA = 0x00;
  3962                           
  3963                           ; BSR set to: 15
  3964                           ;incstack = 0
  3965  00F11A  0E00               	movlw	0
  3966  00F11C  6E89               	movwf	3977,c	;volatile
  3967                           
  3968                           ;pin_manager.c: 52: TRISA = 0xFF;
  3969  00F11E  6892               	setf	3986,c	;volatile
  3970                           
  3971                           ;pin_manager.c: 53: ANSELA = 0x2F;
  3972  00F120  0E2F               	movlw	47
  3973  00F122  010F               	movlb	15	; () banked
  3974  00F124  6F38               	movwf	56,b	;volatile
  3975                           
  3976                           ;pin_manager.c: 55: LATB = 0x00;
  3977  00F126  0E00               	movlw	0
  3978  00F128  6E8A               	movwf	3978,c	;volatile
  3979                           
  3980                           ;pin_manager.c: 56: TRISB = 0xFE;
  3981  00F12A  0EFE               	movlw	254
  3982  00F12C  6E93               	movwf	3987,c	;volatile
  3983                           
  3984                           ;pin_manager.c: 57: ANSELB = 0x3E;
  3985  00F12E  0E3E               	movlw	62
  3986  00F130  6F39               	movwf	57,b	;volatile
  3987                           
  3988                           ;pin_manager.c: 58: WPUB = 0x00;
  3989  00F132  0E00               	movlw	0
  3990  00F134  6E61               	movwf	3937,c	;volatile
  3991                           
  3992                           ;pin_manager.c: 60: LATC = 0x07;
  3993  00F136  0E07               	movlw	7
  3994  00F138  6E8B               	movwf	3979,c	;volatile
  3995                           
  3996                           ;pin_manager.c: 61: TRISC = 0xD0;
  3997  00F13A  0ED0               	movlw	208
  3998  00F13C  6E94               	movwf	3988,c	;volatile
  3999                           
  4000                           ;pin_manager.c: 62: ANSELC = 0x00;
  4001  00F13E  0E00               	movlw	0
  4002  00F140  6F3A               	movwf	58,b	;volatile
  4003                           
  4004                           ; BSR set to: 15
  4005                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
  4006  00F142  8EF1               	bsf	intcon2,7,c	;volatile
  4007                           
  4008                           ; BSR set to: 15
  4009  00F144  0012               	return		;funcret
  4010  00F146                     __end_of_PIN_MANAGER_Initialize:
  4011                           	opt stack 0
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           prodh	equ	0xFF4
  4017                           prodl	equ	0xFF3
  4018                           intcon2	equ	0xFF1
  4019                           indf1	equ	0xFE7
  4020                           fsr1h	equ	0xFE2
  4021                           fsr1l	equ	0xFE1
  4022                           indf2	equ	0xFDF
  4023                           postinc2	equ	0xFDE
  4024                           postdec2	equ	0xFDD
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function _OSCILLATOR_Initialize *****************
  4030 ;; Defined at:
  4031 ;;		line 121 in file "mcc_generated_files/mcc.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_SYSTEM_Initialize
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text21
  4059  00F044                     __ptext21:
  4060                           	opt stack 0
  4061  00F044                     _OSCILLATOR_Initialize:
  4062                           	opt stack 29
  4063                           
  4064                           ;mcc.c: 123: OSCCON = 0x70;
  4065                           
  4066                           ; BSR set to: 15
  4067                           ;incstack = 0
  4068  00F044  0E70               	movlw	112
  4069  00F046  6ED3               	movwf	4051,c	;volatile
  4070                           
  4071                           ;mcc.c: 125: OSCCON2 = 0x04;
  4072  00F048  0E04               	movlw	4
  4073  00F04A  6ED2               	movwf	4050,c	;volatile
  4074                           
  4075                           ;mcc.c: 127: OSCTUNE = 0x40;
  4076  00F04C  0E40               	movlw	64
  4077  00F04E  6E9B               	movwf	3995,c	;volatile
  4078  00F050  0012               	return		;funcret
  4079  00F052                     __end_of_OSCILLATOR_Initialize:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           intcon2	equ	0xFF1
  4088                           indf1	equ	0xFE7
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           indf2	equ	0xFDF
  4092                           postinc2	equ	0xFDE
  4093                           postdec2	equ	0xFDD
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           status	equ	0xFD8
  4097                           
  4098 ;; *************** function _EUSART1_Initialize *****************
  4099 ;; Defined at:
  4100 ;;		line 56 in file "mcc_generated_files/eusart1.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_SYSTEM_Initialize
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text22
  4128  00F0A6                     __ptext22:
  4129                           	opt stack 0
  4130  00F0A6                     _EUSART1_Initialize:
  4131                           	opt stack 29
  4132                           
  4133                           ;eusart1.c: 60: BAUD1CON = 0x48;
  4134                           
  4135                           ;incstack = 0
  4136  00F0A6  0E48               	movlw	72
  4137  00F0A8  6EB8               	movwf	4024,c	;volatile
  4138                           
  4139                           ;eusart1.c: 63: RC1STA = 0x90;
  4140  00F0AA  0E90               	movlw	144
  4141  00F0AC  6EAB               	movwf	4011,c	;volatile
  4142                           
  4143                           ;eusart1.c: 66: TX1STA = 0x26;
  4144  00F0AE  0E26               	movlw	38
  4145  00F0B0  6EAC               	movwf	4012,c	;volatile
  4146                           
  4147                           ;eusart1.c: 69: SPBRG1 = 0x2F;
  4148  00F0B2  0E2F               	movlw	47
  4149  00F0B4  6EAF               	movwf	4015,c	;volatile
  4150                           
  4151                           ;eusart1.c: 72: SPBRGH1 = 0x03;
  4152  00F0B6  0E03               	movlw	3
  4153  00F0B8  6EB0               	movwf	4016,c	;volatile
  4154  00F0BA  0012               	return		;funcret
  4155  00F0BC                     __end_of_EUSART1_Initialize:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           intcon2	equ	0xFF1
  4164                           indf1	equ	0xFE7
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           postinc2	equ	0xFDE
  4169                           postdec2	equ	0xFDD
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _RAM_sequential_SPI_write *****************
  4175 ;; Defined at:
  4176 ;;		line 107 in file "main.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  latch           2    7[COMRAM] PTR volatile unsigned ch
  4179 ;;		 -> LATC(1), 
  4180 ;;  pin_number      1    9[COMRAM] unsigned char 
  4181 ;;  address         3   10[COMRAM] unsigned um
  4182 ;;  data_out        2   13[COMRAM] PTR unsigned char 
  4183 ;;		 -> main@string(30), 
  4184 ;;  data_out_siz    1   15[COMRAM] unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  address_arra    3   19[COMRAM] unsigned char [3]
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4196 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;Total ram usage:       15 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    2
  4203 ;; This function calls:
  4204 ;;		_SPI1_Exchange8bit
  4205 ;;		_SPI1_Exchange8bitBuffer
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text23
  4212  00F3D2                     __ptext23:
  4213                           	opt stack 0
  4214  00F3D2                     _RAM_sequential_SPI_write:
  4215                           	opt stack 28
  4216                           
  4217                           ;main.c: 108: uint8_t address_array[3];
  4218                           ;main.c: 109: address_array[2] = address;
  4219                           
  4220                           ;incstack = 0
  4221  00F3D2  C00B  F016         	movff	RAM_sequential_SPI_write@address,RAM_sequential_SPI_write@address_array+2
  4222                           
  4223                           ;main.c: 110: address_array[1] = address >> 8;
  4224  00F3D6  C00B  F011         	movff	RAM_sequential_SPI_write@address,??_RAM_sequential_SPI_write
  4225  00F3DA  C00C  F012         	movff	RAM_sequential_SPI_write@address+1,??_RAM_sequential_SPI_write+1
  4226  00F3DE  C00D  F013         	movff	RAM_sequential_SPI_write@address+2,??_RAM_sequential_SPI_write+2
  4227  00F3E2  C012  F011         	movff	??_RAM_sequential_SPI_write+1,??_RAM_sequential_SPI_write
  4228  00F3E6  C013  F012         	movff	??_RAM_sequential_SPI_write+2,??_RAM_sequential_SPI_write+1
  4229  00F3EA  6A13               	clrf	??_RAM_sequential_SPI_write+2,c
  4230  00F3EC  5011               	movf	??_RAM_sequential_SPI_write,w,c
  4231  00F3EE  6E15               	movwf	RAM_sequential_SPI_write@address_array+1,c
  4232                           
  4233                           ;main.c: 111: address_array[0] = address >> 16;
  4234  00F3F0  C00D  F014         	movff	RAM_sequential_SPI_write@address+2,RAM_sequential_SPI_write@address_array
  4235                           
  4236                           ;main.c: 112: *latch &= ~(1 << pin_number);
  4237  00F3F4  C00A  F011         	movff	RAM_sequential_SPI_write@pin_number,??_RAM_sequential_SPI_write
  4238  00F3F8  0E01               	movlw	1
  4239  00F3FA  6E12               	movwf	(??_RAM_sequential_SPI_write+1)& (0+255),c
  4240  00F3FC  2A11               	incf	??_RAM_sequential_SPI_write,f,c
  4241  00F3FE  D002               	goto	u1224
  4242  00F400                     u1225:
  4243  00F400  90D8               	bcf	status,0,c
  4244  00F402  3612               	rlcf	??_RAM_sequential_SPI_write+1,f,c
  4245  00F404                     u1224:
  4246  00F404  2E11               	decfsz	??_RAM_sequential_SPI_write,f,c
  4247  00F406  D7FC               	goto	u1225
  4248  00F408  5012               	movf	??_RAM_sequential_SPI_write+1,w,c
  4249  00F40A  0AFF               	xorlw	255
  4250  00F40C  6E13               	movwf	(??_RAM_sequential_SPI_write+2)& (0+255),c
  4251  00F40E  C008  FFD9         	movff	RAM_sequential_SPI_write@latch,fsr2l
  4252  00F412  C009  FFDA         	movff	RAM_sequential_SPI_write@latch+1,fsr2h
  4253  00F416  5013               	movf	??_RAM_sequential_SPI_write+2,w,c
  4254  00F418  16DF               	andwf	indf2,f,c
  4255                           
  4256                           ;main.c: 113: SPI1_Exchange8bit(0b00000010);
  4257  00F41A  0E02               	movlw	2
  4258  00F41C  EC30  F078         	call	_SPI1_Exchange8bit
  4259                           
  4260                           ;main.c: 114: SPI1_Exchange8bitBuffer(address_array, 3, (0));
  4261  00F420  0E14               	movlw	low RAM_sequential_SPI_write@address_array
  4262  00F422  6E02               	movwf	SPI1_Exchange8bitBuffer@dataIn,c
  4263  00F424  0E00               	movlw	high RAM_sequential_SPI_write@address_array
  4264  00F426  6E03               	movwf	SPI1_Exchange8bitBuffer@dataIn+1,c
  4265  00F428  0E03               	movlw	3
  4266  00F42A  6E04               	movwf	SPI1_Exchange8bitBuffer@bufLen,c
  4267  00F42C  0E00               	movlw	0
  4268  00F42E  6E05               	movwf	SPI1_Exchange8bitBuffer@dataOut,c
  4269  00F430  0E00               	movlw	0
  4270  00F432  6E06               	movwf	SPI1_Exchange8bitBuffer@dataOut+1,c
  4271  00F434  EC4E  F079         	call	_SPI1_Exchange8bitBuffer	;wreg free
  4272                           
  4273                           ;main.c: 115: SPI1_Exchange8bitBuffer(data_out, data_out_size, (0));
  4274  00F438  C00E  F002         	movff	RAM_sequential_SPI_write@data_out,SPI1_Exchange8bitBuffer@dataIn
  4275  00F43C  C00F  F003         	movff	RAM_sequential_SPI_write@data_out+1,SPI1_Exchange8bitBuffer@dataIn+1
  4276  00F440  C010  F004         	movff	RAM_sequential_SPI_write@data_out_size,SPI1_Exchange8bitBuffer@bufLen
  4277  00F444  0E00               	movlw	0
  4278  00F446  6E05               	movwf	SPI1_Exchange8bitBuffer@dataOut,c
  4279  00F448  0E00               	movlw	0
  4280  00F44A  6E06               	movwf	SPI1_Exchange8bitBuffer@dataOut+1,c
  4281  00F44C  EC4E  F079         	call	_SPI1_Exchange8bitBuffer	;wreg free
  4282                           
  4283                           ;main.c: 116: *latch |= (1 << pin_number);
  4284  00F450  C00A  F011         	movff	RAM_sequential_SPI_write@pin_number,??_RAM_sequential_SPI_write
  4285  00F454  0E01               	movlw	1
  4286  00F456  6E12               	movwf	(??_RAM_sequential_SPI_write+1)& (0+255),c
  4287  00F458  2A11               	incf	??_RAM_sequential_SPI_write,f,c
  4288  00F45A  D002               	goto	u1234
  4289  00F45C                     u1235:
  4290  00F45C  90D8               	bcf	status,0,c
  4291  00F45E  3612               	rlcf	??_RAM_sequential_SPI_write+1,f,c
  4292  00F460                     u1234:
  4293  00F460  2E11               	decfsz	??_RAM_sequential_SPI_write,f,c
  4294  00F462  D7FC               	goto	u1235
  4295  00F464  C008  FFD9         	movff	RAM_sequential_SPI_write@latch,fsr2l
  4296  00F468  C009  FFDA         	movff	RAM_sequential_SPI_write@latch+1,fsr2h
  4297  00F46C  5012               	movf	??_RAM_sequential_SPI_write+1,w,c
  4298  00F46E  12DF               	iorwf	indf2,f,c
  4299  00F470  0012               	return		;funcret
  4300  00F472                     __end_of_RAM_sequential_SPI_write:
  4301                           	opt stack 0
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           intcon2	equ	0xFF1
  4309                           indf1	equ	0xFE7
  4310                           fsr1h	equ	0xFE2
  4311                           fsr1l	equ	0xFE1
  4312                           indf2	equ	0xFDF
  4313                           postinc2	equ	0xFDE
  4314                           postdec2	equ	0xFDD
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8
  4318                           
  4319 ;; *************** function _RAM_sequential_SPI_read *****************
  4320 ;; Defined at:
  4321 ;;		line 119 in file "main.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  latch           2    7[COMRAM] PTR volatile unsigned ch
  4324 ;;		 -> LATC(1), 
  4325 ;;  pin_number      1    9[COMRAM] unsigned char 
  4326 ;;  address         3   10[COMRAM] unsigned um
  4327 ;;  data_in         2   13[COMRAM] PTR unsigned char 
  4328 ;;		 -> main@buffer(30), 
  4329 ;;  data_in_size    1   15[COMRAM] unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  address_arra    3   19[COMRAM] unsigned char [3]
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4341 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;Total ram usage:       15 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    2
  4348 ;; This function calls:
  4349 ;;		_SPI1_Exchange8bit
  4350 ;;		_SPI1_Exchange8bitBuffer
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text24
  4357  00F332                     __ptext24:
  4358                           	opt stack 0
  4359  00F332                     _RAM_sequential_SPI_read:
  4360                           	opt stack 28
  4361                           
  4362                           ;main.c: 120: uint8_t address_array[3];
  4363                           ;main.c: 121: address_array[2] = address;
  4364                           
  4365                           ;incstack = 0
  4366  00F332  C00B  F016         	movff	RAM_sequential_SPI_read@address,RAM_sequential_SPI_read@address_array+2
  4367                           
  4368                           ;main.c: 122: address_array[1] = address >> 8;
  4369  00F336  C00B  F011         	movff	RAM_sequential_SPI_read@address,??_RAM_sequential_SPI_read
  4370  00F33A  C00C  F012         	movff	RAM_sequential_SPI_read@address+1,??_RAM_sequential_SPI_read+1
  4371  00F33E  C00D  F013         	movff	RAM_sequential_SPI_read@address+2,??_RAM_sequential_SPI_read+2
  4372  00F342  C012  F011         	movff	??_RAM_sequential_SPI_read+1,??_RAM_sequential_SPI_read
  4373  00F346  C013  F012         	movff	??_RAM_sequential_SPI_read+2,??_RAM_sequential_SPI_read+1
  4374  00F34A  6A13               	clrf	??_RAM_sequential_SPI_read+2,c
  4375  00F34C  5011               	movf	??_RAM_sequential_SPI_read,w,c
  4376  00F34E  6E15               	movwf	RAM_sequential_SPI_read@address_array+1,c
  4377                           
  4378                           ;main.c: 123: address_array[0] = address >> 16;
  4379  00F350  C00D  F014         	movff	RAM_sequential_SPI_read@address+2,RAM_sequential_SPI_read@address_array
  4380                           
  4381                           ;main.c: 124: *latch &= ~(1 << pin_number);
  4382  00F354  C00A  F011         	movff	RAM_sequential_SPI_read@pin_number,??_RAM_sequential_SPI_read
  4383  00F358  0E01               	movlw	1
  4384  00F35A  6E12               	movwf	(??_RAM_sequential_SPI_read+1)& (0+255),c
  4385  00F35C  2A11               	incf	??_RAM_sequential_SPI_read,f,c
  4386  00F35E  D002               	goto	u1194
  4387  00F360                     u1195:
  4388  00F360  90D8               	bcf	status,0,c
  4389  00F362  3612               	rlcf	??_RAM_sequential_SPI_read+1,f,c
  4390  00F364                     u1194:
  4391  00F364  2E11               	decfsz	??_RAM_sequential_SPI_read,f,c
  4392  00F366  D7FC               	goto	u1195
  4393  00F368  5012               	movf	??_RAM_sequential_SPI_read+1,w,c
  4394  00F36A  0AFF               	xorlw	255
  4395  00F36C  6E13               	movwf	(??_RAM_sequential_SPI_read+2)& (0+255),c
  4396  00F36E  C008  FFD9         	movff	RAM_sequential_SPI_read@latch,fsr2l
  4397  00F372  C009  FFDA         	movff	RAM_sequential_SPI_read@latch+1,fsr2h
  4398  00F376  5013               	movf	??_RAM_sequential_SPI_read+2,w,c
  4399  00F378  16DF               	andwf	indf2,f,c
  4400                           
  4401                           ;main.c: 125: SPI1_Exchange8bit(0b00000011);
  4402  00F37A  0E03               	movlw	3
  4403  00F37C  EC30  F078         	call	_SPI1_Exchange8bit
  4404                           
  4405                           ;main.c: 126: SPI1_Exchange8bitBuffer(address_array, 3, (0));
  4406  00F380  0E14               	movlw	low RAM_sequential_SPI_read@address_array
  4407  00F382  6E02               	movwf	SPI1_Exchange8bitBuffer@dataIn,c
  4408  00F384  0E00               	movlw	high RAM_sequential_SPI_read@address_array
  4409  00F386  6E03               	movwf	SPI1_Exchange8bitBuffer@dataIn+1,c
  4410  00F388  0E03               	movlw	3
  4411  00F38A  6E04               	movwf	SPI1_Exchange8bitBuffer@bufLen,c
  4412  00F38C  0E00               	movlw	0
  4413  00F38E  6E05               	movwf	SPI1_Exchange8bitBuffer@dataOut,c
  4414  00F390  0E00               	movlw	0
  4415  00F392  6E06               	movwf	SPI1_Exchange8bitBuffer@dataOut+1,c
  4416  00F394  EC4E  F079         	call	_SPI1_Exchange8bitBuffer	;wreg free
  4417                           
  4418                           ;main.c: 127: SPI1_Exchange8bitBuffer((0), data_in_size, data_in);
  4419  00F398  0E00               	movlw	0
  4420  00F39A  6E02               	movwf	SPI1_Exchange8bitBuffer@dataIn,c
  4421  00F39C  0E00               	movlw	0
  4422  00F39E  6E03               	movwf	SPI1_Exchange8bitBuffer@dataIn+1,c
  4423  00F3A0  C010  F004         	movff	RAM_sequential_SPI_read@data_in_size,SPI1_Exchange8bitBuffer@bufLen
  4424  00F3A4  C00E  F005         	movff	RAM_sequential_SPI_read@data_in,SPI1_Exchange8bitBuffer@dataOut
  4425  00F3A8  C00F  F006         	movff	RAM_sequential_SPI_read@data_in+1,SPI1_Exchange8bitBuffer@dataOut+1
  4426  00F3AC  EC4E  F079         	call	_SPI1_Exchange8bitBuffer	;wreg free
  4427                           
  4428                           ;main.c: 128: *latch |= (1 << pin_number);
  4429  00F3B0  C00A  F011         	movff	RAM_sequential_SPI_read@pin_number,??_RAM_sequential_SPI_read
  4430  00F3B4  0E01               	movlw	1
  4431  00F3B6  6E12               	movwf	(??_RAM_sequential_SPI_read+1)& (0+255),c
  4432  00F3B8  2A11               	incf	??_RAM_sequential_SPI_read,f,c
  4433  00F3BA  D002               	goto	u1204
  4434  00F3BC                     u1205:
  4435  00F3BC  90D8               	bcf	status,0,c
  4436  00F3BE  3612               	rlcf	??_RAM_sequential_SPI_read+1,f,c
  4437  00F3C0                     u1204:
  4438  00F3C0  2E11               	decfsz	??_RAM_sequential_SPI_read,f,c
  4439  00F3C2  D7FC               	goto	u1205
  4440  00F3C4  C008  FFD9         	movff	RAM_sequential_SPI_read@latch,fsr2l
  4441  00F3C8  C009  FFDA         	movff	RAM_sequential_SPI_read@latch+1,fsr2h
  4442  00F3CC  5012               	movf	??_RAM_sequential_SPI_read+1,w,c
  4443  00F3CE  12DF               	iorwf	indf2,f,c
  4444  00F3D0  0012               	return		;funcret
  4445  00F3D2                     __end_of_RAM_sequential_SPI_read:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           prodh	equ	0xFF4
  4452                           prodl	equ	0xFF3
  4453                           intcon2	equ	0xFF1
  4454                           indf1	equ	0xFE7
  4455                           fsr1h	equ	0xFE2
  4456                           fsr1l	equ	0xFE1
  4457                           indf2	equ	0xFDF
  4458                           postinc2	equ	0xFDE
  4459                           postdec2	equ	0xFDD
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _SPI1_Exchange8bitBuffer *****************
  4465 ;; Defined at:
  4466 ;;		line 89 in file "mcc_generated_files/spi1.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  dataIn          2    1[COMRAM] PTR unsigned char 
  4469 ;;		 -> RAM_sequential_SPI_read@address_array(3), RAM_sequential_SPI_write@address_array(3), main@string(30), NULL(0), 
  4470 ;;  bufLen          1    3[COMRAM] unsigned char 
  4471 ;;  dataOut         2    4[COMRAM] PTR unsigned char 
  4472 ;;		 -> main@buffer(30), NULL(0), 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  bytesWritten    1    6[COMRAM] unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      unsigned char 
  4477 ;; Registers used:
  4478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4484 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;Total ram usage:        6 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    1
  4491 ;; This function calls:
  4492 ;;		_SPI1_Exchange8bit
  4493 ;; This function is called by:
  4494 ;;		_RAM_sequential_SPI_write
  4495 ;;		_RAM_sequential_SPI_read
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text25
  4500  00F29C                     __ptext25:
  4501                           	opt stack 0
  4502  00F29C                     _SPI1_Exchange8bitBuffer:
  4503                           	opt stack 28
  4504                           
  4505                           ;spi1.c: 90: uint8_t bytesWritten = 0;
  4506                           
  4507                           ;incstack = 0
  4508  00F29C  0E00               	movlw	0
  4509  00F29E  6E07               	movwf	SPI1_Exchange8bitBuffer@bytesWritten,c
  4510                           
  4511                           ;spi1.c: 92: if (bufLen != 0) {
  4512  00F2A0  5004               	movf	SPI1_Exchange8bitBuffer@bufLen,w,c
  4513  00F2A2  B4D8               	btfsc	status,2,c
  4514  00F2A4  0012               	return	
  4515                           
  4516                           ;spi1.c: 93: if (dataIn != (0)) {
  4517  00F2A6  5002               	movf	SPI1_Exchange8bitBuffer@dataIn,w,c
  4518  00F2A8  1003               	iorwf	SPI1_Exchange8bitBuffer@dataIn+1,w,c
  4519  00F2AA  A4D8               	btfss	status,2,c
  4520  00F2AC  D026               	goto	l115
  4521  00F2AE  D02A               	goto	l114
  4522  00F2B0                     
  4523                           ;spi1.c: 95: if (dataOut == (0)) {
  4524  00F2B0  5005               	movf	SPI1_Exchange8bitBuffer@dataOut,w,c
  4525  00F2B2  1006               	iorwf	SPI1_Exchange8bitBuffer@dataOut+1,w,c
  4526  00F2B4  A4D8               	btfss	status,2,c
  4527  00F2B6  D00C               	goto	l117
  4528                           
  4529                           ;spi1.c: 96: SPI1_Exchange8bit(dataIn[bytesWritten]);
  4530  00F2B8  5007               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w,c
  4531  00F2BA  0D01               	mullw	1
  4532  00F2BC  50F3               	movf	prodl,w,c
  4533  00F2BE  2402               	addwf	SPI1_Exchange8bitBuffer@dataIn,w,c
  4534  00F2C0  6ED9               	movwf	fsr2l,c
  4535  00F2C2  50F4               	movf	prodh,w,c
  4536  00F2C4  2003               	addwfc	SPI1_Exchange8bitBuffer@dataIn+1,w,c
  4537  00F2C6  6EDA               	movwf	fsr2h,c
  4538  00F2C8  50DF               	movf	indf2,w,c
  4539  00F2CA  EC30  F078         	call	_SPI1_Exchange8bit
  4540                           
  4541                           ;spi1.c: 97: } else {
  4542  00F2CE  D014               	goto	l118
  4543  00F2D0                     l117:
  4544                           
  4545                           ;spi1.c: 98: dataOut[bytesWritten] = SPI1_Exchange8bit(dataIn[bytesWritten]);
  4546  00F2D0  5007               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w,c
  4547  00F2D2  0D01               	mullw	1
  4548  00F2D4  50F3               	movf	prodl,w,c
  4549  00F2D6  2405               	addwf	SPI1_Exchange8bitBuffer@dataOut,w,c
  4550  00F2D8  6ED9               	movwf	fsr2l,c
  4551  00F2DA  50F4               	movf	prodh,w,c
  4552  00F2DC  2006               	addwfc	SPI1_Exchange8bitBuffer@dataOut+1,w,c
  4553  00F2DE  6EDA               	movwf	fsr2h,c
  4554  00F2E0  5007               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w,c
  4555  00F2E2  0D01               	mullw	1
  4556  00F2E4  50F3               	movf	prodl,w,c
  4557  00F2E6  2402               	addwf	SPI1_Exchange8bitBuffer@dataIn,w,c
  4558  00F2E8  6EE1               	movwf	fsr1l,c
  4559  00F2EA  50F4               	movf	prodh,w,c
  4560  00F2EC  2003               	addwfc	SPI1_Exchange8bitBuffer@dataIn+1,w,c
  4561  00F2EE  6EE2               	movwf	fsr1h,c
  4562  00F2F0  50E7               	movf	indf1,w,c
  4563  00F2F2  EC30  F078         	call	_SPI1_Exchange8bit
  4564  00F2F6  6EDF               	movwf	indf2,c
  4565  00F2F8                     l118:
  4566                           
  4567                           ;spi1.c: 99: }
  4568                           ;spi1.c: 101: bytesWritten++;
  4569  00F2F8  2A07               	incf	SPI1_Exchange8bitBuffer@bytesWritten,f,c
  4570  00F2FA                     l115:
  4571  00F2FA  5004               	movf	SPI1_Exchange8bitBuffer@bufLen,w,c
  4572  00F2FC  5C07               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w,c
  4573  00F2FE  B0D8               	btfsc	status,0,c
  4574  00F300  0012               	return	
  4575  00F302  D7D6               	goto	l116
  4576  00F304                     l114:
  4577                           
  4578                           ;spi1.c: 104: if (dataOut != (0)) {
  4579  00F304  5005               	movf	SPI1_Exchange8bitBuffer@dataOut,w,c
  4580  00F306  1006               	iorwf	SPI1_Exchange8bitBuffer@dataOut+1,w,c
  4581  00F308  B4D8               	btfsc	status,2,c
  4582  00F30A  0012               	return	
  4583  00F30C  D00D               	goto	l122
  4584  00F30E                     
  4585                           ;spi1.c: 106: dataOut[bytesWritten] = SPI1_Exchange8bit(0x0);
  4586  00F30E  5007               	movf	SPI1_Exchange8bitBuffer@bytesWritten,w,c
  4587  00F310  0D01               	mullw	1
  4588  00F312  50F3               	movf	prodl,w,c
  4589  00F314  2405               	addwf	SPI1_Exchange8bitBuffer@dataOut,w,c
  4590  00F316  6ED9               	movwf	fsr2l,c
  4591  00F318  50F4               	movf	prodh,w,c
  4592  00F31A  2006               	addwfc	SPI1_Exchange8bitBuffer@dataOut+1,w,c
  4593  00F31C  6EDA               	movwf	fsr2h,c
  4594  00F31E  0E00               	movlw	0
  4595  00F320  EC30  F078         	call	_SPI1_Exchange8bit
  4596  00F324  6EDF               	movwf	indf2,c
  4597                           
  4598                           ;spi1.c: 108: bytesWritten++;
  4599  00F326  2A07               	incf	SPI1_Exchange8bitBuffer@bytesWritten,f,c
  4600  00F328                     l122:
  4601  00F328  5004               	movf	SPI1_Exchange8bitBuffer@bufLen,w,c
  4602  00F32A  5C07               	subwf	SPI1_Exchange8bitBuffer@bytesWritten,w,c
  4603  00F32C  B0D8               	btfsc	status,0,c
  4604  00F32E  0012               	return	
  4605  00F330  D7EE               	goto	l123
  4606  00F332                     __end_of_SPI1_Exchange8bitBuffer:
  4607                           	opt stack 0
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           intcon2	equ	0xFF1
  4615                           indf1	equ	0xFE7
  4616                           fsr1h	equ	0xFE2
  4617                           fsr1l	equ	0xFE1
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _SPI1_Exchange8bit *****************
  4626 ;; Defined at:
  4627 ;;		line 77 in file "mcc_generated_files/spi1.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  data            1    wreg     unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  data            1    0[COMRAM] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      unsigned char 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;Total ram usage:        1 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_SPI1_Exchange8bitBuffer
  4651 ;;		_RAM_sequential_SPI_write
  4652 ;;		_RAM_sequential_SPI_read
  4653 ;;		_RAM_set_SPI_mode
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text26
  4658  00F060                     __ptext26:
  4659                           	opt stack 0
  4660  00F060                     _SPI1_Exchange8bit:
  4661                           	opt stack 28
  4662                           
  4663                           ;incstack = 0
  4664                           ;SPI1_Exchange8bit@data stored from wreg
  4665  00F060  6E01               	movwf	SPI1_Exchange8bit@data,c
  4666                           
  4667                           ;spi1.c: 79: SSP1CON1bits.WCOL = 0;
  4668  00F062  9EC6               	bcf	4038,7,c	;volatile
  4669                           
  4670                           ;spi1.c: 81: SSP1BUF = data;
  4671  00F064  C001  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
  4672  00F068  A0C7               	btfss	4039,0,c	;volatile
  4673  00F06A  D7FE               	goto	l108
  4674                           
  4675                           ;spi1.c: 84: }
  4676                           ;spi1.c: 86: return (SSP1BUF);
  4677  00F06C  50C9               	movf	4041,w,c	;volatile
  4678  00F06E  0012               	return		;funcret
  4679  00F070                     __end_of_SPI1_Exchange8bit:
  4680                           	opt stack 0
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon2	equ	0xFF1
  4688                           indf1	equ	0xFE7
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function _PWM4_LoadDutyValue *****************
  4699 ;; Defined at:
  4700 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  dutyValue       2    0[COMRAM] unsigned int 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;Total ram usage:        4 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_main
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text27
  4728  00F146                     __ptext27:
  4729                           	opt stack 0
  4730  00F146                     _PWM4_LoadDutyValue:
  4731                           	opt stack 30
  4732                           
  4733                           ;pwm4.c: 83: CCPR4L = ((dutyValue & 0x03FC) >> 2);
  4734                           
  4735                           ;incstack = 0
  4736  00F146  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  4737  00F14A  C002  F004         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  4738  00F14E  90D8               	bcf	status,0,c
  4739  00F150  3204               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  4740  00F152  3203               	rrcf	??_PWM4_LoadDutyValue,f,c
  4741  00F154  90D8               	bcf	status,0,c
  4742  00F156  3204               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  4743  00F158  3203               	rrcf	??_PWM4_LoadDutyValue,f,c
  4744  00F15A  5003               	movf	??_PWM4_LoadDutyValue,w,c
  4745  00F15C  010F               	movlb	15	; () banked
  4746  00F15E  6F58               	movwf	88,b	;volatile
  4747                           
  4748                           ;pwm4.c: 86: CCP4CON = (CCP4CON & 0xCF) | ((dutyValue & 0x0003) << 4);
  4749  00F160  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  4750  00F164  0E03               	movlw	3
  4751  00F166  1603               	andwf	??_PWM4_LoadDutyValue,f,c
  4752  00F168  3A03               	swapf	??_PWM4_LoadDutyValue,f,c
  4753  00F16A  0EF0               	movlw	240
  4754  00F16C  1603               	andwf	??_PWM4_LoadDutyValue,f,c
  4755  00F16E  5157               	movf	87,w,b	;volatile
  4756  00F170  0BCF               	andlw	207
  4757  00F172  1003               	iorwf	??_PWM4_LoadDutyValue,w,c
  4758  00F174  6F57               	movwf	87,b	;volatile
  4759                           
  4760                           ; BSR set to: 15
  4761  00F176  0012               	return		;funcret
  4762  00F178                     __end_of_PWM4_LoadDutyValue:
  4763                           	opt stack 0
  4764                           tblptru	equ	0xFF8
  4765                           tblptrh	equ	0xFF7
  4766                           tblptrl	equ	0xFF6
  4767                           tablat	equ	0xFF5
  4768                           prodh	equ	0xFF4
  4769                           prodl	equ	0xFF3
  4770                           intcon2	equ	0xFF1
  4771                           indf1	equ	0xFE7
  4772                           fsr1h	equ	0xFE2
  4773                           fsr1l	equ	0xFE1
  4774                           indf2	equ	0xFDF
  4775                           postinc2	equ	0xFDE
  4776                           postdec2	equ	0xFDD
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           prodh	equ	0xFF4
  4785                           prodl	equ	0xFF3
  4786                           intcon2	equ	0xFF1
  4787                           indf1	equ	0xFE7
  4788                           fsr1h	equ	0xFE2
  4789                           fsr1l	equ	0xFE1
  4790                           indf2	equ	0xFDF
  4791                           postinc2	equ	0xFDE
  4792                           postdec2	equ	0xFDD
  4793                           fsr2h	equ	0xFDA
  4794                           fsr2l	equ	0xFD9
  4795                           status	equ	0xFD8
  4796                           
  4797                           	psect	rparam
  4798  0000                     tblptru	equ	0xFF8
  4799                           tblptrh	equ	0xFF7
  4800                           tblptrl	equ	0xFF6
  4801                           tablat	equ	0xFF5
  4802                           prodh	equ	0xFF4
  4803                           prodl	equ	0xFF3
  4804                           intcon2	equ	0xFF1
  4805                           indf1	equ	0xFE7
  4806                           fsr1h	equ	0xFE2
  4807                           fsr1l	equ	0xFE1
  4808                           indf2	equ	0xFDF
  4809                           postinc2	equ	0xFDE
  4810                           postdec2	equ	0xFDD
  4811                           fsr2h	equ	0xFDA
  4812                           fsr2l	equ	0xFD9
  4813                           status	equ	0xFD8


Data Sizes:
    Strings     778
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      28
    BANK0           160     71      71
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> main@string(BANK0[30]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 30
		 -> main@string(BANK0[30]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 30
		 -> main@string(BANK0[30]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 30
		 -> main@string(BANK0[30]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_25(CODE[52]), STR_24(CODE[58]), STR_23(CODE[23]), STR_22(CODE[38]), 
		 -> STR_21(CODE[55]), STR_20(CODE[5]), STR_19(CODE[43]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_16(CODE[59]), STR_15(CODE[61]), STR_14(CODE[5]), 
		 -> STR_13(CODE[51]), STR_12(CODE[62]), STR_11(CODE[57]), STR_10(CODE[44]), 
		 -> STR_9(CODE[48]), STR_8(CODE[55]), STR_7(CODE[5]), STR_6(CODE[9]), 
		 -> STR_5(CODE[20]), STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[46]), 
		 -> STR_1(CODE[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_26(CODE[7]), main@buffer(BANK0[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    read_line@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@string(BANK0[30]), 

    RAM_sequential_SPI_read@data_in	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    RAM_sequential_SPI_read@latch	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_1[1]), 

    RAM_sequential_SPI_write@data_out	PTR unsigned char  size(2) Largest target is 30
		 -> main@string(BANK0[30]), 

    RAM_sequential_SPI_write@latch	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR_1[1]), 

    SPI1_Exchange8bitBuffer@dataOut	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), NULL(NULL[0]), 

    SPI1_Exchange8bitBuffer@dataIn	PTR unsigned char  size(2) Largest target is 30
		 -> RAM_sequential_SPI_read@address_array(COMRAM[3]), RAM_sequential_SPI_write@address_array(COMRAM[3]), main@string(BANK0[30]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _read_line->_putch
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _atol->___lmul
    _atoi->___wmul
    _RAM_sequential_SPI_write->_SPI1_Exchange8bitBuffer
    _RAM_sequential_SPI_read->_SPI1_Exchange8bitBuffer
    _SPI1_Exchange8bitBuffer->_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0   12205
                                              0 BANK0     71    71      0
                 _PWM4_LoadDutyValue
            _RAM_sequential_SPI_read
           _RAM_sequential_SPI_write
                  _SYSTEM_Initialize
                               _atoi
                               _atol
                              _getch
                             _printf
                          _read_line
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _read_line                                            8     4      4    1008
                                              2 COMRAM     8     4      4
                       _EUSART1_Read
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    16      6    3093
                                             12 COMRAM    16    10      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atol                                                14    10      4     834
                                             12 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2     759
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RAM_sequential_SPI_write                            15     6      9    1968
                                              7 COMRAM    15     6      9
                  _SPI1_Exchange8bit
            _SPI1_Exchange8bitBuffer
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _RAM_sequential_SPI_read                             15     6      9    3108
                                              7 COMRAM    15     6      9
                  _SPI1_Exchange8bit
            _SPI1_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bitBuffer                              6     1      5    1295
                                              1 COMRAM     6     1      5
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM4_LoadDutyValue
   _RAM_sequential_SPI_read
     _SPI1_Exchange8bit
     _SPI1_Exchange8bitBuffer
       _SPI1_Exchange8bit
   _RAM_sequential_SPI_write
     _SPI1_Exchange8bit
     _SPI1_Exchange8bitBuffer
       _SPI1_Exchange8bit
     _strlen (ARG)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _atoi
     ___wmul
     _isdigit
   _atol
     ___lmul
     _isdigit
   _getch
     _EUSART1_Read
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write
   _read_line
     _EUSART1_Read
     _putch
       _EUSART1_Write
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1C      1C       1       29.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      47       5       44.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 02 22:22:10 2018

                    _SPI1_Exchange8bit F060                     ?_SPI1_Exchange8bit 0001  
                                   l27 F07C                    ___wmul@multiplicand 0003  
         RAM_sequential_SPI_read@latch 0008                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                                    l122 F328  
                                  l114 F304                                    l123 F30E  
                                  l115 F2FA                                    l108 F068  
                                  l116 F2B0                                    l117 F2D0  
                                  l213 F47A                                    l118 F2F8  
                                  l214 F4A6                                    l303 F836  
                                  l320 F256                                    l304 F88A  
                                  l321 F26A                                    l305 F83C  
                                  l217 F4DE                                    l171 F8E0  
                                  l172 F954                                    l173 F938  
                                  l182 F9A0                                    l174 F96C  
                                  l191 FCDC                                    l175 F93C  
                                  l192 FBE8                                    l176 F940  
                                  l193 FBCA                                    l185 FA2C  
                                  l177 F946                                    l194 FC00  
                                  l291 F7C6                                    l195 FBD0  
                                  l187 FA40                                    l292 F6F6  
                                  l284 F6E0                                    l196 FBD4  
                                  l285 F6F0                                    l197 FBDA  
                                  l189 FB98                                    l286 F790  
                                  l294 F74A                                    l295 F720  
                                  l472 F51A                                    l481 F5D8  
                                  l473 F516                                    l297 F774  
                                  l298 F788                                    l475 F55A  
                                  l299 F7EE                                    l492 F680  
                                  l493 F62C                                    l478 F5A6  
                                  l750 F232                                    l479 F56C  
                                  l495 F6C4                                    l751 F23C  
                                  l760 F1E0                                    l489 F622  
                                  l761 F1EA                                    l746 F212  
                                  l667 F0EC                                    l747 F20A  
                                  l756 F1C8                                    l757 F1C0  
                                  l890 F186                                    l891 F182  
                         __CFG_CPB$OFF 000000                                    _PR2 000FBB  
                         __CFG_CPD$OFF 000000                                    u910 F742  
                                  u840 F216                                    u920 F76C  
                                  u917 F738                                    u870 F1CC  
                                  u927 F762                                    u970 F824  
                                  u990 F892                    ??_SPI1_Exchange8bit 0001  
                      _TMR2_Initialize F080                        _PWM4_Initialize F092  
       SPI1_Exchange8bitBuffer@dataOut 0005                           __CFG_LVP$OFF 000000  
                                 l1800 F5A2                                   l1496 F03A  
                                 l1680 F7F2                                   l1904 F9C6  
                                 l1894 F990                                   STR_1 FFBF  
                                 STR_2 FEEC                                   STR_3 FFD6  
                                 STR_4 FFC2                                   STR_5 FFAE  
                                 STR_6 FFEA                                   STR_7 FFFA  
                                 STR_8 FE1E                                   STR_9 FEBC  
                                 u1030 F4B6                                   u1040 F4C4  
                                 u1204 F3C0                                   u1205 F3BC  
                                 u1224 F404                                   u1225 F400  
                                 u1234 F460                                   u1235 F45C  
                                 u1260 F986                                   _LATA 000F89  
                                 _LATB 000F8A                                   _LATC 000F8B  
                                 u1280 F9C6                                   u1194 F364  
                                 u1290 FA1E                                   u1195 F360  
                                 _TMR2 000FBC                                   _WPUB 000F61  
                        _EUSART1_Write F038                                   _atoi F514  
                                 _atol F5E2                                   _main F8AE  
                        ?_EUSART1_Read 0001                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                          __CFG_BORV$190 000000  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0000              __end_of_SPI1_Exchange8bit F070  
                        __CFG_IESO$OFF 000000                           ___param_bank 000000  
RAM_sequential_SPI_write@data_out_size 0010         __size_of_OSCILLATOR_Initialize 000E  
        __end_of_OSCILLATOR_Initialize F052                                  ?_atoi 0007  
                                ?_atol 000D                                  ?_main 0001  
                                STR_10 FF1A                                  STR_11 FDE5  
                                STR_20 FFFA                                  STR_12 FCF5  
                                STR_21 FE1E                                  STR_13 FE89  
                                STR_14 FFFA                                  STR_22 FF71  
                                STR_23 FF97                                  STR_15 FD33  
                                STR_24 FDAB                                  STR_16 FD70  
                                STR_17 FDE0                                  STR_25 FE55  
                                STR_18 FDE0                                  STR_26 FFF3  
                                STR_19 FF46                                  _T2CON 000FBA  
                       __CFG_DEBUG$OFF 000000                        __end_of___lwdiv F246  
                      __end_of___lwmod F1F4                     _PWM4_LoadDutyValue F146  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0005                          __CFG_WRT3$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                                  _getch F022  
                      __end_of_dpowers FCF5                _SPI1_Exchange8bitBuffer F29C  
                      __end_of_isdigit F0F4                    ?_PWM4_LoadDutyValue 0001  
                   __CFG_MCLRE$EXTMCLR 000000                                  atoi@a 000C  
                                atol@a 0016                                  atol@c 001A  
                                atoi@s 0007                                  atol@s 000D  
                                _putch F02E                                  main@i 00A1  
                                main@n 009C                         ?_EUSART1_Write 0001  
                                tablat 000FF5                         ??_EUSART1_Read 0001  
                                status 000FD8                         __CFG_HFOFST$ON 000000  
                      _TMR2_StartTimer F01E               __size_of_SPI1_Initialize 000E  
                       __CFG_PBADEN$ON 000000       __end_of_RAM_sequential_SPI_write F472  
                      __initialization F028                           __end_of_atoi F5E2  
                         __end_of_atol F6D6             __end_of_EUSART1_Initialize F0BC  
                         __end_of_main FCEA                   ??_PWM4_LoadDutyValue 0003  
              __end_of_PWM4_Initialize F0A6                __end_of_TMR2_Initialize F092  
             ?_RAM_sequential_SPI_read 0008                                 ??_atoi 0009  
                               ??_atol 0011                                 ??_main 001D  
                        __activetblptr 000003                         __CFG_PLLCFG$ON 000000  
                               ?_getch 0001                                 _CCPR4H 000F59  
                               _CCPR4L 000F58                                 _ANSELA 000F38  
                               ?_putch 0001                                 _ANSELB 000F39  
                               _ANSELC 000F3A                                 _RC1STA 000FAB  
                       __CFG_WDTEN$OFF 000000                                 _RCREG1 000FAE  
                               _OSCCON 000FD3                                 _SPBRG1 000FAF  
                               _TX1STA 000FAC                                 _TXREG1 000FAD  
                SPI1_Exchange8bit@data 0001             __size_of_SPI1_Exchange8bit 0010  
                       __CFG_XINST$OFF 000000                           _CCPTMRS1bits 000F48  
                               ___lmul F246                                 ___wmul F0F4  
                       __CFG_STVREN$ON 000000                              ??___lwdiv 0005  
                            ??___lwmod 000C                                 _printf F6D6  
                               main@ch 00A6                                 _strlen F178  
                            ??_isdigit 0001              ??_SPI1_Exchange8bitBuffer 0007  
                         __mediumconst FCEA                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      ??_EUSART1_Write 0001                __end_of_TMR2_StartTimer F022  
                    _SYSTEM_Initialize F0BC                             __accesstop 0060  
              __end_of__initialization F028                     ?_SYSTEM_Initialize 0001  
                        ___rparam_used 000001      RAM_sequential_SPI_read@pin_number 000A  
      __end_of_RAM_sequential_SPI_read F3D2                         __pcstackCOMRAM 0001  
                  ??_SYSTEM_Initialize 0001                          __end_of_getch F028  
             _RAM_sequential_SPI_write F3D2                      ??_SPI1_Initialize 0001  
  RAM_sequential_SPI_read@data_in_size 0010                          __end_of_putch F038  
                     ?_PWM4_Initialize 0001                       ?_TMR2_Initialize 0001  
          PWM4_LoadDutyValue@dutyValue 0001                   __end_of_EUSART1_Read F080  
                              ??_getch 0001              __end_of_SYSTEM_Initialize F0D6  
                              ??_putch 0002       RAM_sequential_SPI_write@data_out 000E  
                   __size_of_read_line 00A2                     __CFG_CCP2MX$PORTC1 000000  
                              ?___lmul 0001                                ?___wmul 0001  
                   __CFG_CCP3MX$PORTB5 000000                                _CCP4CON 000F57  
                       ___lmul@product 0009                                ?_printf 000D  
                              ?_strlen 0001        RAM_sequential_SPI_write@address 000B  
                              _OSCCON2 000FD2                      __CFG_PRICLKEN$OFF 000000  
                              _OSCTUNE 000F9B                                _SPBRGH1 000FB0  
                              _SSP1ADD 000FC8                                _SSP1BUF 000FC9  
                     ?_TMR2_StartTimer 0001                        __CFG_PWRTEN$OFF 000000  
                              __Hparam 0000                                __Lparam 0000  
                      __size_of___lmul 0056                        __size_of___wmul 0026  
                              ___lwdiv F1F4                                ___lwmod F1B2  
                              __pcinit F028                                __ramtop 1000  
                              __ptext0 F8AE                                __ptext1 F178  
                              __ptext2 F472                                __ptext3 F6D6  
                              __ptext4 F02E                                __ptext5 F038  
                              __ptext6 F1B2                                __ptext7 F1F4  
                              __ptext8 F022                                __ptext9 F070  
                      __size_of_printf 01D8                        __size_of_strlen 003A  
                              _dpowers FCEB                  _OSCILLATOR_Initialize F044  
                            _T2CONbits 000FBA                                _isdigit F0D6  
                    __end_of_read_line F514                     _EUSART1_Initialize F0A6  
             ??_PIN_MANAGER_Initialize 0001                                main@dtc 009D  
           __size_of_SYSTEM_Initialize 001A                                main@ind 00A3  
     __size_of_RAM_sequential_SPI_read 00A0                   end_of_initialization F028  
                  ?_EUSART1_Initialize 0001                                printf@c 001C  
                              printf@f 000D                                postdec2 000FDD  
                              postinc2 000FDE                  __size_of_EUSART1_Read 0010  
          __size_of_PWM4_LoadDutyValue 0032                   ??_EUSART1_Initialize 0001  
                              strlen@s 0001                    EUSART1_Write@txData 0001  
                           main@buffer 007E                        _SPI1_Initialize F052  
                         _EUSART1_Read F070             ??_RAM_sequential_SPI_write 0011  
                           main@string 0060                         __end_of___lmul F29C  
                       __end_of___wmul F11A                 ?_OSCILLATOR_Initialize 0001  
                       __end_of_printf F8AE                         __end_of_strlen F1B2  
                  start_initialization F028        __size_of_PIN_MANAGER_Initialize 002C  
                          putch@txData 0002                  __end_of_EUSART1_Write F044  
                             ??___lmul 0009                               ??___wmul 0005  
                     read_line@max_len 0005               ?_SPI1_Exchange8bitBuffer 0002  
                             ??_printf 0013                             read_line@c 000A  
                           read_line@i 0008                             read_line@s 0003  
                             ??_strlen 0003                          __pcstackBANK0 0060  
             __size_of_PWM4_Initialize 0014               __size_of_TMR2_Initialize 0012  
              _RAM_sequential_SPI_read F332                __end_of_SPI1_Initialize F060  
                     ___lwdiv@dividend 0001                 _PIN_MANAGER_Initialize F11A  
                        __pmediumconst FCEA                               ?___lwdiv 0001  
                             ?___lwmod 0008                               _BAUD1CON 000FB8  
                             ?_isdigit 0001                       ___lwdiv@quotient 0005  
                       __size_of_getch 0006                              _read_line F472  
                       __size_of_putch 000A          SPI1_Exchange8bitBuffer@dataIn 0002  
                       ___wmul@product 0005          SPI1_Exchange8bitBuffer@bufLen 0004  
             __size_of_TMR2_StartTimer 0004                               _PIR1bits 000F9E  
      __end_of_SPI1_Exchange8bitBuffer F332                       __CFG_WDTPS$32768 000000  
                             _SSP1CON1 000FC6                               _SSP1STAT 000FC7  
                    ___wmul@multiplier 0001                             printf@flag 0014  
            ??_RAM_sequential_SPI_read 0011                             printf@prec 0015  
                     ?_SPI1_Initialize 0001                      ___lmul@multiplier 0001  
                          _INTCON2bits 000FF1                             ?_read_line 0003  
                    ??_PWM4_Initialize 0001                      ??_TMR2_Initialize 0001  
                             __Hrparam 0000             __end_of_PWM4_LoadDutyValue F178  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                    __CFG_P2BMX$PORTB5 000000                ??_OSCILLATOR_Initialize 0001  
          __size_of_EUSART1_Initialize 0016                       __size_of___lwdiv 0052  
                     __size_of___lwmod 0042                            _isdigit$950 0002  
       RAM_sequential_SPI_read@address 000B         RAM_sequential_SPI_read@data_in 000E  
                     __size_of_isdigit 001E                        ___lwdiv@divisor 0003  
                      ___lwdiv@counter 0007                               __ptext10 F5E2  
                             __ptext11 F246                               __ptext20 F11A  
                             __ptext12 F514                               __ptext21 F044  
                             __ptext13 F0D6                               __ptext22 F0A6  
                             __ptext14 F0F4                               __ptext23 F3D2  
                             __ptext15 F0BC                               __ptext24 F332  
                             __ptext16 F080                               __ptext25 F29C  
                             __ptext17 F01E                               __ptext26 F060  
                             __ptext18 F052                               __ptext27 F146  
                             __ptext19 F092                           _SSP1CON1bits 000FC6  
                        __size_of_atoi 00CE                          __size_of_atol 00F4  
                        __size_of_main 043C                             _RC1STAbits 000FAB  
RAM_sequential_SPI_write@address_array 0014                               atoi@sign 000B  
                             atol@sign 0015                      ??_TMR2_StartTimer 0001  
                            printf@val 001A                           _SSP1STATbits 000FC7  
    __size_of_RAM_sequential_SPI_write 00A0              ?_RAM_sequential_SPI_write 0008  
        RAM_sequential_SPI_write@latch 0008                               isdigit@c 0003  
                          ??_read_line 0007       __size_of_SPI1_Exchange8bitBuffer 0096  
                     ___lwmod@dividend 0008                ?_PIN_MANAGER_Initialize 0001  
  SPI1_Exchange8bitBuffer@bytesWritten 0007                               printf@ap 0018  
                             printf@cp 0016                 __size_of_EUSART1_Write 000C  
                      ___lwmod@divisor 000A                               strlen@cp 0005  
                      ___lwmod@counter 000C                      __CFG_T3CMX$PORTC0 000000  
 RAM_sequential_SPI_read@address_array 0014         __end_of_PIN_MANAGER_Initialize F146  
                    __CFG_FOSC$INTIO67 000000     RAM_sequential_SPI_write@pin_number 000A  
